patent_number,patent_date,patent_num_combined_citations,patent_kind,patent_abstract,patent_id
10009238,2018-06-26,59,B2,"A cloud management system is described herein that provides the ability for an application to span two or more clouds while allowing operation, management, and troubleshooting of the distributed application as a single application. The system provides infrastructure that communicates across datacenters for execution and for centralizing knowledge of instances of an application that are running at different locations. The infrastructure provided by the system monitors both the application and connections between the clouds, with intelligence to know if issues are within the application or because of the connection between the clouds. The system coordinates management functions across multiple cloud platforms/locations. Thus, the cloud management system creates a single monitoring and troubleshooting interface and knowledge and execution fabric across multiple clouds so that applications spread across multiple clouds can be monitored, managed, and debugged more easily.",10009238
10013239,2018-07-03,23,B2,"Methods, systems, and computer program products are provided for developing application definition packages, and deploying the application definition packages at cloud services to produce real-time data analytics applications. In one implementation, a selection is received of an application definition package that defines a real-time data analytics application. The application definition package indicates an application name and includes at least one payload definition, reference data definition, and query definition. A domain name is provided for the real-time data analytics application, and a cloud service is generated that is associated with the domain name. The application definition package is applied to an application template to generate a finalized real-time data analytics package. The finalized real-time data analytics package is instantiated in the cloud service to create a network-accessible instance of the real-time data analytics application.",10013239
10025492,2018-07-17,40,B2,"A pointing detecting device is described. In an embodiment, a device comprises: a display; a processor; a storage containing instructions; wherein the instructions cause the processor to: select a set of points from a point cloud representing a pointing object in proximity or in contact of the display; determine the selected set of points as control points of a computational smooth surface representing the pointing object; determine a point nearest to the display on the computational smooth surface; based on the point nearest to the display, determine a point in a direction of a gradient of a curvature of the computational smooth surface; and report the point as a location of a desired pointing or touch action.",10025492
10025678,2018-07-17,35,B2,"Systems and methods are provided for any party in a cloud ecosystem (cloud providers of such resources, the intermediate management software for such resources, and the end user of such resources) to detect and resolve faulty resources synchronously or asynchronously, before said faults adversely affect the users' workloads. The system requests a service or set of one or more resources within a cloud, automatically checking the infrastructure for various faults that would cause it to be non-functional, including pre-defined and user-defined checks, and resolving them before including the infrastructure in the working service cluster of resources. The system presents an API to the user that returns only functional, production-quality resources that are not in a faulty state. An API that tests and resolves bad infrastructure can be registered during the request or a preceding/subsequent API call, removing the need for the end-user to deal with various types of infrastructure faults.",10025678
10026041,2018-07-17,31,B2,"An interoperable platform that provides a way to automatically compose and execute even complex workflows without writing code is described. A set of pre-built functional building blocks can be provided. The building blocks perform data transformation and machine learning functions. The functional blocks have few well known plug types. The building blocks can be composed to build complex compositions. Interoperability between data formats, metadata schema and interfaces to machine learning (ML) functions and trained machine learning models can be provided with no loss of information. A cloud runtime environment can be provided in which the composed workflows can be hosted as REST API to run in production.",10026041
10027753,2018-07-17,35,B2,"One or more techniques and/or systems are provided for cloud service hosting on a client device. For example, a cloud service may comprise data and/or functionality that may be consumed by apps on client devices. The cloud service may be hosted within a cloud computing environment because a client device may not comprise processing resources capable of hosting the entire cloud service. Accordingly, a local service may be deployed on a client device as a local instantiation of the cloud service. For example, the local service may be a local instantiation of at least a portion of the data and/or functionality of the cloud service. In this way, the local service may utilize fewer resources than the cloud service, and may locally process requests from apps on the client device. For example, a map local service may process requests using map data locally cached from a map cloud service.",10027753
10038619,2018-07-31,114,B2,Technologies are described herein for providing a monitoring service in a cloud-based computing environment. A request is received from a user to subscribe to the monitoring service. The monitor workflow may correspond to the monitoring service. A first call to a finder application is executed over a communications network to retrieve data points according to the monitor workflow. A second call to an analyzer application is executed over the communications network to identify a relevant data point in the data points. A third call to a notifier application is executed over the communications network to notify the user of the relevant data point.,10038619
10052766,2018-08-21,16,B2,"Various technologies described herein pertain to automatic in-situ calibration and registration of a depth sensor and a robotic arm, where the depth sensor and the robotic arm operate in a workspace. The robotic arm can include an end effector. A non-parametric technique for registration between the depth sensor and the robotic arm can be implemented. The registration technique can utilize a sparse sampling of the workspace (e.g., collected during calibration or recalibration). A point cloud can be formed over calibration points and interpolation can be performed within the point cloud to map coordinates in a sensor coordinate frame to coordinates in an arm coordinate frame. Such technique can automatically incorporate intrinsic sensor parameters into transformations between the depth sensor and the robotic arm. Accordingly, an explicit model of intrinsics or biases of the depth sensor need not be utilized.",10052766
10055561,2018-08-21,41,B2,"Embodiments are directed to providing an identity risk score as part of an authentication assertion, applying operating heuristics to determine an operating application's validity and to providing identity risk scores to requesting third parties. In one scenario, an authentication server receives from a cloud service portal various user credentials from a user. The user credentials identify a user to the authentication server. The authentication server verifies the user's identity using the received credentials and generates an identity risk score based on one or more identity factors. The identity factors indicate a likelihood that the user is a valid user. The authentication server encapsulates the generated identity risk score in an authentication assertion and sends the authentication assertion that includes the generated identity risk score to the cloud service portal.",10055561
10057302,2018-08-21,55,B2,"Embodiments personalize a set of network access points (NAPs) acting as captive portals for each user and/or user device. A cloud service, or the user device, accesses context describing the user device. The context identifies at least one NAP, and may include accounting data. One of the NAP is selected for connection based on the context, and an instruction set associated with the selected NAP is provided for replay by the user device to connect through the NAP. In some embodiments, instructions within the instruction set are also personalized to the user and/or user device based on the context.",10057302
10061652,2018-08-28,29,B2,"Technologies for managing fault recovery in a cloud computing environment may be used after faults of various sizes, including faults which put total functioning capacity below subscribed capacity. Computing services have repair priorities. A fault recovery manager selects a higher priority service whose capacity is below a minimum availability, and chooses a lower priority service still above its minimal availability, and reassigns capacity from the lower priority service to the higher priority service without depriving the lower priority service of operability. Capacity reassignment continues at least until the higher priority service is at or above minimal availability, or the lower priority service is at minimal availability. Lower priority services may also be terminated entirely to free up resources for higher priority services. New deployments may be prevented until all services are at or above minimal availability. Spare capacity may be reserved against demand fluctuations or further faults.",10061652
10061678,2018-08-28,30,B2,"Automated validation of the creation of indices in an environment that include multiple and potential many databases, such as perhaps a cloud computing environment. A validation module validates index impact of a created index by using a validation data store that contains validation data originating from a database collection. Index impact may be estimated by evaluating validation data generated prior to and after the creation of the index to thereby determine whether the created index results in overall improved query performance on the database collection for those queries that target the newly indexed database entity. Such validation data need not even contain private data that was contained within the query itself, and might be, for instance, query performance data, or execution plans associated with the query, with private data redacted.",10061678
10063554,2018-08-28,16,B2,"A system and method for detecting unauthorized access to cloud applications based on velocity events are presented. The method includes identifying a first access attempt to a cloud application at a first time and from a first location; identifying a second access attempt to a cloud application at a second time and from a second location; computing a velocity between the first access attempt and the second access attempt based on the first time, the second time, the first location, and the second location; checking if the computed velocity is greater than a velocity threshold; and generating a velocity event when the computed velocity is greater than the velocity threshold, wherein the velocity event indicates that an access attempt is unauthorized.",10063554
10073726,2018-09-11,23,B2,Outage detection in a cloud based service is provided using usage data based error signals. Usage data is collected from component of the cloud based service or client devices of the cloud based service based on customer actions on the cloud based service. The usage data is aggregated and normalized to generate an error signal from errors generated from a component of the cloud based service. An outage is detected from the error signal. An alert that includes information associated with the outage and one or more customers impacted by the outage is generated.,10073726
10073963,2018-09-11,94,B2,"A method of storing data from a whiteboard application executed on a computing system including an interactive display device is provided. The method comprises storing, in a memory of the computing system, whiteboard data input to the whiteboard application in response to user interaction with the interactive display device, displaying a login selector on the interactive display device, upon detecting actuation of the login selector, identifying the user based on credentials of the user; and in response to identifying the user, (i) retrieving previews of stored whiteboard files from a user account in a cloud-based storage system corresponding to the identity of the user, (ii) displaying the previews on the interactive display device, and (iii) uploading the whiteboard data as a whiteboard file from the memory of the computing system to the user account.",10073963
10073971,2018-09-11,12,B2,"Aspects of the subject disclosure are directed towards protecting machines, such as virtual machines in a cloud datacenter, from receiving unwanted traffic, and also reducing bandwidth by eliminating redundant data transmissions. In one aspect, an agent intercepts packets from a source, and determines whether the destination is allowed to receive packets from the source, based upon a communication group membership. The agent also may drop packets based upon malware/fraud signatures. The agent also attempts to reduce bandwidth by replacing redundant content with identifiers (e.g., hashcodes), which a destination machine uses to rebuild the original content. A destination-side agent may perform the same or similar communication group membership and malware/fraud signature filtering operations, and reassemble redundancy-reduced content from received identifiers as needed.",10073971
10075531,2018-09-11,20,B2,"The automatic establishing of the connection between the public cloud and the on-premises resource. First, the bridging infrastructure is automatic accessed. The bridging infrastructure is configured to interact with a user system within the private network using a first control. For instance, it is this first control that may be represented as an executable within the configuration package used in provisioning the connection. A second control is provided to the application running in the public cloud. The second control is structured such that the at least one application may be used to securely connect via the bridging infrastructure with an on-premises resource of the private network.",10075531
10078536,2018-09-18,32,B2,"Building binary packages for software products, particularly large-scale software products, is a highly computation intensive process. Thus, it is desirable to distribute the workload over a large number of computing nodes so as to have the build process complete in an optimal period of time. One environment providing compute resources that can be utilized for a highly available and dynamically scalable distributed build process is an elastic compute cloud. In such an environment, virtual machines can be instantiated and destroyed as the resource requirements of the build process dictate. This has the advantage that dedicated hardware is unneeded, and excess capacity on the hardware employed can be employed for other computation tasks when the build process is idle. Presented herein are systems, methods and computer storage media for distributing a highly available and scalable build service, suitable for use in an elastic compute environment or other distributed environment.",10078536
10079818,2018-09-18,26,B2,"Embodiments are directed to provisioning private virtual machines in a public cloud and to managing private virtual machines hosted on a public cloud. In one scenario, a virtual network is established at a public cloud environment based on a request received from a private domain, and an authenticated session is established between the virtual network and the private domain. A virtual machine is hosted within the virtual network. The virtual machine is configured to be accessible to a user authenticated to the virtual machine, and is configured to run an application using data received from the private domain. Private data is received from the private domain over the authenticated session, and the authenticated user is provided access to the application running at the virtual machine, including providing the authenticated user access to the private data.",10079818
10084785,2018-09-25,18,B2,"An application may be configured with two or more cloud contexts and one or more identity Systems. Using this information, the application has the ability to identify the remote cloud environment that a particular subsystem needs to interact with. The application communicates with the appropriate identity system to retrieve tokens dynamically for targeting that remote cloud.",10084785
10084807,2018-09-25,10,B2,"A method and proxy device for detecting bypass vulnerabilities in a cloud-computing platform are provided. The method includes identifying an access attempt by a client device to a cloud-based application hosted in the cloud-computing platform; identifying login information corresponding to the identified access attempt; requesting authenticated login information from a central authentication system; correlating the login information corresponding to the access attempt with the authenticated login information; determining, based on the correlation, whether a bypass vulnerability exists; and generating a bypass event when it is determined that the bypass vulnerability has been exploited wherein the bypass event indicates that the access attempt to the cloud-based application has not been properly authenticated.",10084807
10084868,2018-09-25,24,B2,"A gateway that may be implemented in a local network and that communicates with a cloud network to provide efficient services in a weakly connected setting is disclosed. The gateway may be configured to enable services that efficiently utilize resources in both of the gateway and the cloud network, and provide a desired quality of service while operating in a weakly connected setting. The gateway may provide data collection and processing, local network services, and enable cloud services that utilize data collected and processed by the gateway. The local network may include one or more sensors and/or video cameras that provide data to the gateway. In a further implementation, the gateway may determine an allocation of one or more tasks of a service between the gateway and a cloud network by determining the allocation of the one or more service tasks based on desired service latency.",10084868
10088317,2018-10-02,10,B2,"Methods and systems for determining the location of an agent within an environment using a hybrid approach are provided. The hybrid approach allows a potentially large physical space to be compressed in the form of a directed graph, in which edges are paths and nodes are locations. An image comparison produces observations for each location and path, which can be used to probabilistically locate the agent in the environment and to select a portion of the 3D point cloud for comparison. The agent can then be localized within the 3D point cloud, or metric-accurate map, using the same features utilized for image matching in the probabilistic location.",10088317
10089323,2018-10-02,31,B2,"In one embodiment, a telemetry system may track a cloud synchronization system to improve performance. A service proxy 114 may receive a matching file metadata set 304 for a matching file 134 stored in a cloud user account 132 of a cloud synchronization system. The service proxy 114 may execute a synchronization verification of the matching file metadata set 304 to a local file 112 stored in a client device 110. The service proxy 114 may create a telemetry report 400 describing a synchronization error 412 as determined by the synchronization verification.",10089323
10116748,2018-10-30,54,B2,"Various embodiments enable mobile devices, such as phones and the like, to integrate with an in-vehicle information/entertainment system to enable the user to control the in-vehicle information/entertainment system by way of their mobile phone. Users can leverage the functionality of their mobile phone to promote an in-vehicle experience which can be contextually tailored to the user's or the vehicle's context. Yet other embodiments can purvey an in-vehicle experience through a cloud based service.",10116748
10122581,2018-11-06,21,B2,Personalization data such as settings and/or state is migrated across devices including mobile phones. Device personalizations are pushed to a cloud service or other mechanism for backup and subsequent transmission to other devices. The personalization data can later be employed to configure one or more other devices in the same manner as a first device.,10122581
10129344,2018-11-13,30,B2,User interface integration across multiple clouds is achieved by hosting UI extensions for different services in the same browser window. The UI extensions are initialized by a shell with any necessary security context for the corresponding cloud. The shell provides versioning so that the newest version of the UI is presented to users for all versions of a service. A connector in a local cloud provides translation between APIs across different clouds.,10129344
10133613,2018-11-20,46,B2,"A digital assistant includes an extensibility client that interfaces with application extensions that are built by third-party developers so that various aspects of application user experiences, content, or features may be integrated into the digital assistant and rendered as native digital assistant experiences. Application extensions can use a variety of services provided from cloud-based and/or local sources such as language/vocabulary, user preferences, and context services that add intelligence and contextual relevance while enabling the extensions to plug in and operate seamlessly within the digital assistant context. Application extensions may also access and utilize general digital assistant functions, data structures, and libraries exposed by the services and implement application domain-specific context and behaviors using the programming features captured in the extension. Such extensibility to third party applications can broaden the scope of the database of information that the digital assistant may use to answer questions and perform actions for the user.",10133613
10135907,2018-11-20,24,B2,"Releases to the production environment of a cloud computing environment are deployed in a manner that maintains control over restricted data and the data plane of the cloud computing environment. A DevOps personnel is tasked with developing the release. However, the DevOps personnel is not authorized to deploy the release to the cloud computing environment because the DevOps personnel does not have access to restricted data in the cloud computing environment or the ability to modify the cloud computing environment to gain access to restricted data. Operating personnel who has access to restricted data and the right to modify the cloud computing environment is notified of the release and given release specifications providing details of the release. If the operator approves the release, the release is transferred to the cloud computing environment. A deployment engine then automatically deploys the release to the production environment of the cloud computing environment.",10135907
10136290,2018-11-20,16,B2,"Aspects of the technology described herein identify a trusted group of devices that collaborate to minimize device limitations (e.g., data use, bandwidth, battery life, and the like). Personal assistant services or cloud-based services utilize user data (e.g., web browsing, calendar entries, communication data, social networks, and the like) and device data (e.g., location data, Bluetooth beacons, Wi-Fi, and the like) provided by user devices to identify devices in the trusted group of devices. A handshake between the devices establishes a means of communication and a selected topology. A hub device is selected from the trusted group of devices to upload or download relevant data based on the selected topology. The hub device shares the relevant data with the member devices via the established means of communication.",10136290
10140140,2018-11-27,16,B2,"In various embodiments, methods and systems for remotely customizing a virtual machine in a cloud computing infrastructure are provided. A VM agent component provided on a virtual machine, while in communication with a VM deployment service associated therewith, can be configured to detect an incoming configuration payload that corresponds to a selected one or more extension packages cataloged on a VM marketplace component in communication with the VM deployment service component. Employing the configuration payload, the VM agent component can initialize communication with the extension repository to retrieve the one or more extension packages for storage and installation onto the virtual machine. Upon installing the one or more extension packages, the VM agent component can be configured to communicate a status report to the VM deployment service component for provision to an administrator.",10140140
10142175,2018-11-27,33,B2,"Provisioning a cloud based high performance computing cluster. The method includes from a cloud based provisioning service deployed in a cloud based computing provider, providing a user interface. The method further includes receiving user input at the cloud based provisioning service from the user interface. The method further includes from the user input, determining a configuration for a cloud based user service for the user. Using the cloud based provisioning service, the method further includes provisioning the cloud based user service for the user, in the cloud, based on the determined configuration.",10142175
10148740,2018-12-04,21,B2,"In representative embodiments, multiple cloud computing infrastructures, each having its own application and management fabric, coexist with in the same cloud computing infrastructure. This results in a cloud computing infrastructure where multiple management fabrics and application fabrics coexist to offer their own services and cross platform services. Each functions independently and also communicates with each other to offer high availability and disaster recovery. One application and management infrastructure is a host to the other application and management infrastructure. The hosted infrastructure accesses underlying fabrics through the host infrastructure. A resultant system comprises a common hardware fabric, a common runtime, and a service fabric comprising services from both the host and hosted infrastructures.",10148740
10149089,2018-12-04,7,B1,"The present disclosure provides a number of techniques for personalization of audio for communication to an endpoint device. According to one technique, a cloud-based computing device may receive media data from a media platform, and generate depersonalized audio data based on the media data, the depersonalized audio data including at least one audio component associated with the media platform. The technique may further generate user personalized audio data based on the depersonalized audio data. The user personalized audio data may include at least one audio component personalized based on a unique head-related transfer function (HRTF) data associated with a user or default HRTF data. The user personalized audio may be communicated to the endpoint device for consumption by the user. Such techniques reduce the need for advanced audio processing technologies on client systems and makes personalized audio more available to users.",10149089
10153941,2018-12-11,19,B2,"Certain embodiments of computing systems, devices, components, modules, routines, and processes for implementing distributed operational control in a computing fabric are described herein. In one embodiment, a method includes receiving, at a control cluster, a tenant request for a cloud-based computing service at the computing system. The method also includes creating an application configured to provide the requested cloud-based computing service based on the tenant request and pushing configuration data of the created application to the execution cluster to be executed at the execution cluster without further intervention from the control cluster.",10153941
10157190,2018-12-18,19,B2,"The present disclosure describes a system and method to automatically extract image features from an image uploaded to an image processing service executing on a cloud server from an image capture device, determine an image classification based at least in part on the image features, transmit a request to the image capture device for an image action based at least in part on the image classification, and execute the image action on the image based at least in part on receiving the image action from the image capture device in response to the request.",10157190
10169071,2019-01-01,54,B2,"A computer system acquires forensics data from running virtual machines in a hypervisor-hosted virtualization environment. The computer system provides a forensics partition as an additional root virtual machine partition or child virtual machine partition. The forensics partition includes a forensics service application programming interface configured to target one or more virtual machines and acquire forensics data from a targeted virtual machine running in a particular child virtual machine partition. The forensics service application programming interface is configured to communicate via one or more inter-partition communication mechanisms such as an inter-partition communication bus, a hypercall interface, or forensics switch implemented by the hypervisor-hosted virtualization environment. The forensics service application programming interface can be exposed to a forensics tool as part of a cloud-based forensics service.",10169071
10171591,2019-01-01,20,B2,"The automatic provisioning of a connection between a public cloud and an on-premises resource in a private network. This allows a connection to be more easily made when an application in the public cloud is to access that on-premises resource in the private network. The automatic provisioning is initiated upon determining that an application running in the public cloud is to access the on-premises resource. The provisioning occurs by identifying a bridging infrastructure that provides access to the on-premises resource. Credentials are then accessed for later use in connecting to the bridging infrastructure. Application-specific credentials are securely provided to the application. The application-specific credentials are usable by an agent on the public cloud to connect to the identified bridging infrastructure. A configuration packages is then created that includes resource-specific credentials, the identity of the on-premises resource and an executable.",10171591
10176232,2019-01-08,26,B2,"Web search results and enterprise search results are combined into a single presentation. A search query is received from a user associated with a tenant of an enterprise cloud computing platform. Web search results are retrieved based on the search query. The Web search results are ranked and sent to the search engine user interface. An intent of the search query is determined. It is determined that the search query is related to the tenant's enterprise data. An instruction containing the search query keywords and intent is sent to the search engine user interface, and is configured to cause the search engine user interface to submit the keywords intent to an enterprise search engine within the enterprise cloud computing platform. A content template is communicated to the search engine user interface. The content template is configured to display enterprise search results received at the search engine user interface.",10176232
10176335,2019-01-08,52,B2,"Embodiments of the invention are disclosed for establishing single identity/single-sign on (SSO) on a cloud computing platform. In an embodiment, a user is validated to the cloud computing platform, and identifies a domain. After establishing that the user has control of the domain, the cloud computing platform configures a directory service for the domain. The user may then use the directory service on the cloud computing platform to log in to his or her computer, as well as software services hosted on the cloud computing platform.",10176335
10178206,2019-01-08,21,B2,"Methods, systems, apparatuses, and computer program products are provided for connecting sensor devices to cloud servers by a gateway device. The gateway device includes a plurality of sensor adaptors, a sensor data processor, and a network communication interface. The sensor adaptors are configured to receive sensor data in communication signals from sensor devices. Each sensor adaptor is configured to extract sensor data encapsulated according to a respective sensor communication protocol. The sensor data processor is configured to process the extracted sensor data for transmission to a cloud service, such as by extracting unneeded messages data, or inserting additional data such as a time stamp. The network communication interface is configured to transmit the processed sensor data to the cloud service over a network according to a network communication protocol. Sensor data of different types may be transmitted according to corresponding types of network communication protocols.",10178206
10180860,2019-01-15,26,B2,A cloud manager controls the deployment and management of machines for an online service. A build system creates deployment-ready virtual hard disks (VHDs) that are installed on machines that are spread across one or more networks in farms that each may include different configurations. The build system is configured to build VHDs of differing configurations that depend on a role of the virtual machine (VM) for which the VHD will be used. The build system uses the VHDs to create virtual machines (VMs) in both test and production environments for the online service. The cloud manager system automatically provisions machines with the created virtual hard disks (VHDs). Identical VHDs can be installed directly on the machines that have already been tested.,10180860
10185549,2019-01-22,13,B2,"Technologies are described for updating a live system with static changes. According to some examples, changes such as installing and/or removing features may be applied to a cloud based service in live environment without disrupting the service. New software may be patched and installed on an upgraded machine (i.e., server). New features, diagnostics, and language packs may be added. Existing features and certificates may be removed. To accomplish these, new software to be installed and existing software to be removed may be detected. Removal and additions may be performed without preparation and activation of replacement farms.",10185549
10186262,2019-01-22,34,B2,"A speech recognition system interprets both spoken system commands as well as application commands. Users may speak commands to an open microphone of a computing device that may be interpreted by at least two speech recognizers operating simultaneously. The first speech recognizer interprets operating system commands and the second speech recognizer interprets application commands. The system commands may include at least opening and closing an application and the application commands may include at least a game command or navigation within a menu. A reserve word may be used to identify whether the command is for the operation system or application. A user's cadence may also indicate whether the speech is a global command or application command. A speech recognizer may include a natural language software component located in a remote computing device, such as in the so-called cloud.",10186262
10187410,2019-01-22,11,B2,"Various embodiments described herein are directed to optimizing cloud computing infrastructures functionality based on an abuse prevention and remediation platform. A tenant profile may have a tenant confidence score for a tenant, the tenant confidence score being an indicator of the reputation of the tenant usage of cloud computing resources. Based on the confidence score of the tenant, one or more policies for the tenant may be identified limiting access to cloud computing resources. If the virtual internet protocol address (VIP) of the tenant is determined to be tainted, the VIP may be quarantined in a tainted VIP pool, the quarantining excluding the VIP from being selected for use until the VIP is clean. A cleanup routine may be executed, the cleanup routine communicating remedial actions for the tainted VIP. Upon completion of the cleanup routine, the VIP may be restored to a clean VIP pool.",10187410
10193975,2019-01-29,16,B2,A service exposes a storage system-independent application programming interface (API) and receives a data request from an application over the API. The service transforms the storage system-independent data request into a storage system-specific data request and executes it against an identified cloud-based storage system. The service can execute the request against multiple cloud-based storage systems and then return aggregated results to the application through the storage system-independent API.,10193975
10209907,2019-02-19,24,B2,"Representative embodiments disclose how to remove spilled data from an unauthorized system and/or service in a cloud service. Some embodiments allow a user to remove spilled data in a secure fashion without involving an administrator. Spilled data resides in a data structure backed by allocated storage locations. The system presents a user interface allowing a user to enter information that allows identification of the allocated storage locations. The spilled data is removed from the data structure leaving whitespace in the allocated storage locations where remnants of the spilled data can reside. The system creates a copy of the data structure, removing the whitespace. The system connects the copy of the data structure in place of the original data structure. The original allocated storage locations are then overwritten in a secure manner to remove any remnants of the spilled data.",10209907
10212029,2019-02-19,0,B2,"Techniques for provisioning cloud services in cloud computing systems are disclosed herein. In one embodiment, a method can include providing a user portal configured to communicate with a deployment application configured by a user for provisioning cloud services in the cloud computing system. The method can also include receiving a notification from the user-configured deployment application that a provisioning process is initiated for a cloud service in the cloud computing system. In response to receiving the notification, the method can include assigning a distinct provisioning identifier to the initiated provisioning process associated with the notification and causing an output field associated with the distinct provisioning identifier to be displayed on the user portal. Subsequently, messages of status updates can be forwarded to the status display according to the assigned distinct provisioning identifier.",10212029
10212085,2019-02-19,31,B2,"A system that includes multiple hosts, each running a plurality of virtual machines. The system may be, for example, a cloud computing environment in which there are services and a service coordination system that communicates with the hosts and with the services. The services include a middleware management service that is configured to maintain per-tenant middleware policy for each of multiple tenants. The middleware management service causes the middleware policy to be applied to network traffic by directing network traffic to a middleware enforcement mechanism. This middleware policy is per-tenant in that it depends on an identity of a tenant.",10212085
10216744,2019-02-26,18,B2,"A cloud-based migration system exposes a source-independent application programming interface for receiving data to be migrated. The data is uploaded and stored as a single entity in a cloud-based storage system. A migration system then accesses the migration package and begins migrating the data to its destination, from the cloud-based storage system.",10216744
10218569,2019-02-26,14,B2,"Embodiments are directed to client-side enforcement of storage quotas in a cloud service or distributed computing environment. A storage driver is configured to monitor access to an external storage system by a cloud process and to enforce storage limits for the external storage system. The storage driver intercepts reads and writes from the process to the external storage system and updates a local state to track the process's usage of the external storage system. A storage quota database is periodically checked for an updated storage usage and, if the updated storage usage is not present, then the external storage is scanned to obtain the updated storage usage. The updated storage usage is provided to the storage driver, which overwriting the local state. The storage driver continues to update the local state based upon the intercepted reads and writes.",10218569
10223810,2019-03-05,35,B2,"Innovations in compression and decompression of point cloud data are described. For example, an encoder is configured to encode point cloud data, thereby producing encoded data. In particular, the encoder applies a region-adaptive hierarchical transform (“RAHT”) to attributes of occupied points, thereby producing transform coefficients. The encoder can also quantize the transform coefficients and perform adaptive entropy coding of the quantized transform coefficients. For corresponding decoding, a decoder is configured to decode the encoded data to reconstruct point cloud data. In particular, the decoder applies an inverse RAHT to transform coefficients for attributes of occupied points. The decoder can also perform adaptive entropy decoding and inverse quantization of the quantized transform coefficients. The adaptive entropy coding/decoding can use estimates of the distribution of values for the quantized transform coefficients. In this case, the encoder calculates the estimates and signals them to the decoder.",10223810
10223832,2019-03-05,167,B2,"The technology provides contextual personal information by a mixed reality display device system being worn by a user. A user inputs person selection criteria, and the display system sends a request for data identifying at least one person in a location of the user who satisfy the person selection criteria to a cloud based application with access to user profile data for multiple users. Upon receiving data identifying the at least one person, the display system outputs data identifying the person if he or she is within the field of view. An identifier and a position indicator of the person in the location is output if not. Directional sensors on the display device may also be used for determining a position of the person. Cloud based executing software can identify and track the positions of people based on image and non-image data from display devices in the location.",10223832
10225253,2019-03-05,34,B2,"Techniques for facilitating usage tracking in hybrid cloud computing systems are disclosed herein. In one embodiment, a method can include receiving, from a private cloud computing system, a request for uploading usage data to a storage in a public cloud computing system. The method can also include authenticating the received request based on a service subscription of the private cloud computing system, and upon authentication, providing the private cloud computing system with an access permission to store the usage data in the storage of the computing system. The method can further include receiving the usage data from the private cloud computing system submitted with the access permission and storing the received usage data in the storage of the public cloud computing system.",10225253
10225302,2019-03-05,18,B2,"A low-latency cloud-scale computation environment includes a query language, optimization, scheduling, fault tolerance and fault recovery. An event model can be used to extend a declarative query language so that temporal analysis of event of an event stream can be performed. Extractors and outputters can be used to define and implement functions that extend the capabilities of the event-based query language. A script written in the extended query language can be translated into an optimal parallel continuous execution plan. Execution of the plan can be orchestrated by a streaming job manager which schedules vertices on available computing machines. The streaming job manager can monitor overall job execution. Fault tolerance can be provided by tracking execution progress and data dependencies in each vertex. In the event of a failure, another instance of the failed vertex can be scheduled. An optimal recovery point can be determined based on checkpoints and data dependencies.",10225302
10237300,2019-03-19,21,B2,"A system for detecting a targeted attack by a first machine on a second machine is provided. The system includes an application including instructions to: according to first parameters, group alerts for attacking machines; each group of alerts corresponds to attacks performed by a respective one of the attacking machines, and each of the alerts is indicative of a possible attack performed by one of the attacking machines; according to second parameters, group metadata corresponding to attacked machines implementing cloud applications; based on the group of metadata corresponding to the second machine and one or more co-factors, evaluate one or more alerts corresponding to attacks performed by the first machine on the second machine relative to alerts associated with attacks performed by the first machine on other machines or attacks performed by the attacking machines; and alert the second machine of the targeted attack.",10237300
10237339,2019-03-19,24,B2,"A resource balancer for a cluster of nodes in a cloud computing system includes a load calculation module that receives load reports for respective load metrics associated with the nodes, wherein the load reports are indicative of respective loads on a plurality of resources provided by the nodes, calculates, based on the received load reports, an expected distribution of loads across the nodes for each load metric, and calculates, based on the expected distribution of loads, probabilities that each of the load metrics will exceed a respective predetermined capacity for each node. A load balancing module selectively balances, based on the calculated probabilities, the loads on the resources provided by the nodes.",10237339
10241812,2019-03-26,92,B2,"Systems and methods are provided for assigning and associating resources in a cloud computing environment. Virtual machines in the cloud computing environment can be assigned or associated with pools corresponding to users as dedicated, standby, or preemptible machines. The various states provide users with the ability to reserve a desired level of resources while also allowing the operator of the cloud computing environment to increase resource utilization.",10241812
10244051,2019-03-26,6,B2,"Embodiments provide an API that provides metadata about a cloud service's endpoints in response to a single query. This allows a cloud service to advertise each of its endpoints through a common endpoint. The common endpoint may be present in each of a plurality of cloud services, thereby allowing each cloud service automatically discover metadata for other cloud services.",10244051
10250452,2019-04-02,84,B2,"A cloud declarative language is used to configure and reconfigure cloud computing environments. The language includes physical and logical topology declarations as well as cloud operations commands, and allows users to declare commands at multiple topology hierarchies. The language may be used to create scripts and sets of scripts that are used to configure cloud stacks and other operational parameters. Scripts may be created through direct editing by cloud designers or with the aid of graphical user interfaces. Scripts may be automatically generated using templates of configurations and requirements and use for rapid prototyping and testing of cloud environments. Scripts may also be used to monitor conformance with specified configurations, and to facilitate deployment of incremental modifications to configurations.",10250452
10250456,2019-04-02,28,B2,"Techniques for managing operation in cloud computing systems are disclosed herein. In one embodiment, a method can include receiving data representing a guaranteed value of a performance metric of a cloud service and an error budget and deriving a switching threshold based on a combination of the value of the performance metric and the error budget. The method also includes determining a current value of the performance metric of the cloud service and causing the cloud computing system to selectively switch between operational modes for providing the cloud service based on a comparison between the determined current value of the performance metric and the switching threshold.",10250456
10250582,2019-04-02,15,B2,"Representative embodiments disclose unique mechanisms to use beacons to provide access to cloud services. In order to access the cloud services a user presents a beacon identifier obtained from a beacon in geographic proximity to a user device used by the user. An authentication service receives the beacon identifier and issues an authentication challenge to the user. Upon successfully completing the authentication challenge, the user is granted access to the cloud service. Authentication challenges can include single factor, two factor, or nominal security challenges. Some embodiments require the device to submit GPS data verifying the location of the device. Some embodiments check user identifying information against a set of approved users. Some embodiments allow a user's device to act as a beacon to access the cloud service. Cloud services can include a wide variety of collaboration, productivity, help, mapping and other services.",10250582
10257314,2019-04-09,16,B2,"A digital assistant supported across devices such as smartphones, tablets, personal computers, wearable computing devices, game consoles, and the like includes an end-to-end user experience client that interfaces with extensions to applications and/or remote cloud-based services so that user experiences, content, or features can be integrated with the digital assistant and rendered as a native digital assistant user experience. The digital assistant is configured to perform as an active participant in a user experience from its initiation to its conclusion (i.e., from “end-to-end”) by determining the user's intent, performing tasks and actions, providing status, and interacting with the user as needed. The digital assistant utilizes proximity sensing so that its end-to-end participation in a user experience may span different physical locations. Such capability can facilitate the performance of location-specific actions including authenticating the user to gain access to locations, information, or services that would be restricted from non-authenticated users.",10257314
10261822,2019-04-16,46,B2,A system receives a request to deploy a virtual machine on a node from a plurality of nodes running a plurality of virtual machines in a cloud computing system. The system selects one of the plurality of nodes having a hard disk drive (HDD) input output operations per second (IOPS) value less than an observed HDD IOPS value for the plurality of nodes running the plurality of virtual machines. The system receives a predicted HDD IOPS value for the virtual machine and determines a new HDD IOPS value for the selected node based on the HDD IOPS value for the selected node and the predicted HDD IOPS value for the virtual machine. The system instantiates the virtual machine on the selected node when the new HDD IOPS value for the selected node is less than or equal to the observed HDD IOPS value for the plurality of nodes.,10261822
10263840,2019-04-16,12,B2,"Systems and methods for stretching a subnet that do not require level 2 (L2) communications to be handled are provided. A user may gradually migrate VMs or applications instead of migrating an entire subnet at one time, may fail-over specific VMs without failing-over an entire subnet or renumbering IP addresses, may deploy applications to the cloud without the need to create a VPN, or may enable hybrid network connectivity without modifying routes or (re)configuring edge routers, among other benefits. The domains over which the subnet are stretched include a virtual gateway which is associated with the layer-3 (L3) addresses of the other domains. L3 communications within the domain are routed within that domain, and L3 communications within the subnet in another domain are intercepted by the local gateway, are passed to the remote gateway of the other domain, and are forwarded to the destination while leveraging L3 communications.",10263840
10270720,2019-04-23,31,B2,"Recommendations, such as recipients and attachments, are determined from content that is associated with a message item. A user may enter one or more: recipients; attachments; and message content for the message that may be used in determining recommendations. Keywords may also be identified by analyzing the content of the message to determine recommended content/recipients. Behavior patterns may also be used to determine recommendations. The recommended users/content of a message may be obtained from a messaging program, a local data store, a network data store, a cloud service, and the like. The recommended items (e.g. users/content) determined from analyzing the content are displayed such that they may be used by the user when editing the message item. The recommended items may be ranked by relevancy using metrics such as keywords, people, time last viewed and use patterns.",10270720
10275046,2019-04-30,22,B2,"In some implementations, an access device may sense movement in six degrees of freedom for interacting with information in a user interface. In some implementations, a security feature may be included for verifying an authorization of a user to use the access device. Additionally, in some implementations, the access device may establish communication with an available computing device for accessing and interacting with information that may include remotely stored information, cloud data, cloud services, and the like.",10275046
10275603,2019-04-30,81,B2,"A digital escrow pattern and trustworthy platform is provided for data services including mathematical transformation techniques, such as searchable encryption techniques, for obscuring data stored at remote site or in a cloud service, distributing trust across multiple entities to avoid a single point of data compromise. Using the techniques of a trustworthy platform, data (and associated metadata) is decoupled from the containers that hold the data (e.g., file systems, databases, etc.) enabling the data to act as its own custodian through imposition of a shroud of mathematical complexity that is pierced with presented capabilities, such as keys granted by a cryptographic key generator of a trust platform. Sharing of, or access to, the data or a subset of that data is facilitated in a manner that preserves and extends trust without the need for particular containers for enforcement.",10275603
10277582,2019-04-30,254,B2,"Described herein are various technologies pertaining an extensible, cloud-based service for creating and executing applications (e.g., business or industry-specific workflows). A user knowledgeable about a particular field can utilize a client-hosted design studio or a web-based portal to create an application (“app”) (e.g., data transform) relevant to the particular field. The system thus enables users to build mobile applications across platforms without having to write computer code to communicate with backend services such as data sources and/or workflow management systems.",10277582
10278001,2019-04-30,17,B2,"The techniques disclosed herein provide a high fidelity, rich, and engaging experience for spectators of streaming video services. The techniques disclosed herein enable a system to receive, process and, store session data defining activity of a virtual reality environment. The system can generate recorded video data of the session activity along with rendered spatial audio data, e.g., render the spatial audio in the cloud, for streaming of the video data and rendered spatial audio data to one or more computers. The video data and rendered spatial audio data can provide high fidelity video clips of salient activity of a virtual reality environment. In one illustrative example, the system can automatically create a video from one or more camera positions and audio data that corresponds to the camera positions.",10278001
10282255,2019-05-07,12,B2,"A synchronization engine detects a notification of a change to a file. It determines whether an application associated with the file has indicated that the file is to be synchronized by the application. If so, the changes to the file are synchronized between a cloud-based storage system and a local disk by the application. Collaborative metadata, associated with the synchronized file, is updated to indicate a state of a copy of the file on the local disk and a copy of the file in the cloud-based storage system. The collaborative metadata is stored by the synchronization engine.",10282255
10289568,2019-05-14,11,B2,"Systems and methods that allow secure application-driven arbitrary compute in storage devices in a cloud-based computing system are provided. A computing system including a compute controller configured to: (1) provide access to host compute resources, and (2) operate in at least one of a first mode or a second mode is provided. The computing system may further include a storage controller configured to provide access to storage systems including storage components, at least one compute component, and at least one cryptographic component. In the first mode, the host compute resources may be configured to execute at least a first operation on at least a first set of data stored in at least one of the storage components. In the second mode, the at least one compute component may be configured to execute at least a second operation on at least a second set of data.",10289568
10296367,2019-05-21,48,B2,A system receives a request to deploy a virtual machine on a node from a plurality of nodes running a plurality of virtual machines in a cloud computing system. The system selects one of the plurality of nodes having a hard disk drive (HDD) input output operations per second (IOPS) value less than an observed HDD IOPS value for the plurality of nodes running the plurality of virtual machines. The system receives a predicted HDD IOPS value for the virtual machine and determines a new HDD IOPS value for the selected node based on the HDD IOPS value for the selected node and the predicted HDD IOPS value for the virtual machine. The system instantiates the virtual machine on the selected node when the new HDD IOPS value for the selected node is less than or equal to the observed HDD IOPS value for the plurality of nodes.,10296367
10298621,2019-05-21,2,B2,"A method includes acts for establishing a subscription for an entity. The method includes receiving, at a cloud service provider, a request from an entity to establish a subscription. The request includes credentials for the entity that are not proper credentials for an organization associated with the entity that the entity should use to access services for the organization. The method further includes performing a corrective action based on detecting one or more factors to determine that the entity is associated with the organization. The method further includes providing services based on the corrective action.",10298621
10303649,2019-05-28,19,B2,"A storage abstraction system is described herein that exposes storage from an operating system as a uniform storage device and abstracts from applications the selection of a particular storage location and different properties of storage devices. The application provides the data to store and some information about the application's goals for storing the data, and lets the operating system route the data to the right place based on the data's characteristics. The operating system may choose to store data anywhere from L2 cache to a cloud-based storage service and anything in between, based on information about the data's persistence requirements, expected usage, access frequency, security needs, and so forth. The system lets applications and users focus on expressing their goals and needs for the data, and lets the operating system manage the hardware.",10303649
10305861,2019-05-28,34,B2,"A method and proxy device for cross-tenant data leakage isolation in a multi-tenant database are provided. The method includes monitoring, by a proxy device, traffic flows between a server executing at least one cloud-based application and the multi-tenant database, wherein the proxy device is communicatively connected between the server and the multi-tenant database; capturing, by the proxy device, at least a request to access the multi-tenant database, wherein the request is communicated using a database-specific protocol; analyzing the request to determine if the request is legitimate; upon determining that the request is not legitimate, modifying the request to point to a global-tenant table and to designate a unique tenant identifier, wherein the unique tenant identifier corresponds to a tenant-specific table name designated in the global-tenant table; and sending the modified request to the multi-tenant database using the database-specific protocol.",10305861
10305986,2019-05-28,13,B2,A cloud-based storage service hosts content information that may be accessed by client machines in a peer-to-peer network. The content information is a compact representation of the content which is stored outside of the cloud-based storage service. The cloud-based storage service generates the content information and a content information hash. The content information hash is used to validate the content information when the content information is downloaded to the peer-to-peer network. The cloud-based storage service also generates metadata that describes the content information so that a client machine in the peer-to-peer network may access the content information from the cloud-based storage service.,10305986
10313967,2019-06-04,11,B2,"A base station utilizes duty cycle requirements of each of multiple base station components to efficiently consume power. The base station may include a synchronization module that allows the base station to send collected data from a cache to a gateway, which then, sends it up to the cloud. The base station may also include a sensor connectivity module that establishes a connection between the base station and data collecting devices deployed to collect data for storage in the cache. A base station controller serves as the cache for the data collected by the sensor module and sends the data to the gateway for synchronization in the cloud using the synchronization module. A base station controller determines/coordinates the duty cycle of the sensor connectivity module and synchronization module in a power efficient way depending on the current power available to the base station, network needs, and the weather conditions.",10313967
10320572,2019-06-11,24,B2,"The techniques described herein facilitate scope-based certificate deployment for secure dedicated tenant access in multi-tenant, cloud-based content and collaboration environments. In some embodiments, a method is described that includes receiving an incoming authentication request from an access system, wherein the authentication request includes metadata, extracting the metadata from the authentication request, and processing the metadata to identify a tenant corresponding to the request. A tenant-specific certificate associated with the tenant is then accessed and provided to the access system for validation by a third-party certificate authority.",10320572
10320844,2019-06-11,35,B2,"Allowing an entity managed device to access a tenant associated with the e on a public cloud service while preventing the device from accessing one or more other tenants on the cloud service. A method includes, at the cloud service, obtaining policy from the entity with respect to tenant access. The method further includes, at the cloud service, receiving a request from the entity managed device to access a tenant at the cloud service. The method further includes granting or denying the access request based on the policy obtained from the entity.",10320844
10320897,2019-06-11,37,B2,"System management services can discover the addition of new physical devices, take automated actions to provision software (operating system and other related cloud services software components) on them, and scale out management infrastructure based on the new capacity of the total resources (including the newly added resources). A configuration file can contain the rules for automatic expansion and contraction of the system.",10320897
10320944,2019-06-11,18,B2,"Embodiments related to predictive cloud-based presimulation are described herein. For example, one disclose embodiment provides, on a computing device, a method comprising receiving an input of state from a client device and executing a server simulation of a digital experience based on the input of state, the server simulation configured to run concurrently with, and ahead of, a client simulation on the client device. The method further comprises generating a plurality of simulation results from the server simulation, selecting one or more simulation results from the plurality of simulation results based on a likelihood the client simulation will utilize a particular simulation result, and sending the one or more simulation results to the client device.",10320944
10326787,2019-06-18,21,B2,"An anomaly detection system is provided and includes a processor, a memory and a security application stored in the memory and including instructions. The instructions are for collecting behavior data corresponding to users of an organization accessing cloud applications. The behavior data includes parameters tracked over time for the users. The instructions are for: creating a first model based on the behavior data tracked for the users; creating a second model corresponding to a first user based on the parameters tracked for the users except the first user, where the second model excludes behavior data pertaining to the first user; scoring the second model based on the first model to generate a first score; determining whether the first user is an outlier based on the first score; and removing the behavior data corresponding to the first user from the first model if the first user is an outlier.",10326787
10331885,2019-06-25,19,B2,"Identification of an entity performing a deletion or modification action on locally stored files and notification to mitigate risks to cloud stored files is provided. A local or remote file watcher may monitor locally stored files and detect a deletion or modification action. The file watcher may also identify an entity performing the deletion or modification action. The entity may be an application, a process, a user other than the user that is the owner of the files, or the user himself/herself. The file watcher may further determine one or more alert conditions or rules associated with the affected file(s) and/or the entity, that is under which circumstances an alert is to be issued. The alert notification(s) may be issued to the user, an administrator, a cloud storage service, and/or a data protection service such that protective measures can be taken if necessary.",10331885
10348693,2019-07-09,99,B2,"A digital escrow pattern for data services can include selective access for obscured data at a remote site or in a cloud service, distributing trust across multiple entities to avoid a single point of data compromise. Based on the pattern, a “trustworthy envelope” for any kind of payload enables curtained access through a variety of decorations or seals placed on the envelope that allow for a gamut of trust ranging with guarantees such as, but not limited to, confidentiality, privacy, anonymity, tamper detection, integrity, etc. For instance, XML tags can be applied or augmented to create trust envelopes for structured XML data. Some examples of mathematical transformations or ‘decorations’ that can be applied to the XML data include, but are not limited to, size-preserving encryption, searchable-encryption, or Proof(s) of Application, blind fingerprints, Proof(s) of Retrievability, etc.",10348693
10356187,2019-07-16,10,B2,"A gateway that may be implemented in a local network and that communicates with a cloud network to provide efficient services in a weakly connected setting is disclosed. The gateway may be configured to enable services that efficiently utilize resources in both of the gateway and the cloud network, and provide a desired quality of service while operating in a weakly connected setting. The gateway may provide data collection and processing, local network services, and enable cloud services that utilize data collected and processed by the gateway. The local network may include one or more sensors and/or video cameras that provide data to the gateway. In a further implementation, the gateway may determine an allocation of one or more tasks of a service between the gateway and a cloud network by determining the allocation of the one or more service tasks based on desired service latency.",10356187
10372772,2019-08-06,19,B2,"Media files may be prioritized based on user behavior data and social data associated with individual media files. A process of prioritizing media files may include accessing user behavior data associated with individual media files in a set of media files that are stored on a client device of a user or in a cloud-based storage location associated with the user, accessing social data associated with one or more media files of the set of media files that are determined to have been shared on a media file sharing service, and ranking the set of media files based at least in part on the user behavior data and the social data.",10372772
10374970,2019-08-06,23,B2,"A system receives a request for a plurality of resources of a cloud computing system to deploy a service. The system selects a portion of the resources and determines whether the selected portion is at least partially available in one or more clusters in parallel. If available, the system reserves the available resources for a predetermined period of time. If unavailable in one of the clusters, the system releases the reserved resources after the predetermined period of time. While or after determining the availability, the system locates at least a portion of the remainder of the resources in the one or more clusters. The system allocates the reserved resources on one of the clusters and the located remainder of the resources to deploy the service and instantiates the service on the one of the clusters using the allocated resources.",10374970
10375072,2019-08-06,11,B2,"Various techniques for implementing computer dashboards as cloud-based services are disclosed herein. In one embodiment, a method includes receiving a dashboard file at a server via a computer network, the dashboard file identifying a dashboard having one or more graphical user interface elements individually configured to display and dynamically update data associated with a cloud-based service. The dashboard file further contains metadata indicating a cloud-based subscription. The method also includes associating the received dashboard file with the cloud-based subscription, identifying one or more entities allowed to access the dashboard based on the cloud-based subscription, and displaying, via the computer network, the dashboard identified by the dashboard file to the one or more entities upon verification of the cloud-based subscription.",10375072
10375196,2019-08-06,14,B2,"Image transformation for use in a hybrid distribution architecture with improved performance characteristics is provided herein. The hybrid distribution architecture provides content to clients via a dual source system using a central cloud service and a Content Distribution Network, which uses the cloud service as its source. A client that requests a new rendition of an image provided by a chosen source of the hybrid distribution architecture will have that request handled by the source, and the source may maintain that rendition for future provision. By allowing the client to choose the source and letting that source handle the request, rather than requiring a central service hand the request, the amount of data needed to be transmitted is reduced and the speed of provision of content, modified or not, is improved for the client.",10375196
10375645,2019-08-06,42,B2,"Mobile computing device power consumption can be reduced by using expiration window timers, state-based timers and/or the coordination of keep-alive timers. A mobile computing device can execute tasks associated with multiple keep-alive timers used for maintaining communication links between the device and cloud-based service providers in a single active state. A cloud-based keep-alive service can maintain mobile computing device-service provider communication links by sending one keep-alive communication to a mobile computing device in place of multiple communications. Upon receiving a response, the keep-alive surface can send a plurality of keep-alive communications to a plurality of cloud-based service providers.",10375645
10382305,2019-08-13,176,B2,"Embodiments apply a set of sequenced instructions to connect to a network through a captive portal. A computing device detects a network access point and obtains the instruction set corresponding to the network access point. The instruction set is derived by a cloud service from crowdsourced data describing interactions between mobile computing devices and the network access point. Applying the instruction set includes performing actions such as navigating web pages to accept terms and conditions, provide user or device information, and more.",10382305
10387123,2019-08-20,23,B2,"Various technologies described herein pertain to developing a web application using a scripting language-based framework. A call can be received via an interface of the scripting language-based framework. The call can manage a control included in the scripting language-based framework. Further, the call can be provided by an application that references the scripting language based framework. Moreover, a user interface can be generated based on the control managed by the call, and backend cloud-based services provided by a distributed data store on a cloud platform can be accessed based on the control managed by the call.",10387123
10389528,2019-08-20,16,B2,"A method and proxy device for on-demand generation of cryptographic certificates. The method includes receiving, by a proxy device, a request to access a cloud application; identifying a domain name designated in the received request; determining if the identified domain name is signed by a valid cryptographic certificate saved locally in the proxy device; and sending, to a certificate generator system, a certification request to issue a new cryptographic certificate to sign the identified domain name, when the identified domain name is not a signed domain name.",10389528
10389663,2019-08-20,27,B2,"Technologies are presented directed to uploading of attachments to a relevant group cloud storage at send time. A communication application and/or service may suggest to a user to upload an attachment of an outgoing communication to a group cloud storage upon generation of the communication. Suggestion of group may be based on last use, document type, content, user(s), which account the user is in, and comparable factors. The user (or sender) may also be provided with options to set permissions for the attachment based on the upload destination selection. In some examples, upload of work documents to personal cloud storage may be prevented and suitable groups may be selected for user that are part of multiple groups.",10389663
10394580,2019-08-27,38,B2,"Systems, computer program products and computer program products for facilitating the dynamic addition and removal of operating system components on computing devices based on application or user interaction over time are disclosed. Such systems, computer program products and computer program products provide one or more API intercept layers, a rules engine and a hydrate engine that facilitates the ability to dynamically rehydrate or hydrate operating system components. In an embodiment, a minimal (or core) operating system image on a computing device is deployed. Then, required components may be dynamically added (i.e., “streamed” or “rehydrated”) from storage, a server or cloud service as required by an executing application program on the computing device. In another embodiment, a totally complete operating system image is deployed on a computing device. Then, unused components may be dynamically removed (i.e., “dehydrated”) from the computing device over time based on application or user interaction.",10394580
10397256,2019-08-27,18,B2,"In an example embodiment, a computer-implemented method comprises obtaining labels from messages associated with an email service provider, wherein the labels indicate for each message IP how many spam and non-spam messages have been received; obtaining network data features from a cloud service provider; providing the labels and network data features to a machine learning application; generating a prediction model representing an algorithm for determining whether a particular set of network data features are spam or not; applying the prediction model to network data features for an unlabeled message; and generating an output of the prediction model indicating a likelihood that the unlabeled message is spam.",10397256
10402301,2019-09-03,12,B2,"Described technologies facilitate cloud validation using validation as a service (VaaS). A cloud validation service provider acquires and securely stores certification tests developed by cloud component providers, integrated solution providers, and others. Each test's executable portion tests hardware or software of a candidate cloud. The candidate may be on the premises of an enterprise, or instead be a hosted cloud on the premises of a hoster off the premises of the entity that pays for the hosting. Monitored testing is done using an infrastructure in the candidate cloud or in a public cloud. Results are uploaded to the VaaS provider, which provides an analysis of test results for use in determining whether to validate the candidate cloud. Test execution agents may be VaaS-cloud-resident or candidate-cloud-resident, and may use a mutex to prevent simultaneous execution of tests. Testing may be accomplished even when the candidate cloud has no internet-exposed communication endpoint.",10402301
10402375,2019-09-03,70,B2,"A cloud content states framework is described herein. In implementations, a framework is configured to perform operations for management of cloud content files at the computing device on behalf of cloud storage providers. The framework is operable to manage states for cloud content files accessible from multiple cloud storage services. The framework also manages and outputs state indicators with file system representations of the cloud content files. The states include at least a set of primary states indicative of synchronization status controlled by the framework. The states may also include custom states associated with cloud storage services that are defined via an interface exposed by the framework. In operation, states associated with cloud content files are recognized in connection with rendering a user interface with cloud content file representations. Then, state indicators that reflect the recognized states are exposed along with cloud content file representations in the user interface.",10402375
10404689,2019-09-03,22,B2,The description relates to password reset security. One example can receive a login request and a password for a cloud-based user account. The example can also retrieve stored authenticated user information associated with the password. The example can further send a notification of the login request to a contact address associated with the cloud-based user account. The notification can contain at least some of the stored authenticated user information.,10404689
10404716,2019-09-03,9,B2,"A data protection policy can specify which applications are allowed and/or dis-allowed from accessing cloud data that is subject to a data protection policy (i.e., data that has been assigned a classification and/or an owner.) To enforce that policy, the operating system (or other trusted entity) that stores or caches access credentials only provides these credentials to applications that are allowed by the policy. In this manner, because they are not provided with the credentials required to access the network resource, the dis-allowed applications cannot access the ‘protected’ data thereby helping prevent these dis-allowed (or noncompliant) applications from leaking data.",10404716
10411967,2019-09-10,11,B2,"The present technology is generally directed to updating a cloud network. This technology may include generating a set is inequalities based network topology information, shared risk link group information, demand information, and traffic solver parameters. The set of inequalities may also be based upon a model of traffic routing that is based on selection of routes based on dynamic and global traffic engineering. A capacity plan may also be generated based on the set of inequalities and at least one objective. The capacity plan may include a target capacity for each link of the plurality of links in the network.",10411967
10416991,2019-09-17,68,B2,"The disclosed technology is generally directed to updating of applications, firmware and/or other software on IoT devices. In one example of the technology, a request that is associated with a requested update is communicated from a normal world of a first application processor to a secure world of the first application processor. The secure world validates the requested update. Instructions associated with the validated update are communicated from the secure world to the normal world. Image requests are sent from the normal world to a cloud service for image binaries associated with the validated update. The secure world receives the requested image binaries from the cloud service. The secure world writes the received image binaries to memory, and validates the written image binaries.",10416991
10423455,2019-09-24,55,B2,A system receives a request to deploy a virtual machine on one of a plurality of nodes running a plurality of virtual machines in a cloud computing system. The system receives a predicted lifetime for the virtual machine and an indication of an average lifetime of virtual machines running on each of the plurality of nodes. The system allocates the virtual machine to a first node when a first policy of collocating virtual machines with similar lifetimes on a node is adopted and the predicted lifetime is within a predetermined range of the average lifetime of virtual machines running on the first node. The system allocates the virtual machine to a second node when a second policy of collocating virtual machines with dissimilar lifetimes on a node is adopted and the predicted lifetime is not within the predetermined range of the average lifetime of virtual machines running on the second node.,10423455
10425229,2019-09-24,18,B2,"Methods, media, and systems for secure provisioning of servers within a cloud computing environment are provided for herein. In some embodiments, a management service can delegate provisioning of a server of the cloud computing environment to an imaging service. In response, the imaging service can generate an operating system image for the server and can utilize disk encryption to protect to operating system image. In embodiments, a volume encryption key of the disk encryption can be encrypted utilizing a public key of a trusted platform manager of the server, to produce an encrypted volume encryption key that is protected by the trusted platform module of the server. The encrypted operating system image and the encrypted volume encryption key can then be transmitted to the server to cause the server to be provisioned with the operating system image. Other embodiments may be described and/or claimed herein.",10425229
10430735,2019-10-01,8,B2,"Embodiments of facilitating creation of cloud computing applications are disclosed therein. In one embodiment, a method includes receiving user input of a plurality of workflow items as a sequence of graphical objects on a graphical user interface. The workflow items individually are related to one or more cloud computing services. The method also includes determining an execution sequence of the plurality of workflow items based on data dependencies individually between pairs of the workflow items, the determined execution sequence being different than the sequence of the graphical objects. The determined execution sequence includes executing pairs of the workflow items without data dependencies therebetween generally in parallel and sequentially executing other pairs of the workflow items with data dependencies therebetween in accordance with the data dependencies.",10430735
10439873,2019-10-08,6,B2,"Optimizations are provided for reliably configuring an on-premise server using configuration data stored at a cloud-based service. An on-premise server polls the cloud-based service to determine whether any new configuration changes are available for the on-premise server to implement. In response to an indication that a new configuration change is available for the on-premise server, the on-premise server performs a validation to determine whether the new configuration change is committable by the on-premise server. Afterwards, the on-premise server receives the new configuration change and then attempts to commit to that new configuration change.",10439873
10445145,2019-10-15,6,B2,"A hybrid configuration engine and associated method for reducing the complexity and burden of configuring rich coexistence between an on-premise solution and a cloud-based solution is described herein and illustrated in the accompanying figures. The hybrid configuration engine determines the current state of the on-premise solution and the cloud-based solution and learns the desired configuration state. After obtaining the current and desired configuration state information, the hybrid configuration engine determines and automatically performs steps to reach the desired configuration state. Finally, the hybrid configuration engine provides instructions describing the manual steps needed to reach the desired configuration state.",10445145
10447639,2019-10-15,27,B2,"Various parts of email content or entire emails may be recalled or modified after delivery through the use of links to cloud-storage, where the various parts of the email content may be stored. Different notification and modification methods may be employed to modify delivered content even after it is rendered for a recipient. While recipients may have a latest version of the email content, senders may be enabled to see a version history of changes in delivered email content.",10447639
10447705,2019-10-15,174,B2,"Device information for each of multiple devices associated with a user account is maintained by a cloud service. The device information can include credential information allowing the device to be accessed by other ones of the multiple devices, remote access information indicating how the device can be accessed by other ones of the multiple devices on other networks, and property information including settings and/or device drivers for the device. The device information for each of the multiple devices is made available to other ones of the multiple devices, and can be used by the multiple devices to access one another and provide a consistent user experience across the multiple devices.",10447705
10452712,2019-10-22,32,B2,"A facility for using a mobile device to search video content takes advantage of computing capacity on the mobile device to capture input through a camera and/or a microphone, extract an audio-video signature of the input in real time, and to perform progressive search. By extracting a joint audio-video signature from the input in real time as the input is received and sending the signature to the cloud to search similar video content through the layered audio-video indexing, the facility can provide progressive results of candidate videos for progressive signature captures.",10452712
10459750,2019-10-29,22,B2,"Systems and methods are taught for providing customers of a cloud computing service to control when updates affect the services provided to the customers. Because multiple customers share the cloud's infrastructure, each customer may have conflicting preferences for when an update and associated downtime occurs. Preventing and resolving conflicts between the preferences of multiple customers while providing them with input for scheduling a planned update may reduce the inconvenience posed by updates. Additionally, the schedule for the update may be transmitted to customers so that they can prepare for the downtime of services associated with the update.",10459750
10476751,2019-11-12,15,B2,"In one example of the technology, a mapping is established between: IoT devices that are tenants of an IoT support service, and tenants of a first third-party cloud service. On the IoT support service, device twins are stored, such that each device twin corresponds to a corresponding IoT device, and such that each device twins includes at least a first section that includes properties of the corresponding IoT device, and a second section that includes properties associated with the first third-party cloud service. The IoT support service is used to invoke a first method associated with at least one IoT device based on metadata in at least one corresponding device twin. The first method is associated with the first third-party cloud service.",10476751
10476886,2019-11-12,31,B2,"A JIT service in a cloud computing environment manages just-in-time access to resources in the cloud computing environment for DevOps personnel who do not have persistent access to restricted data or the ability to modify the cloud computing environment to gain access to restricted data. When JIT access to a resource is requested by a DevOps device, the JIT service retrieves a JIT policy for the resource that includes geolocation criteria limiting the geolocation from which JIT access can be automatically granted. The geolocation of the DevOps device is evaluated against the geolocation criteria. If the geolocation criteria and any other criteria of the JIT policy are satisfied, the JIT service provisions JIT access to the resource for the DevOps device.",10476886
10476948,2019-11-12,26,B2,"Techniques for facilitating allocation of cloud services in cloud computing systems are disclosed herein. In one embodiment, a method can include transmitting a request to service controllers configured to manage corresponding cloud services deployable in the cloud computing system, the request including a set of cloud services to be deployed in the cloud computing system. The method can also include receiving, from each of the service controllers, a list of at least some of the computing facilities arranged in order of preference for deploying one or more corresponding cloud services. The method can further includes selecting one of the computing facilities from the multiple computing facilities for deploying the set of cloud services based on the preferences of the service controllers reflected in the received lists and instructing the service controllers to deploy the one or more corresponding cloud services to the selected one of the computing facilities.",10476948
10484430,2019-11-19,32,B2,"A JIT service in a cloud computing environment manages just-in-time access to resources in the cloud computing environment for DevOps personnel who do not have persistent access to restricted data or the ability to modify the cloud computing environment to gain access to restricted data. When JIT access to a resource is requested by a DevOps device, the JIT service retrieves a JIT policy for the resource that includes screening criteria limiting automatic granting of JIT access to DevOps personnel who meeting the screening criteria. Screening information for the DevOps personnel is evaluated against one or more screening requirements set forth by the screening criteria. If the screening criteria and any other criteria of the JIT policy are satisfied, the JIT service provisions JIT access to the resource for the DevOps device.",10484430
10484460,2019-11-19,51,B2,"Techniques for facilitating operations in hybrid cloud computing systems are disclosed herein. In one embodiment, a method can include receiving, at a public cloud, a plurality of applications deployable in a private cloud and informing an access service of the public cloud computing system regarding the received applications deployable in the private cloud. The method also includes receiving, from a connection service of the private cloud, a request for a list of the received applications available at the public cloud and deployable in the private cloud. The method further includes in response to the received request, selectively identifying to the private cloud the list of applications based on a service subscription associated with the connection service.",10484460
10496503,2019-12-03,22,B2,"Embodiments described herein are directed to migrating affected services away from a faulted cloud node and to handling faults during an upgrade. In one scenario, a computer system determines that virtual machines running on a first cloud node are in a faulted state. The computer system determines which cloud resources on the first cloud node were allocated to the faulted virtual machine, allocates the determined cloud resources of the first cloud node to a second, different cloud node and re-instantiates the faulted virtual machine on the second, different cloud node using the allocated cloud resources.",10496503
10506646,2019-12-10,178,B2,Embodiments produce a set of instructions for connecting to a network through a network access point based on data crowdsourced from mobile computing devices. The crowdsourced data describes interactions between the mobile computing devices and the network access point when establishing a connection to the network. A cloud service analyzes the crowdsourced data to identify a set of instructions for association with the network access point. The mobile computing devices replay the set of instructions when subsequently attempting to connect to the network access point.,10506646
10511615,2019-12-17,13,B2,"A system for detecting a non-targeted attack by a first machine on a second machine is provided. The system includes an application that includes instructions configured to: extract network data corresponding to traffic flow between the first and second machines, where the second machine is implemented in a cloud-based network; identify a first suspect external IP address based on the network data; calculate features for the first suspect external IP address, where the features include exploration type features and exploitation type features; train a classifier based on predetermined examples and the features to generate and update a model; classify the first suspect external IP address based on the model and at least some of the features; and perform a countermeasure if a classification provided from classifying the first suspect external IP address indicates that the first suspect external IP address is associated with a malicious attack on the second machine.",10511615
10515213,2019-12-24,18,B2,"Described herein are various technologies pertaining detecting malware by monitoring execution of an instrumented process. An anti-malware engine can observe code obfuscation, suspicious patterns and/or behavior upon scanning a computer file. Based upon this observation, evidence can be submitted to a service (e.g., cloud-based service) and, in response, configuration setting(s) for restraining, containing and/or instrumenting a process for executing the file and/or instrumenting a process into which the file is loaded can be received. The configured process can be monitored. Based upon this monitoring, an action can be taken including determining the file to comprise malware and terminating the process. Upon detecting malware, a detection report, and a copy of the computer file, can be sent to a service (e.g., cloud-based). The service can independently verify that the reported file is malicious, and can protect other machines from executing or loading the same malicious file.",10515213
10516688,2019-12-24,24,B2,An anti-ransomware system protects data in cloud storage of a cloud services provider against a ransomware attack. A backup handler is configured to at least one of: selectively retrieve backup data generated by the cloud services provider from the cloud storage; and selectively generate backup data based on the data in the cloud storage and output the backup data to a storage device. A ransomware detector is configured to detect data changes to the data resulting from a ransomware attack. A ransomware remediator communicates with the ransomware detector and the backup handler and is configured to restore the data to a state prior to the ransomware attack based upon the backup data.,10516688
10523676,2019-12-31,19,B2,"A system and method for detecting unauthorized access to a cloud application hosted in a cloud-computing platform are presented. The method comprising: identifying, by a managed proxy device, a first access attempt to a cloud application at a first time and from a first location; identifying, by a managed proxy device, a second access attempt to the cloud application at a second time and from a second location; computing a velocity between the first access attempt and the second access attempt based on the first time, the second time, the first location, and the second location; checking if the computed velocity is greater than a velocity threshold; and generating a velocity event when the computed velocity is greater than the velocity threshold, wherein the velocity event indicates that an access attempt is unauthorized.",10523676
10523717,2019-12-31,3,B2,"A method includes acts for establishing a subscription for an entity. The method includes receiving, at a cloud service provider, a request from an entity to establish a subscription. The request includes credentials for the entity that are not proper credentials for an organization associated with the entity that the entity should use to access services for the organization. The method further includes performing a corrective action based on detecting one or more factors to determine that the entity is associated with the organization. The method further includes providing services based on the corrective action.",10523717
10530775,2020-01-07,24,B2,"Techniques for facilitating usage tracking in hybrid cloud computing systems are disclosed herein. In one embodiment, a method can include receiving, from a private cloud computing system, a request for uploading usage data to a storage in a public cloud computing system. The method can also include authenticating the received request based on a service subscription of the private cloud computing system, and upon authentication, providing the private cloud computing system with an access permission to store the usage data in the storage of the computing system. The method can further include receiving the usage data from the private cloud computing system submitted with the access permission and storing the received usage data in the storage of the public cloud computing system.",10530775
10536473,2020-01-14,21,B2,"An anomaly detection system is provided and includes a processor, a memory, and a security application that is stored in the memory and includes instructions. The instructions are configured to collect information of behavior data for the users of an organization accessing cloud applications via a distributed network. The behavior data includes one or more parameters tracked over time for the users. The instructions are further configured to: establish baselines for each of the users and for each of the cloud applications or types of cloud applications of the organization; detect anomalies based on the baselines; provide aggregated anomaly data by aggregating anomalies corresponding to two or more of the baselines and a same behavior or corresponding to multiple users of a same cloud application during a same period of time; determine a risk value based on the aggregated anomaly data; and perform a countermeasure based on the risk value.",10536473
10536504,2020-01-14,15,B2,"A cloud service stores and aggregates content that is obtained from different content sources using different protocols. For example, the content may include electronic messages, calendar information, contacts, social network content, feed data, search results, and the like. The cloud service aggregates content for each user based on the user's configuration settings. The cloud service may perform processing on the aggregated content before it is delivered and displayed to the user on the client device. For example, one or more views may be generated and stored by the cloud service before the view is requested from the client. Changes made to the aggregated content on the client may be synchronized with the content source. Searches may be made across all or a portion of the different content sources that are aggregated for a user.",10536504
10545244,2020-01-28,16,B2,"Methods, systems, and computer programs are presented for cloud-offloaded position calculation with on-device acquisition. One method includes operations for collecting raw global positioning system (GPS) signals for a set of positions, and storing in memory the raw GPS signals. The method further includes processing the raw GPS signals in batch mode at the computing device to obtain acquisition data for the positions, where the processing includes identifying tasks for parallel processing by a graphics processing unit (GPU), performing, by the GPU, the tasks in parallel by assigning each of the tasks to a core processor within the GPU, and combining results from performing the tasks to obtain the acquisition data. Additionally, the method includes an operation for transmitting the acquisition data to a server for calculating locations for the set positions at the server, the server storing the locations and making the locations available for location-tracking applications.",10545244
10545991,2020-01-28,43,B2,"Aspects of the subject matter described herein relate to synchronizing data. In aspects, properties are synchronized from an organization property store to a cloud property store and/or vice versa. The list of properties to synchronize may change based on the cloud services to which the organization subscribes, changes to the cloud services, or for other reasons. Furthermore, the list of properties to synchronize may be limited to certain objects of the organization which may also change over time.",10545991
10546057,2020-01-28,60,B2,"The subject disclosure relates to third party cloud schema matching to a user's data. The user can select the type of data to be looked up from an external source in order for the user's data to be augmented with data from the external source. The user can be presented with a list of service providers that support the selected type of data. Columns from the user's data are associated with supported lookup information types either automatically or manually. Based on the association, data from the external data source is automatically mapped to the user's data and updates are selectively applied to the user's data.",10546057
10547672,2020-01-28,80,B2,An autoscaling system for scaling resource instances in a cloud network includes an autoscaling application is stored in memory and executed by a processor. The autoscaling application is configured to provide an interface to define an autoscale policy including scale in rules and scale out rules for a plurality of different types of resource instances of a tenant. The autoscaling application is configured to receive capacity data corresponding to a first type of the plurality of different types of resource instances; calculate an estimated instance count for scaling in the first type based on the capacity data and scale in rules; calculate a projection factor based on an estimated instance count and a current instance count; generate adjusted capacity data based on current capacity data and the projection factor; compare the adjusted capacity data and the scale out rules; and selectively scale in the first type based on the comparison.,10547672
10552280,2020-02-04,12,B2,"Optimizations are provided for remotely debugging a node in the cloud. Initially, a SMM environment is initialized in a computer's BIOS. Then, a debug agent that is located within the SMM environment receives an instruction indicative of a chipset-specific or platform-specific health-related issue. Based on this instruction, the debug agent executes a script entry by fetching health-related information from the computer's addressable endpoints. This information includes health-related metadata and/or counter information. The debug agent then records the information. Furthermore, the debug agent obtains a resolution for the health-related issue. Here, this resolution is at least partially based on the recorded information.",10552280
10552385,2020-02-04,33,B2,"Setting up and supporting the computer infrastructure for a remote satellite office is a difficult task for any information technology department. To simplify the task, an integrated server system with a hierarchical storage system is proposed. The hierarchical storage system includes the ability to store data at an off-site cloud storage service. The server system is remotely configurable and thus allows the server to be configured and populated with data from a remote location.",10552385
10554646,2020-02-04,6,B2,"Embodiments are directed to provisioning private virtual machines in a public cloud and to managing private virtual machines hosted on a public cloud. In one scenario, a computer system receives authentication information for a private domain from an entity. The entity indicates that their private virtual machines are to be provisioned on a public cloud, where the entity's private domain is accessible using the authentication information. The computer system establishes a virtual network on the public cloud which is configured to host the entity's private virtual machines, where each virtual machine hosts remote applications. The computer system establishes an authenticated connection from the virtual network to the entity's private domain using the received authentication information and provides the entity's private virtual machines on the public cloud. The remote applications provided by the private virtual machines then have access to data stored within the entity's private domain using the authenticated connection.",10554646
10558565,2020-02-11,4,B2,"Provided is a system and method for converting active data identified by a garbage collection operation into erasure coded fragments. In one example, the method may include identifying data blocks in use and interspersed among garbage data blocks not in use in cloud storage based on a garbage collection operation, extracting object data from the identified data blocks in use into a data container while leaving object data of the garbage data blocks not in use, and fragmenting a predetermined amount of extracted object data stored within the data container, the fragmenting comprising converting the predetermined amount of object data into a plurality of fragments including data fragments storing portions of the data and parity fragments for reconstructing the data, and writing the plurality of fragments in a distributed manner among a plurality of storage nodes.",10558565
10560463,2020-02-11,31,B2,"Techniques allow DevOps personnel to perform incident management for cloud computing environments in a manner that maintains control over restricted data and the data plane. The DevOps personnel do not have access to restricted data or the ability to modify the cloud computing environment to gain access to restricted data. The incident management techniques include executing automatic operations to resolve an incident and allowing DevOps personnel to execute remote operations without providing the DevOps personnel access. A further incident management technique provides DevOps personnel with just-in-time (JIT) access that is limited to a certain level or type of access and limited in time. Still another technique for incident management is using an escort model, in which an escort session between operating personnel and DevOps personnel is established and connected to the cloud computing environment to allow the DevOps personnel access to the production environment while escorted by the operating personnel.",10560463
10560538,2020-02-11,10,B2,User interface integration across multiple clouds is achieved by hosting UI extensions for different services in the same browser window. The UI extensions are initialized by a shell with any necessary security context for the corresponding cloud. The shell provides versioning so that the newest version of the UI is presented to users for all versions of a service. A connector in a local cloud provides translation between APIs across different clouds.,10560538
10560853,2020-02-11,183,B2,"Embodiments provision captive portals on network access points (NAPs). In response to a request from a NAP owner, a cloud service associates a NAP with the NAP owner and provides a control channel for configuring the NAP. The NAP owner inputs configuration settings describing the captive portal. The cloud service processes the configuration settings to generate configuration data. The cloud service transmits the configuration data to the NAP. The NAP applies the configuration data to configure the NAP. Some embodiments configure Wi-Fi hotspots with captive portals for gated access to the Internet.",10560853
10564854,2020-02-18,13,B2,"A system for load-balancing partitions of file servers of a file storage service of a cloud computing system is provided. The system collects latency information relating to access requests to access storage that is partitioned. The access requests are processed by the file servers. Each file server is assigned partitions, which are indexes to the storage. For each file server, the system generates, from the latency information, partition statistics relating to partition latency associated with each partition assigned to that file server. For each partition, the system applies rules to the statistics to determine actions to take to mitigate performance problems. Each rule has a condition and an action. When the condition of the rule is satisfied based on the partition statistics for the partition, the system records an indication to take the action of the rule.",10564854
10567356,2020-02-18,66,B2,"Monitoring of cloud computing environments subject to different data control policies is performed in a manner that ensures compliance with the data control policies. A monitoring service is located in a remote cloud computing environment separate from the cloud computing environments being monitored. The monitoring service does not have access to restricted data in the cloud computing environments, including access control data, such that the monitoring service cannot directly interact with network devices. The monitoring service issues requests for monitoring data to device access services in the cloud computing environments. In response to the requests, the device access services obtain access control data to access the network devices and obtain the requested data, which is returned to the monitoring service.",10567356
10581966,2020-03-03,4,B2,"A system includes determination of a resource stored in a cloud storage service, identification of a first cloud service associated with the resource, determination of a first pre-backup callback and a first post-backup callback associated with the first cloud service, transmission of the first pre-backup callback to the first cloud service, reception of a return of the first pre-backup callback from the first cloud service, transmission, in response to receipt of the return, of an instruction to the cloud storage service to backup the resource, and transmission of the first post-backup callback to the first cloud service.",10581966
10582550,2020-03-03,183,B2,Embodiments produce a set of instructions for connecting to a network through a network access point based on data crowdsourced from mobile computing devices. The crowdsourced data describes interactions between the mobile computing devices and the network access point when establishing a connection to the network. A cloud service analyzes the crowdsourced data to identify a set of instructions for association with the network access point. The mobile computing devices replay the set of instructions when subsequently attempting to connect to the network access point.,10582550
10586106,2020-03-10,12,B2,"An interactive and responsive presentation of spatially-associated information related to a user's environment based on the user's context is provided. Aspects of a 3D audio cloud system extract information about entities in the user's environment, and generate and provide the user with a 3D audio cloud that presents a spatial audio representation of entities in the user's environment that gives the user cues as to where the entities are located with respect to the user. An entity can be represented in a descriptive manner that provides the user with various types of information about the entity (e.g., shape, size, color, others' opinions, actions, emotions). Further, aspects of the 3D audio cloud system dynamically update the 3D audio cloud based on the user's location, position, or orientation, receive selection input from the user associated with the 3D audio cloud, and retrieve and present additional information as requested by the user.",10586106
10594711,2020-03-17,11,B2,"A method and device for detecting botnets in a cloud-computing infrastructure are provided. The method includes gathering data feeds over a predefined detection time window to produce a detection dataset, wherein the detection dataset includes at least security events and a first set of bot-labels related to the activity of each of at least one virtual machine in the cloud-computing infrastructure during the detection time window; generating, using the detection dataset, a features vector for each of a plurality of virtual machines in the cloud-computing infrastructure, wherein the features vector is based on idiosyncratic (iSync) scores related to botnet activity; transmitting each generated features vector to a supervised machine learning decision model to generate a label indicating if each of the plurality of virtual machines is a bot based on the respective features vector; and determining each virtual machine labeled as a bot as being part of a botnet.",10594711
10600252,2020-03-24,67,B2,"A first display device and method are provided for accelerating the coarse relocalization process of the first display device by generating a session-specific identifier and sending it to a second display device, which transmits the identifier to a cloud service, which returns at least a portion of a map data set corresponding to the identifier. The returned map data set is then stitched into the local map data of the first display device to create an integrated map, which is used to render one or a plurality of holograms. The first display device may comprise a processor, a memory operatively coupled to the processor, and a fingerprint program stored in the memory and executed by the processor.",10600252
10606667,2020-03-31,24,B2,"Computational tasks are mapped with computational locations in a distributed system such as a cloud computing environment. Mapping does not rely on workload estimates. Instead, tasks whose prerequisite tasks or other preconditions are determined to be mutually exclusive are co-located, while other tasks are mapped to different locations than one another. Locations are servers, processor cores, virtual machines, applications, or computational processes, for example. Mutual exclusivity may be determined by detecting that preconditions require different values of a shared variable in order to be satisfied, for example, or determining that preconditions correspond to different branches of a conditional programming statement. A satisfiability engine may also provide a satisfiability determination. Co-located tasks may also be batched, for improved execution performance. Co-location based on mutual exclusivity may result in fewer operations to save and restore task state, fewer cache misses, greater co-allocation of computational resources by the tasks, and easier debugging.",10606667
10606924,2020-03-31,18,B2,"A contextual file manager is described herein. Contextual information regarding files and folders of a file system of an operating system is collected. The contextual information may be collected from a variety of different sources, such as contents of the file or folder, an application associated with the file, a service provider, or a cloud storage service. The contextual information is then exposed in a file system interface of the operating system along with representations of the files and folders. In some cases, the contextual information is exposed in response to detection of an intuitive user action to a representation of one of the files or folders via the file system interface.",10606924
10616210,2020-04-07,72,B2,"Cloud-based storage services are provided for storing data across multiple devices, where access to the data is subject to a first authentication process. Embodiments are directed to a data protection feature to prevent accidental deletion or modification of the data stored at the cloud via unintended user actions on the clients or actions by nefarious software or hackers. For example, a data protection feature for a portion of data stored at the storage service may be selected, where the feature includes elevation of the first authentication process. An attempted operation performed on the portion of data may be detected. If the attempted operation is deletion or modification of the portion of data, a second authentication process may be prompted to enable the attempted operation to be performed on the portion of data at the storage service. The second authentication process may be elevated compared to the first authentication process.",10616210
10616327,2020-04-07,74,B2,"Policy based hydration behavior in cloud storage synchronization is provided. In some examples, user intent and defined policy or policies may be examined by a synchronization engine to determine when a synchronization should be aborted and instead redirected to viewing the requested file from the cloud, thereby avoiding the download. The synchronization engine may include a web interface with the ability to display and edit different types of files in this fashion. In addition to redirecting to the cloud, hydration may be blocked entirely in other examples. In a further example, a selective synchronization dialog may be launched to allow the user specify select action(s). A policy that dictates the hydration behavior may be persisted and updated as needed. To implement the policy, required operations on the local machine may be intercepted.",10616327
10616465,2020-04-07,28,B2,A system and method are disclosed for providing a real-time wireless video surveillance system. The video surveillance system leverages edge computing to enable wireless video surveillance distributing video processing between edges of the network and the cloud to reduce the amount of video that is uploaded to the cloud for analysis.,10616465
10620929,2020-04-14,14,B2,"A computing system is provided. The computing system includes a client device with a user interface, a server host, and a processor configured to execute a continuous delivery (CD) pipeline and communicate with a cloud-based hosting environment. The processor is configured to receive a staging request for software to be deployed to the cloud-based hosting environment. The processor is configured to initialize and execute a gate on a CD platform, the gate including criteria for evaluation of the software with at least one query defining results data; deploy software to a target environment; and, during a monitoring period, continuously receive and monitor results data from the software. The processor is configured to evaluate the results data, change a state of the gate, determine that approval conditions have been met for the software, and deploy the software to a production environment of the cloud-based hosting environment.",10620929
10623472,2020-04-14,13,B2,"Releases to the production environment of a cloud computing environment are deployed in a manner that maintains control over restricted data and the data plane of the cloud computing environment. A DevOps personnel is tasked with developing the release. However, the DevOps personnel is not authorized to deploy the release to the cloud computing environment because the DevOps personnel does not have access to restricted data in the cloud computing environment or the ability to modify the cloud computing environment to gain access to restricted data. Operating personnel who has access to restricted data and the right to modify the cloud computing environment is notified of the release and given release specifications providing details of the release. If the operator approves the release, the release is transferred to the cloud computing environment. A deployment engine then automatically deploys the release to the production environment of the cloud computing environment.",10623472
10623481,2020-04-14,47,B2,"In various implementations, methods and systems resource balancing in a distributed computing environment are provided. A client defined resource metric is received that represents a resource of nodes of the cloud computing platform. A placement plan for job instances of service applications is generated. The placement plan includes one or more movements that are executable to achieve a target placement of the job instances on the nodes. It is determined that the placement plan complies with placement rules. Each placement rule dictates whether a given job instance of the job instances is suitable for placement on a given node of the nodes. The placement plan is executed based on determining that the target placement of the job instances improves balance of resources across the nodes of the cloud computing platform based on the resource represented by the client defined resource metric.",10623481
10635426,2020-04-28,18,B2,"Aspects of the present disclosure relate to systems and methods for deploying payloads in a cloud service. In one aspect, one or more payloads may be deployed to a plurality of sample servers. Each of the one or more payloads may include a plurality of files. A hash value may be generated for each file of the plurality of files. A master hash value may be generated for each payload from the generated hashes for each file of the plurality of files. It may be determined whether the one or more payloads have changed since a previous deployment of the one or more payloads. When it is determined that at least one payload of the one or more payloads has changed, the at least one changed payload may be deployed to a plurality of data servers.",10635426
10635476,2020-04-28,14,B2,"Apparatus and methods can be implemented to perform software testing or to perform emulated hardware testing using a cloud architecture that can utilize centralized testing technology and can enable scaling up to test for multiple tenants and scaling up to arbitrary numbers of programs tested for each tenant. A user can configure an initial test virtual machine on a cloud platform for a cloud service over a physical network such as the Internet. Components of the cloud architecture can create a set of clones of the initial test virtual machine and inject tools into each clone for testing. Testing of one or more clones of the set can be conducted in an environment isolated from the physical network and isolated from a backend of the cloud service. Additional apparatus, systems, and methods are disclosed.",10635476
10637924,2020-04-28,5,B2,"Embodiments provide an API that provides metadata about a cloud service's endpoints in response to a single query. This allows a cloud service to advertise each of its endpoints through a common endpoint. The common endpoint may be present in each of a plurality of cloud services, thereby allowing each cloud service automatically discover metadata for other cloud services.",10637924
10642600,2020-05-05,76,B2,"A method and system for securing a cloud application are provided. The method includes receiving a webpage sent to a client device from at least one cloud application; injecting a piece of code into the webpage, wherein the piece of code maintains an encryption key in a document object model (DOM) of the webpage, wherein the piece of code allows encryption of any text field in the webpage when executed by the client device; intercepting at least one encrypted text field inserted into the DOM; and modifying the DOM by decrypting each of the intercepted at least one encrypted text field and inserting each decrypted text field into the DOM.",10642600
10644966,2020-05-05,180,B2,"A system for managing allocation of resources based on service level agreements between application owners and cloud operators. Under some service level agreements, the cloud operator may have responsibility for managing allocation of resources to the software application and may manage the allocation such that the software application executes within an agreed performance level. Operating a cloud computing platform according to such a service level agreement may alleviate for the application owners the complexities of managing allocation of resources and may provide greater flexibility to cloud operators in managing their cloud computing platforms.",10644966
10652091,2020-05-12,3,B2,Personalization data such as settings and/or state is migrated across devices including mobile phones. Device personalizations are pushed to a cloud service or other mechanism for backup and subsequent transmission to other devices. The personalization data can later be employed to configure one or more other devices in the same manner as a first device.,10652091
10656957,2020-05-19,228,B2,"An input method editor (IME) configured to provide language assistance across a plurality of applications is disclosed. In one example, the IME is adapted for use by English-as-a-second-language (ESL) users. In a specific example, language assistance may be provided by first detecting a need to suggest a substitute word to a user who is typing within an application. The detection may be based on a probability that a current word is in error. If a need is detected, a suggestion may be obtained for the word, such as from a cloud linguistic service or from a local lexicon and language-model, if network connectivity is poor. Once obtained, the suggestion may be displayed to the user in a non-intrusive manner by user interface element(s). Interaction with the user allows the user to accept or reject the suggestion, and perform other functions, such as relocating user interface elements utilized by the display.",10656957
10659225,2020-05-19,53,B2,"A system stores data in data units in a cluster in a cloud computing system, the data stored in the data units being encrypted or unencrypted depending on whether encryption is enabled or disabled when storing data in the data units. The system identifies one or more data units to defragment and defragments the identified data units by writing the data from the identified data units to one or more new data units and by releasing the identified data units for storing new data. The system encrypts unencrypted data from the identified data units when writing the data from the identified data units to the one or more new data units.",10659225
10659326,2020-05-19,7,B2,A user interface (UI) may be used to introduce a message into the cloud computing network. The message may be received by a service associated with the cloud computing network. The message may trigger the service to generate data in response to receiving the message. The generated data may include temporal data that includes the date and time data specifying when the message was received by the service. The generated temporal data may be forwarded to a telemetry store associated with the cloud computing network. A user or report generating operator portal may generate a report that includes the generated temporal data. The generated report may be used to determine if the service associated with the cloud computing network is functioning properly.,10659326
10664348,2020-05-26,31,B2,"Technologies for managing fault recovery in a cloud computing environment may be used after faults of various sizes, including faults which put total functioning capacity below subscribed capacity. Computing services have repair priorities. A fault recovery manager selects a higher priority service whose capacity is below a minimum availability, and chooses a lower priority service still above its minimal availability, and reassigns capacity from the lower priority service to the higher priority service without depriving the lower priority service of operability. Capacity reassignment continues at least until the higher priority service is at or above minimal availability, or the lower priority service is at minimal availability. Lower priority services may also be terminated entirely to free up resources for higher priority services. New deployments may be prevented until all services are at or above minimal availability. Spare capacity may be reserved against demand fluctuations or further faults.",10664348
10666517,2020-05-26,80,B2,"The application is directed to a cloud computing platform. The cloud computing platform includes a memory having instructions stored thereon for managing updates the cloud computing platform. The cloud computing platform also includes a controller, operably coupled to the memory. The controller is configured to execute an instruction of identifying an update for an existing cloud computing service operating on the cloud computing platform. The controller is also configured to download the update for the existing service. The controller is also configured to merge the differences between the downloaded update and the existing service to create a new image. The controller is also configured to test the new image offline. Further, the controller is configured to validate the new image online.",10666517
10671621,2020-06-02,11,B2,"A compute cloud hosts a distributed application and is configured to add or remove instances of the application at datacenters at disperse geographic regions. Operations of the application are captured in a telemetry stream. Each record in the telemetry stream indicates a time, client location, and performance measure for a corresponding client request. After pre-processing such as rounding the times, the telemetry records are passed to a frequent itemset mining algorithm that identifies frequent time-location pairs in the telemetry stream. The frequent time-location pairs are consolidated into encompassing frequent region time-range pairs. An aggregate performance measure is computed from the performance measures of the telemetry records that match a frequent region time-range pair. A recommended region and time for adding or removing instances of the application is computed based on the aggregate performance measure and the region time-range pair.",10671621
10673969,2020-06-02,23,B2,"A scalable data feed system is disclosed. The data feed system may be offered as a cloud service that can serve many enterprises or tenants that require data to be pulled from information sources such as FTP, POP3, databases, line of business systems, a topic subscription, or an RSS feed, and pushed the data to information sinks, such as SMTP, email, FTP, mobile phones, and other devices and services. A pull agent pumps data from pull sources and pushes the data out to push agent counterparts. The push agent transforms and sends the data in messages to push sink, such as FTP, SMTP, or a mobile device. Both the pull agent and the push agent services are implemented as replicated services over a structured overlay network for high availability that can serve multiple requests to pump out data from multiple pull sources and push the data to multiple information sinks.",10673969
10678665,2020-06-09,12,B2,A computer system is provided that includes a cloud platform that includes a plurality of nodes. Each node includes a processor configured to run virtual machines. The cloud platform includes a fault condition injection engine configured to generate fault conditions on selected nodes of the plurality of nodes. The computer system further includes a user interface system configured to receive user input of fault condition experimentation parameters from a user for a target virtual machine associated with the user. The cloud platform allocates a set of nodes of the plurality of nodes for a controlled sandbox environment configured to run the target virtual machine of the user. The fault condition injection engine generates fault conditions on the allocated set of nodes based on the fault condition experimentation parameters.,10678665
10678925,2020-06-09,18,B2,"In some embodiments, disclosed subject matter involves proactive monitoring and detection of anomalies in user data hosted by a cloud storage server and user interaction with data to trigger quarantine of user data stored in the cloud storage. In at least one embodiment, data recovery from one or more quarantine states is available to a user after authentication. Quarantine levels may permit or prohibit various actions on the user data by the user who owns the data, an asynchronous process for data cleanup, and access by other authorized users, etc. In an embodiment, quarantine levels are associated with the user and affect the user data space rather than merely individual files. The proactive monitoring may include collection of telemetry based on the API calls to the cloud server, scanning of user file system and hierarchy, and other file or data space corruption. Other embodiments are described and claimed.",10678925
10686596,2020-06-16,9,B2,"An interface, through which functionality of a cloud computing infrastructure can be accessed, can create defined endpoints through which such an interface is accessed, with such defined endpoints limiting the functionality accessible through the interface to only allowed functions. An elevate function can, through a secure key exchange protocol, receive appropriate assurances and can, in response, remove the functionality limitations of the endpoint, thereby enabling unfettered access to the cloud computing infrastructure. Such unrestricted access can be limited in duration, which duration can be established in advance, or agreed-upon through the key exchange mechanism.",10686596
10694210,2020-06-23,40,B2,"Innovations in scalable compression and decompression of point cloud data are described. For example, after an encoder uses a transform such as a region-adaptive hierarchical transform (“RAHT”) on attributes of occupied points in point cloud data, the encoder separates transform coefficients into partitions. The partitions can be associated with different regions of a point cloud frame (spatial location scalability), different spatial resolutions of point cloud data (spatial resolution scalability), different reconstruction quality levels (SNR scalability), different point cloud frames organized in temporal layers (temporal resolution scalability), or different combinations of the preceding types of partitions. For decoding, a decoder can select all of the partitions or a subset of the partitions. The decoder decodes encoded data for the selected partitions, applying an inverse transform such as an inverse RAHT to transform coefficients for attributes of occupied points in point cloud data.",10694210
10705883,2020-07-07,9,B2,"Various embodiments herein each include at least one of systems, methods, and software for instantiating, executing, and operating dynamic hybrid computing environments, such as in cloud computing. Some such embodiments include allocating computing resources of a first server cluster to instantiate a first cluster and to establish a computing session. This embodiment may then initiate execution of a program within the first cluster that offloads at least one computing task to a second cluster, when the second cluster is instantiated, to leverage high-computing speed performance capabilities of the second cluster with regard to certain computing operations. Upon completion of program execution, the second cluster is then deallocated.",10705883
10708136,2020-07-07,47,B2,"Network management of cloud computing environments subject to different data control policies is standardized in a manner that ensures compliance with the data control policies. Executions services and source of truth services are located in a remote cloud computing environment separate from the cloud computing environments being managed. The execution services implement workflows to manage different aspects of the cloud computing environments, including monitoring, incident management, deployment, and buildout. The source of truth services provide network configuration information for the cloud computing environments to allow automated operation of the execution services. The execution services issue requests for management operations to device access services in the cloud computing environments. In response to the requests, the device access services obtain access control data to access the network devices and perform the management operations.",10708136
10708347,2020-07-07,22,B2,"In representative embodiments, multiple cloud computing infrastructures, each having its own application and management fabric, coexist with in the same cloud computing infrastructure. This results in a cloud computing infrastructure where multiple management fabrics and application fabrics coexist to offer their own services and cross platform services. Each functions independently and also communicates with each other to offer high availability and disaster recovery. One application and management infrastructure is a host to the other application and management infrastructure. The hosted infrastructure accesses underlying fabrics through the host infrastructure. A resultant system comprises a common hardware fabric, a common runtime, and a service fabric comprising services from both the host and hosted infrastructures.",10708347
10713073,2020-07-14,11,B2,"Provided are methods and systems for facilitating selection of a cloud configuration for deploying an application program with high accuracy, low overhead, and automatic adaptivity to a broad spectrum of applications and cloud configurations. The methods and systems are designed for building a performance model of cloud configurations, where the performance model is capable of distinguishing an optimal cloud configuration or a near-optimal cloud configuration from other possible configurations, but without requiring the model to be accurate for every cloud configuration. By tolerating the inaccuracy of the model for some configurations (but keeping the accuracy of the final result) it is possible to achieve both low overhead and automatic adaptivity: only a small number of samples may be needed and there is no need to embed application-specific insights into the modeling.",10713073
10715533,2020-07-14,129,B2,"A system for detecting by a cloud service a ransomware attack on a client device is provided. The system monitors changes to files of the client device that are stored by the cloud service. The system assesses whether a change to a file appears to be malicious in that the change may be caused by ransomware. When the change to the file appears to be malicious, the system performs a countermeasure to prevent synchronization of files of the client device with other client devices and with the cloud service to prevent the propagating of files from the client device, which is undergoing a ransomware attack.",10715533
10721097,2020-07-21,9,B2,"Techniques for dynamically scaling instances of virtual private network (VPN) gateway in a cloud computing system are disclosed herein. In one embodiment, a method includes determining whether a number of packets processed by a first instance of the VPN gateway exceeds a preset threshold. In response to determining that the number of packets exceeds the preset threshold, a new security association (SA) corresponding to a portion of the VPN network traffic is created. Upon completion of creating the SA, a load balancing policy at a load balancer is modified to forward a portion of the network traffic to a second instance of the VPN gateway when an incoming packet contains a security parameter index (SPI) corresponding to the created SA in its EPS header.",10721097
10721220,2020-07-21,103,B2,"A data custodian and curation system may store data from a data supplier in encrypted form and may allow users to consume the data when the consumers obtain access to the data through an agreement. The curation system may manage access to the data, even allowing a consumer to use the data as if it were their own, but may track each usage of the data to implement a payment scheme or various usage restrictions. The curation system may encrypt downstream uses of the data and operate as a digital rights management system for the data. The custodian and curation system may operate as a cloud service that may contain encrypted data from many data providers but where the data providers may individually control access to their data in a managed system at any granular level.",10721220
10740078,2020-08-11,35,B2,"Techniques are described herein that are capable of dynamically installing plugin(s) for application(s). An agent plugin is caused to run in a deployment of a specified application (e.g., across multiple machines in a cloud environment or “on premises”). The specified application is packaged to include the agent plugin. The agent plugin is used to install designated plugin(s) dynamically based on configuration information regarding the specified application. The configuration information indicates that the designated plugin(s) are to be installed in response to the specified application being deployed.",10740078
10740461,2020-08-11,3,B2,"Identification of an entity performing a deletion or modification action on locally stored files and notification to mitigate risks to cloud stored files is provided. A local or remote file watcher may monitor locally stored files and detect a deletion or modification action. The file watcher may also identify an entity performing the deletion or modification action. The entity may be an application, a process, a user other than the user that is the owner of the files, or the user himself/herself. The file watcher may further determine one or more alert conditions or rules associated with the affected file(s) and/or the entity, that is under which circumstances an alert is to be issued. The alert notification(s) may be issued to the user, an administrator, a cloud storage service, and/or a data protection service such that protective measures can be taken if necessary.",10740461
10740639,2020-08-11,13,B2,"The electronic devices described herein are configured to enhance user experience associated with using a pen or other writing implement and capturing the content written or drawn. A cartridge device is coupled to or included in the pen or writing implement. The cartridge device is configured to collect pen input based on the pen being used by a user to write or draw. Collected pen input is saved on the cartridge device and, when a connection to a network storage device or cloud server is detected, the collected pen input is uploaded. The cartridge device may be associated with a user account based on user credentials, such that pen input stored and/or uploaded is associated with the user account on the cartridge device and don the network storage device or cloud server.",10740639
10747728,2020-08-18,11,B2,"As users increasingly shift to cloud services, devices are less likely to be pre-loaded with applications that support the multitudes of different file types that exist today and are continuing to be created. Thus, embodiments are directed to editing and sharing unsupported files through an instantly generated preview without having to install applications that support each file type and/or subscribe to services. For example, in response to detecting a user's request to access a file that is stored locally and determining a lack of a local application or previewer associated with the file, a preview that includes a presentation of the file using a registered previewer may be instantly generated. The preview may be rendered such that the file can be edited and/or shared through the previewer based on a level of editing and/or sharing functionality, respectively, where the levels of functionality are based on the user's subscription status.",10747728
10747729,2020-08-18,20,B2,"Device-specific chunked hash size tuning to maximize synchronization throughput is described. A synchronization client application or similar program may employ hashing to detect changes to content of remotely stored files and synchronize those (as opposed to synchronizing all files, for example). Instead of using static hash chunk sizes for all client applications of a cloud storage service, the synchronization client application may determine the size of hash buffer by baselining throughput of hashing on each synchronization device and finding the number of bytes hashed in a given amount of time. Thus, hash chunk size may be optimized on a machine by machine basis.",10747729
10748070,2020-08-18,28,B2,Technologies are described herein for identification and presentation of changelogs relevant to a tenant of a multi-tenant cloud service. Change feature extraction is performed on changelogs associated with a tenant of the multi-tenant cloud service to identify features associated with the changelogs. Machine learning based classification can then be performed on the changelogs to classify the changelogs. Misclassification correction might also be performed on the classified changelogs. Machine learning can also be utilized to identify a subset of the changelogs as being relevant to the tenant. A user interface (UI) can then be generated and provided to the tenant that includes the subset of the changelogs. The tenant's interaction with the changelogs presented in the UI can be monitored and data describing the interaction can be used to modify machine learning models utilized for machine learning change classification and for determining the relevance of a changelog to the tenant.,10748070
10749771,2020-08-18,21,B2,"Systems are provided for facilitating the disclosed methods for performing event storage and diagnostic processing within a hybrid cloud environment. Event records are gathered and batched at an on-premises server. The event records are also appended with correlation vector data that enables the event records to be correlated with other events. The batch of event record batches are signed with a security key associated with a cloud storage container and the on-premises server is restricted to writing the batch of event records to the container. In some instances, the size of the batch is based on a duration of time for collecting records, which can be adjusted to accommodate for missing data.",10749771
10749854,2020-08-18,72,B2,"Single sign-on identity management between local and cloud-based systems is provided. A remote or cloud-based authentication endpoint is registered as a local device, service or resource in a user's local directory services system. A local device and associated user requesting access to cloud-based resources will then see the authentication endpoint as an internal (inside the enterprise) server and may supply an authentication ticket which includes on-premises log-in or sign-on identity for the user. The remote or cloud-based authentication endpoint may then validate the authentication ticket, and the user may then access devices, applications and services operated in association with the remote or cloud-based authentication endpoint without a second or separate log-in or sign-on and without use of additional authentication equipment at the user's enterprise network.",10749854
10749868,2020-08-18,6,B2,"Embodiments described herein are directed to the registration of the same domain with different cloud services networks. For example, systems and methods described herein enable registering a domain in a cloud services network wherein the same domain is also concurrently registered in another cloud services network. Systems and methods described herein further enable selecting one of a plurality of cloud-based identity providers to process a request to authenticate a user associated with a domain that is registered in more than one cloud services network and generating an authentication response in accordance with the selection. Systems and methods described herein also enable the federation of user authentication requests from different cloud services networks to the same enterprise identity provider.",10749868
10749971,2020-08-18,14,B2,"Techniques for intelligently managing a virtual private network (VPN) gateway in a cloud computing system are disclosed herein. In one embodiment, an instance of a VPN gateway can query whether a logic lock on a network address is maintained by another instance via periodic renewal. In response to receiving a query result indicating that a logic lock on the network address is lost by the another instance, the instance can migrate a VPN connection originally handled by the another instance from the another instance to the instance such that a private network is connected to the instance via the migrated VPN connection to reduce downtime for accessing computing resources in the cloud computing system.",10749971
10754631,2020-08-25,39,B2,"Methods and systems for determining an upgrade readiness metric of a tenant in a cloud environment. One method includes receiving, with an electronic processor, device telemetry data for a plurality of devices associated with a first plurality of tenants in the cloud environment and receiving, with the electronic processor, software telemetry data for a second plurality of tenants in the cloud environment. The method also includes determining, with the electronic processor, the upgrade readiness metric for the tenant based on the device telemetry data and the software telemetry data and displaying the upgrade readiness metric within a user interface.",10754631
10754976,2020-08-25,31,B2,"An image is configured as private within a storage container. An image processing application initiates operations to configure the image as private upon receiving the image captured by an image capture device. A metadata table is generated for the image. The metadata table includes a privacy tag. A privacy value is determined for the privacy tag. Next, the privacy tag is configured based on the privacy value. The privacy tag determines an access to the image based on the privacy value. The image is stored with the metadata table in a storage container. The storage container is hosted locally or in a cloud based storage.",10754976
10756982,2020-08-25,0,B2,"According to some embodiments, a machine learning architecture design platform may access a microservice architecture design data store that contains existing microservice architecture designs, and a graphic abstraction computing component may automatically create existing graph models of the existing designs. A pattern recognition computing component may then execute a machine learning algorithm to access the existing graph models and automatically detect existing design patterns. A designer interface computing component may interactively and iteratively exchange information with a designer, including receipt of at least one design requirement from the designer. Based on the at least one received design requirement and the automatically detected existing design patterns, a dynamic recommendation computing component may automatically construct a recommended microservice architecture for the cloud computing environment. In some embodiments, a quality assessment computing component may evaluate a potential microservice architecture design.",10756982
10757059,2020-08-25,9,B2,"Various parts of email content or entire emails may be recalled or modified after delivery through the use of links to cloud-storage, where the various parts of the email content may be stored. Different notification and modification methods may be employed to modify delivered content even after it is rendered for a recipient. While recipients may have a latest version of the email content, senders may be enabled to see a version history of changes in delivered email content.",10757059
10757197,2020-08-25,20,B2,"Embodiments of the invention provide the capability to combine service installation and service registration in a cloud system. This process reduces the installation of a multi-tenant service into a single-step process. For example, a cloud system admin may simply install the new service and registration is accomplished automatically as part of the installation.",10757197
10762040,2020-09-01,27,B2,"Schematized data roaming is described herein. In one or more implementations, a cloud service includes a cloud data store that is configured to store schematized data comprising user preferences and settings of client devices associated with a user profile. The schematized data includes a schema that is shared across the client devices and globally defined by the cloud service which enables the user preferences and setting to be re-used across multiple devices and device classes, including devices that the user has not previously interacted with before. The schematized data includes attributes, for each schematized data structure, which provide rules for processing or storing the corresponding schematized data structure in the cloud data store. Such attributes may include a conflict resolution policy, an upload policy, or a partition policy.",10762040
10762054,2020-09-01,18,B2,"Determination logic for a cloud content states framework is described herein. In implementations, a framework is configured to perform operations for management of cloud content files at the computing device on behalf of cloud storage providers. Determination logic for the framework is utilized to make state determinations in dependence upon a defined set of file sync properties. The framework operates to make assessments of the file sync properties and set states for files in accordance with the assessments. In implementations, file sync properties are related to corresponding states through a mapping data structure that maps file sync property values to different states and enables look-ups of states based on property values. The framework utilizes and references the mapping data structure to match file sync properties identified for cloud content files to corresponding states and then set states for the cloud content files accordingly.",10762054
10762218,2020-09-01,66,B2,"Network buildout of cloud computing environments subject to different data control policies is performed in a manner that ensures compliance with the data control policies. A buildout service is located in a remote cloud computing environment separate from the cloud computing environments at which buildout is being performed. The buildout service implements workflows to manage different aspects of network buildout in the cloud computing environments. The buildout service does not have access to restricted data in the cloud computing environments, including access control data, such that the buildout service cannot directly interact with network devices. The buildout service issues requests for device configuration to hardware proxies in the cloud computing environments. In response to the requests, the hardware proxies obtain access control data to access and configure the network devices.",10762218
10764303,2020-09-01,10,B2,"Embodiments detect unauthorized access to cloud-based resources. One technique analyzes cloud-based events to distinguish potentially malicious velocity incidents from benign velocity incidents. A velocity incident occurs when the same user causes events from two geographically remote locations in a short time. Benign velocity incidents are distinguished from malicious velocity incidents by comparing an event with past events that have the same features. Embodiments probabilistically determine if a velocity incident is malicious or benign based on a weighted multi-feature analysis. For each feature of an event, a probability is calculated based on past events that have the same feature. Then, each feature is associated with a weight based on a relative frequency of past events having that feature. A weighted average of probabilities is calculated, and the resulting probability is compared to a defined threshold to determine if the velocity incident is likely malicious or benign.",10764303
10768920,2020-09-08,42,B2,"Software updates within one or more regions of a multi-tenant cloud are coordinated. Tenant vs. tenant conflicts, tenant vs. infrastructure provider conflicts, and conflicts between security and another priority are identified and resolved using a shared update coordinator, update priority specifications, and availability specifications. An infrastructure update request may be presented to tenants for approval. Postponed infrastructure updates may be prioritized higher. Preventing exploits of zero-day vulnerabilities may be prioritized over meeting availability targets. Updates may be merged to reduce downtime, even when the updates originate from independently controlled entities. Maximum downtime, minimum fault domains, minimum virtual machines, permitted update start times, and other availability criteria may be specified. Updates may be preempted, or allowed to complete, based on their relative priorities. Tenants and infrastructure providers may still use their own deployment engines after updates are coordinated. Rogue behaviors involving adverse update approvals or disapprovals may be detected.",10768920
10769007,2020-09-08,13,B2,"A system may include a node historical state data store having historical node state data, including a metric that represents a health status or an attribute of a node during a period of time prior to a node failure. A node failure prediction algorithm creation platform may generate a machine learning trained node failure prediction algorithm. An active node data store may contain information about computing nodes in a cloud computing environment, including, for each node, a metric that represents a health status or an attribute of that node over time. A virtual machine assignment platform may then execute the node failure prediction algorithm to calculate a node failure probability score for each computing node based on the information in the active node data store. As a result, a virtual machine may be assigned to a selected computing node based at least in part on node failure probability scores.",10769007
10769278,2020-09-08,77,B2,"A cloud storage server determines features of files in a storage account of the cloud storage server. The storage account is registered with a client device. The cloud storage server detects ransomware activity based on the features of the files. A notification is generated to the client device. The notification indicates the detected ransomware activity in the storage account, and one or more remediation options for the detected ransomware activity in the storage account. The cloud storage server receives, from the client device, a remediation option selected from the one or more remediation options and recovers one or more files in the storage account based on the selected remediation option.",10769278
10769350,2020-09-08,36,B2,"Enhanced links in a message composition surface are described. A uniform resource locator (URL) may be identified while a user is composing a message in a message composition surface of an electronic message such as an email. A source of the URL and the file type of the document linked to by the URL can be determined and a preview of the document can be rendered in the message composition surface. When the source is a cloud storage location, access permissions for the document can be adjusted from within email—without the user navigating to a file management site of the cloud storage. When the file type is a productivity application, a link rendering element can call a productivity application service to provide interaction functionality for the productivity application file and facilitate the rendering of the productivity application file.",10769350
10769641,2020-09-08,18,B2,"Techniques for managing service requests in cloud computing systems are disclosed herein. In one embodiment, a method can include in response to determining that a profile of detected service requests substantially deviates from the predetermined profile, identifying a component failure of a service component in the cloud computing system by searching a database containing operational event logs of the cloud computing system based on the detected service requests. The method can then include posting, on a user portal of the cloud computing system, a notification to additional users regarding the identified component failure of the service component and performing various remedial actions to correct the identified component failure.",10769641
10785105,2020-09-22,13,B1,"In non-limiting examples of the present disclosure, systems, methods and devices for monitoring telemetry data from a cloud-based application service are presented. Telemetry data for a plurality of operations for the cloud-based application service may be analyzed, wherein the analysis comprises comparing a first time series with a second time series, and where data from the second time series relates to operations that were executed prior in time compared with execution of operations related to the first time series. One or more operational changes in the cloud-based application service may be identified based on the analysis, and at least one telemetry monitor may be dynamically configured based on the one or more operational changes that were identified.",10785105
10785719,2020-09-22,5,B2,"A base station utilizes duty cycle requirements of each of multiple base station components to efficiently consume power. The base station may include a synchronization module that allows the base station to send collected data from a cache to a gateway, which then, sends it up to the cloud. The base station may also include a sensor connectivity module that establishes a connection between the base station and data collecting devices deployed to collect data for storage in the cache. A base station controller serves as the cache for the data collected by the sensor module and sends the data to the gateway for synchronization in the cloud using the synchronization module. A base station controller determines/coordinates the duty cycle of the sensor connectivity module and synchronization module in a power efficient way depending on the current power available to the base station, network needs, and the weather conditions.",10785719
10789044,2020-09-29,8,B2,"A digital assistant supported across devices such as smartphones, tablets, personal computers, wearable computing devices, game consoles, and the like includes an end-to-end user experience client that interfaces with extensions to applications and/or remote cloud-based services so that user experiences, content, or features can be integrated with the digital assistant and rendered as a native digital assistant user experience. The digital assistant is configured to perform as an active participant in a user experience from its initiation to its conclusion (i.e., from “end-to-end”) by determining the user's intent, performing tasks and actions, providing status, and interacting with the user as needed. The digital assistant utilizes proximity sensing so that its end-to-end participation in a user experience may span different physical locations. Such capability can facilitate the performance of location-specific actions including authenticating the user to gain access to locations, information, or services that would be restricted from non-authenticated users.",10789044
10789135,2020-09-29,6,B2,"A system may include a cloud-based virtual machine connected to multiple virtual hard drives and associated with a guest of a first datacenter. A recovery management server may, substantially simultaneously for each virtual hard drive, create an Infrastructure-as-a-Service snapshot of data on the virtual hard drive without utilizing an agent of the virtual machine. The recovery management server may also directly replicate the snapshot of data for each virtual hard drive at a second datacenter, which may be geographically remote from the first datacenter, without re-creating Input Output (“IO”) operations for each virtual hard drive via a log file. Upon an indication of failure of the first datacenter, the recovery management server may arrange to have each virtual hard drive's replicated snapshot of data be consumed by a recovery service for the guest at the second datacenter.",10789135
10791105,2020-09-29,31,B2,"The techniques described herein facilitate proactively discovery of remote micro-services by spreadsheet applications, e.g., Microsoft Excel®. In an implementation, a method of operating a spreadsheet application to proactively discover remote micro-services based on credential information is disclosed. The method includes identifying the credential information associated with a user of the spreadsheet application responsive to detecting a micro-service updating event and proactively discovering one or more micro-services that are available to the user of the spreadsheet application through a cloud service platform based on the credential information. The method further includes persisting a list including the one or more micro-services that are available to the user of the spreadsheet application based on the credentials.",10791105
10795733,2020-10-06,29,B2,A cloud manager controls the deployment and management of machines for an online service. A build system creates deployment-ready virtual hard disks (VHDs) that are installed on machines that are spread across one or more networks in farms that each may include different configurations. The build system is configured to build VHDs of differing configurations that depend on a role of the virtual machine (VM) for which the VHD will be used. The build system uses the VHDs to create virtual machines (VMs) in both test and production environments for the online service. The cloud manager system automatically provisions machines with the created virtual hard disks (VHDs). Identical VHDs can be installed directly on the machines that have already been tested.,10795733
10795738,2020-10-06,10,B1,"Generally discussed herein are devices, systems, and methods for computer or other network device security. A method can include providing an alert to a device of a first cloud user in response to determining an operation performed on a cloud resource is inconsistent with a behavior profile that defines normal operation of the cloud resource, receiving feedback from the first cloud user regarding the alert, and generating, for a second, different cloud user and by prioritizing a second alert based on the feedback from the first cloud user, a second alert.",10795738
10802764,2020-10-13,52,B2,"Storage virtualization techniques allow directories to be stored remotely, for example, by a cloud storage provider, but in a manner that appears to a user or application running on a local computing device as if the directories are stored locally—even though the data of those directories may not be resident on the local computing device. That is, the contents of directories that may exist in the cloud look and behave as if they were stored locally on a computing device.",10802764
10803401,2020-10-13,41,B2,"The multiple independent processes run in an AI engine on its cloud-based platform. The multiple independent processes are configured as an independent process wrapped in its own container so that multiple instances of the same processes can run simultaneously to scale to handle one or more users to perform actions. The actions to solve AI problems can include 1) running multiple training sessions on two or more AI models at the same time, 2) creating two or more AI models at the same time, 3) running a training session on one or more AI models while creating one or more AI models at the same time, 4) deploying and using two or more trained AI models to do predictions on data from one or more data sources, 5) etc. A service handles scaling by dynamically calling in additional computing devices to load on and run additional instances of one or more of the independent processes as needed.",10803401
10812363,2020-10-20,14,B2,"Some embodiments are associated with a data center cloud computing environment executing a plurality of virtual machines. A virtual machine data store may contain information about the plurality of virtual machines associated with the cloud computing environment. A virtual machine test platform may access the information in the virtual machine data store and periodically initiate a network test for each of the plurality of virtual machines based on the information in the virtual machine data store. The virtual machine test platform may then receive network test result signals from the virtual machines in response to the executed network tests and apply, for each virtual machine, a digital signal processing noise filter to successive network test result signals from that virtual machine. An output of the digital signal processing noise filters may then be transmitted from the virtual machine test platform.",10812363
10817498,2020-10-27,14,B2,"Methods, systems, and programs provide for executing distributed transactions in a cloud storage system with a hierarchical namespace. One method includes receiving a request with operations to be executed atomically. Further, nodes are identified for executing the operations, each node having a respective clock and having at least part of a transactions table for controlling updates to entities. Each clock is one of a loosely-synchronized, a strictly-synchronized clock, a logical, or a physical clock. Additionally, the nodes process the operations, which includes setting a commit timestamp (CS) to a value of the clock in the node if the node is a first node in the processing. One node coordinates the transactions, and may be one of the nodes executing transactions. If the clock in the node is less than a current value of the CS, the node waits for the clock to reach the current value of the CS and the CS is updated. The transactions table is updated based on the value of the CS, the atomic execution is committed utilizing the final value of the CS, and a status is returned.",10817498
10825241,2020-11-03,24,B2,"A wearable device is configured with a one-dimensional depth sensor (e.g., a LIDAR system) that scans a physical environment, in which the wearable device and depth sensor generate a point cloud structure using scanned points of the physical environment to develop blueprints for a negative space of the environment. The negative space includes permanent structures (e.g., walls and floors), in which the blueprints distinguish permanent structures from temporary objects. The depth sensor is affixed in a static position on the wearable device and passively scans a room according to the gaze direction of the user. Over a period of days, weeks, months, or years the blueprint continues to supplement the point cloud structure and update points therein. Thus, as the user continues to navigate the physical environment, over time, the point cloud data structure develops an accurate blueprint of the environment.",10825241
10826724,2020-11-03,10,B2,A cloud service provider's enterprise edge device and network interface are configured to establish a single tunnel connection with a remote server for delivering data packets to multiple distinct virtual machines on the remote server. The provider's enterprise edge device stores the network address information for each virtual machine and remote server to attach the destination network addresses to the data packet for transmission to the appropriate virtual machine on the remote server. Utilizing a single tunnel to transmit data packets to multiple virtual machines increases scalability at the provider's enterprise edge device and reduces system resources compared to other implementations in which the provider uses a tunnel for each virtual machine on a remote server.,10826724
10827008,2020-11-03,7,B2,User interface integration across multiple clouds is achieved by hosting UI extensions for different services in the same browser window. The UI extensions are initialized by a shell with any necessary security context for the corresponding cloud. The shell provides versioning so that the newest version of the UI is presented to users for all versions of a service. A connector in a local cloud provides translation between APIs across different clouds.,10827008
10831720,2020-11-10,14,B2,"Methods, systems, and computer programs are presented for providing file system functions on a cloud storage system based on blob storage. A cloud storage system comprises storage clusters, and each storage cluster comprises a plurality of storage nodes (each including a partition layer that stores data in blobs organized within containers, and a stream layer for streaming blob data), a hierarchical namespace service for implementing file system functions on the data stored in the blobs and, a front end layer for processing user requests to access and manage data stored on the blobs. The file system functions include flat namespace functions and hierarchical namespace functions. Further, the front end layer accesses the partition layer to access the blobs based on addresses of blobs and accesses the hierarchical namespace service to identify the blobs.",10831720
10831913,2020-11-10,24,B2,"Systems, methods, and computer-readable storage media are provided for securely storing and accessing content within a public cloud. A processor manufacturer provides processors having secure enclave capability to a cloud provider. The provider makes available a listing of processor identifiers (CPUIDs) for processors available for storing content and having secure enclave capability. A content owner provides CPUIDs for desired processors from the listing to the manufacturer which provides the content owner with a processor-specific public code encryption key (CEK) for encrypting content to be stored on each processor identified. Each processor is constructed such that content encrypted with the public CEK may only be decrypted within a secure enclave thereof. The content owner encrypts the desired content with the public CEK and returns the encrypted content and the CPUID for the appropriate processor to the cloud provider. The cloud provider then stores the encrypted content on the particular processor.",10831913
10834055,2020-11-10,49,B2,"A system and method for cross-tenant data leakage isolation in a multi-tenant database are provided. The method includes monitoring, by a proxy device, traffic flows between a server executing at least one cloud-based application and the multi-tenant database, wherein the proxy device is connected between the server and the multi-tenant database; capturing, by the proxy device, at least a response from the multi-tenant database, wherein the response includes returned data; analyzing the response to determine if the returned data relates to a global-tenant table; upon determining that the returned data relates to the global-tenant table, modifying the response to designate at least one tenant-specific table name that the returned data belongs to; and sending the modified response to the server.",10834055
10838775,2020-11-17,5,B2,"A mechanism is provided for a cloud computing infrastructure, a mechanism is provided for balancing client sessions across virtual machines such that the number of virtual machines is efficiently managed. In some embodiments, the total number of virtual machines is minimized to reduce power consumption, cooling, and other cost drivers, while assigning users across the sessions. In one embodiment, the sessions in a virtual machine with low activity are migrated to a virtual machine with higher session rates to allow for the shutdown of the low usage virtual machines. In another embodiment, new user sessions are assigned according to a minimum performance standard.",10838775
10841148,2020-11-17,25,B2,"Embodiments of the present invention are directed to methods by which different services registered with cloud infrastructure may recover in case of disaster. Also directs procedures with which a resource provider may recover and rebuild its cloud resource information by scanning actual resources available. A resource provider will synchronize resources with a central service to get updated consumer and subscription information. In the scenario in which a central service fails and is recovered from backup, the central service should synchronize with resource providers to update its resource information.",10841148
10846262,2020-11-24,11,B2,"A cloud-based migration system exposes a source-independent application programming interface for receiving data to be migrated. The data is uploaded and stored as a single entity in a cloud-based storage system. A migration system then accesses the migration package and begins migrating the data to its destination, from the cloud-based storage system.",10846262
10848522,2020-11-24,5,B2,"A JIT service in a cloud computing environment manages just-in-time access to resources in the cloud computing environment for an external device. When JIT access to a resource is requested by a device, the JIT service retrieves a JIT policy for the resource that includes screening criteria limiting automatic granting of JIT access to users who meet the screening criteria. Screening information for a user associated with the request is evaluated against one or more screening requirements set forth by the screening criteria. If the screening criteria and any other criteria of the JIT policy are satisfied, the JIT service provisions JIT access to the resource for the device.",10848522
10848614,2020-11-24,16,B2,"A dynamically created and automatically updated personalized cloud of mobile tasks may be displayed on an interactive visual display via a personalized cloud generator application. The personalized cloud generator application may receive and/or capture information representing a mobile task performed by a mobile computing device user. The personalized cloud generator application may then store the information and determine a relevance of a given performed mobile task. If the relevance of the performed mobile task meets a prescribed threshold, the personal cloud generator application may display a selectable visual representation (e.g., selectable icon) of the performed mobile task. Given a user's activity, the visual representation may be automatically updated (displayed, removed, moved, resized, etc.) based on the information received and/or captured. Subsequent selection of the displayed visual representation allows quick and easy access or performance of the associated mobile task.",10848614
10853215,2020-12-01,6,B2,"A solution is disclosed for intelligent configuration management of user devices that includes: receiving application performance data for a plurality of applications from each of a first plurality of tenant environments or cloud services or both, the application performance data including a program ID for at least one application of the plurality of applications; receiving incident alerts related to the first program ID from each of a second plurality of tenant environments; based at least on receiving the incident alerts, determining whether a count of the second plurality of tenant environments meets a threshold; and based at least on the count of the second plurality of tenant environments meeting the threshold, requesting incident reports related to the program ID from each of a third plurality of tenant environments, wherein the third plurality of tenant environments has a smaller count than the count of the second plurality of tenant environments.",10853215
10862979,2020-12-08,31,B2,"The techniques described herein facilitate supporting remote micro-services from cloud-based analytics platforms as native functions in spreadsheet applications, e.g., Microsoft Excel®. In an implementation, a method of supporting remote micro-services as native functions in a spreadsheet application is disclosed. The method includes accessing a listing identifying at least one micro-service that is available for use by a user of a spreadsheet application. The at least one micro-service is remotely located in a cloud service platform. The method further includes obtaining a schema associated with the at least one remote micro-service, generating a translation model based on the schema, and registering the skeleton spreadsheet function as a native function in the spreadsheet application. The translation model maps between the at least one remote micro-service and a skeleton spreadsheet function.",10862979
10873510,2020-12-22,7,B2,"A cloud declarative language is used to configure and reconfigure cloud computing environments. The language includes physical and logical topology declarations as well as cloud operations commands, and allows users to declare commands at multiple topology hierarchies. The language may be used to create scripts and sets of scripts that are used to configure cloud stacks and other operational parameters. Scripts may be created through direct editing by cloud designers or with the aid of graphical user interfaces. Scripts may be automatically generated using templates of configurations and requirements and use for rapid prototyping and testing of cloud environments. Scripts may also be used to monitor conformance with specified configurations, and to facilitate deployment of incremental modifications to configurations.",10873510
10873541,2020-12-22,17,B2,"A resource allocation system is provided and includes a processor, a memory, and an application including instructions configured to: receive forecast data from a forecast server computer indicating a predicted metric value corresponding to a cloud-based service for a first geographical region; determine an expected usage amount for the first geographical region based on the predicted metric value; determine a failover resource amount to cover a portion of a load in a second geographical region due to a failure; determine a predicted resource allocation value based on the expected usage and failover resource amounts; determine a reactive resource allocation value based on the predicted metric value or a parameter, where the parameter corresponds to access of cloud-based resources for the cloud-based service; prioritize the predicted and reactive resource allocation values; and adjust a resource allocation amount for the first geographical region over time based on a result of the prioritization.",10873541
6912622,2005-06-28,7,B2,"A peer-to-peer cache architecture stores peer address certificates in different cache segments according to the number of IDs being stored and their relative distance in the peer name space. The cache instantiates regions of decreased range and increased granularity as additional information from close peers is learned. In a large peer cloud where the number of instantiated IDs is not known, each succeeding cache region covers one tenth of the preceding cache region. For peers with multiple IDs registered locally, the segmented cache of the present invention combines overlapping segments of the same granularity to eliminate the duplication of information that would otherwise occur. A cache tree, an instantiated segment tree, and an uninstantiated segment tree are arranged in red-black trees to simplify the search and proper placement and instantiation of information.",6912622
6940504,2005-09-06,13,B1,"A system, method, and computer program product for rendering gaseous volumetric objects scenes using an alpha channel. In one described implementation, the method determines a distance between a user to boundaries of a gaseous volume and then stores the distance in an alpha channel to arrive at an alpha value. Then the alpha value can be used as a factor assist in blending scene colors with gaseous colors to render virtually realistic pixels for the gaseous object from the perspective of a user's view of the object. The resulting scenes can then be used to simulate patchy fog, clouds, or other gases of more or less constant density and color.",6940504
7046243,2006-05-16,15,B1,"A system, method, and computer program product for rendering a gaseous display. The distance from a user's reference point to each pixel through the gas is determined. The distance is then converted into an attenuation factor which is used to blend the scene color with the gas color. The result can then be used to simulate patchy fog, clouds, or other gases of more or less constant density and colors.",7046243
7077749,2006-07-18,4,B1,"Methods and systems for providing dynamic weather simulation in a computer gaming environment are disclosed. Weather may be user-specified, computer simulated, or based on periodic updates of real-world weather conditions. To dynamically simulate weather while conserving computer resources, a weather simulation manager may periodically alter temperature and dew point values and determine whether to render or dissipate clouds based on the current temperature and dew point values. Weather may be morphed back to real-world weather as updated weather is retrieved from a database over the Internet. The weather simulation manager may simulate weather independently for each of a plurality of geographic cells, thus allowing different weather to appear in different directions during game play. Cloud dissipation may be based on increasing a transparency value of sprites located at the outer edges of each cloud, and gradually working towards the center of the cloud until the cloud has disappeared completely.",7077749
7227555,2007-06-05,16,B2,"Systems for rendering a gaseous display. The distance from a user's reference point to each pixel through the gas is determined. The distance is then converted into an attenuation factor that is used to blend the scene color with the gas color. The result can then be used to simulate patchy fog, clouds, or other gases of more or less constant density and colors.",7227555
7245301,2007-07-17,16,B2,"Systems and methods for rendering a gaseous display. The distance from a user's reference point to each pixel through the gas is determined. The distance is then converted into an attenuation factor that is used to blend the scene color with the gas color. The result can then be used to simulate patchy fog, clouds, or other gases of more or less constant density and colors.",7245301
7269539,2007-09-11,4,B2,"Methods and systems for providing dynamic weather simulation in a computer gaming environment are disclosed. Weather may be user-specified, computer simulated, or based on periodic updates of real-world weather conditions. To dynamically simulate weather while conserving computer resources, a weather simulation manager may periodically alter temperature and dew point values and determine whether to render or dissipate clouds based on the current temperature and dew point values. Weather may be morphed back to real-world weather as updated weather is retrieved from a database over the Internet. The weather simulation manager may simulate weather independently for each of a plurality of geographic cells, thus allowing different weather to appear in different directions during game play. Cloud dissipation may be based on increasing a transparency value of sprites located at the outer edges of each cloud, and gradually working towards the center of the cloud until the cloud has disappeared completely.",7269539
7336623,2008-02-26,6,B2,"A method for detecting and repairing cloud splits in a distributed system such as a peer-to-peer (P2P) system is presented. Nodes in a cloud maintain a multilevel cache of entries for a subset of nodes in the cloud. The multilevel cache is built on a circular number space, where each node in the cloud is assigned a unique identifier (ID). Nodes are recorded in levels of the cache according to the distance from the host node. The size of the cloud is estimated using the cache, and cloud-split tests are performed with a frequency inversely proportional to the size of the cloud. Cloud splits are initially detected by polling a seed server in the cloud for a node N having an ID equal to the host ID+1. The request is redirected to another node in the cloud, and a best match for N is resolved. If the best-match is closer to the host than any node in the host's cache, a cloud split is presumed. The cloud split is repaired by flooding the host's address to the newly found node and sending repair messages to nodes in the host's top cache level. Each node receiving a repair message repeats a similar process, and sends repair messages to nodes in its next lower cache level.",7336623
7349830,2008-03-25,4,B2,"Methods and systems for providing dynamic weather simulation in a computer gaming environment are disclosed. Weather may be user-specified, computer simulated, based on periodic updates of real-world weather conditions, or based on a pre-existing or user-created weather profile. A weather profile may include a data structure that stores weather over a location neutral geographical space, which may subsequently be applied dynamically to any selected geographical space in a simulated environment. To dynamically simulate weather while conserving computer resources, a weather simulation manager may periodically alter temperature and dew point values and determine whether to render or dissipate clouds based on the current temperature and dew point values.",7349830
7437440,2008-10-14,12,B2,"A managed class peer networking framework and associated object-oriented application programming interfaces are presented. An application uses the framework API to communicate with the various peer networking subsystem interfaces. These subsystems utilize lower level Win32 interfaces and services to provide access to the group database, security, and data transfer to other machines. Managed classes are provided for the peer name, identity, cloud, invitation, group, policy, data store, peer and record collections, peer, and record classes. Peer name resolution objects and record search objects are also provided. The peer networking framework of the present invention is particularly applicable to Microsoft's .NET Framework.",7437440
7496648,2009-02-24,169,B2,"The managed system and methods of the present invention are segmented into 3 main areas: Clouds, Registrations, and Resolvers. The cloud object provides information about the clouds that are available. If a could is available, the Registration object can be used to register endpoints with the P2P name resolution protocol. Finally, if an application developer wishes to resolve a peer name to an IP address, they simply use the resolver object. The clouds may be monitored for state changes in one embodiment of the present invention through a CloudWatcher object.",7496648
7526805,2009-04-28,23,B2,Tampering with pieces of software is inhibited. Thread protection inhibits tampering with various threads that execute protective pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.,7526805
7552337,2009-06-23,23,B2,Tampering with pieces of software is inhibited. Service protection inhibits tampering by allowing various unauthorized services to execute. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.,7552337
7559091,2009-07-07,23,B2,Tampering with pieces of software is inhibited. Software obfuscation inhibits reverse engineering by hackers by manipulating names of functions and adding jump instructions into various pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.,7559091
7577997,2009-08-18,24,B2,Tampering with pieces of software is inhibited. Software obfuscation inhibits reverse engineering by hackers by manipulating names of functions and adding jump instructions into various pieces of software. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.,7577997
7584509,2009-09-01,23,B2,"Tampering with pieces of software is inhibited. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. A process of verifying whether the pieces of software together constitute a software package that requires protection from tampering is also provided. Another process for determining whether the hardware resources, such as the central processing unit or the cache memory on a computing machine, belong to a class for which inhibiting software tampering is possible, is also provided.",7584509
7613812,2009-11-03,160,B2,"Peer-to-peer (P2P) application programming interfaces (APIs) that allow an application to create, import, export, manage, enumerate, and delete P2P identities are presented. Further, the management of group identity information is provided. APIs abstract away from low level credential and cryptographic functions required to create and manage P2P identities. This management includes retrieval and setting of a friendly name, generation of a cryptographic public/private key pair, retrieval of security information in the form of an XML fragment, and creation of a new name based on an existing identity. Since the P2P environment also allows for the existence of multiple separate groups of peers within the P2P cloud, a preferred embodiment of the present invention also allows for the enumeration of all groups associated with a given identity, for each identity existing for the user.",7613812
7631360,2009-12-08,23,B2,Tampering with pieces of software is inhibited. Hardware protection prevents hackers from forcing various pieces of software from running on unauthorized pieces of hardware. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.,7631360
7640592,2009-12-29,23,B2,Tampering with pieces of software is inhibited. Installation setup protection inhibits tampering during the installation of various pieces of software. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided.,7640592
7721340,2010-05-18,25,B2,Tampering with pieces of software is inhibited. Registry protection prevents changes made to keys and values in a central hierarchical database. Hardware protection prevents hackers from forcing various pieces of software from running on unauthorized pieces of hardware. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.,7721340
7797453,2010-09-14,64,B2,"A computing paradigm where information can be aggregated from multiple services/programs within a ‘cloud-based’ environment is provided. Thus, the system can provide a uniform interface that can combine computational tasks across the multiple services/programs. Thus, the innovation takes advantage of the computing device being a ‘thin client’ which affords greater user comfort to a user without sacrificing data processing capabilities. Accordingly, the mechanisms are disclosed that standardize and/or normalize data across the resources within the cloud.",7797453
7836056,2010-11-16,67,B2,"The innovation enables generation of an index of cloud-based resources (e.g., data, services, applications). The index can be used to retrieve a subset of the cloud-based resources by analyzing a user-generated or standing query. ‘Identity’ and contextual factors can be incorporated to enable rich indexing as well as subsequent retrieval of meaningful resources. The cloud-based resources can be indexed and/or searched in accordance with diverse criteria including, but not limited to, type, size, data created, date modified, author core identity, object size, etc. As well, the innovation can provide for dynamically indexing and/or searching resources in accordance with current contextual factors including, but not limited to, author current acting capacity (e.g., current identity), current engaged activity of a user, location, time, date, etc. All of these criteria can facilitate indexing and categorizing of the resources for later retrieval and rendering via a rich index view.",7836056
7849196,2010-12-07,15,B2,"A topology management process is implemented which involves removing or “tearing down” connections between nodes in certain situations in order to try to replace those connections with more optimal ones. Idle connections are torn down unless those are in a “notify” state; a notify state being one in which a request for content has been made to a neighbour but that neighbour has no available content as yet. Idle connections in a notify state are torn down only if they remain idle for a longer time than that required before an idle connection is torn down. To avoid problems caused by clusters of node forming and of loners being unable to join the cloud, network churn algorithms are taught. These involve requiring nodes to drop connections when specified conditions are met. Relative content distribution between connections is monitored and this information used to influence selection of those connections to drop.",7849196
7885986,2011-02-08,15,B2,"Improved browsing experience in social bookmarking by leveraging aspects of self tagging and prediction. Quality recommendations are provided for sites of interest to the user and information about what types of people like the current website. Self-tagging is used as an effective means to perform personalized searches. Machine learning and reasoning is employed to predict self-tags based on a website visited and/or website behavior, and self-tags associated with a website and/or webpage based on content of that website and/or webpage. The architecture can be embodied as a browser utility to leverage and extend social-bookmarking information. The utility facilitates the display of information related to a summary view of the users who liked/disliked the current page or website, a tag cloud associated with webpages, and a recommendation button that causes self-tag recommendations to be displayed and that recommends links based on the combination of user tags and content.",7885986
7891008,2011-02-15,32,B2,Tampering with pieces of software is inhibited. Profiles are stored in a central hierarchical database and such profiles are protected from tampering. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. A process of verifying whether the pieces of software together constitute a software package that requires protection from tampering is also provided.,7891008
7987289,2011-07-26,14,B2,"A Totally Stubby Edge (TSE) participates in a cloud under the condition that the TSE may select paths for frames that the TSE introduces to the cloud, but may not transit frames between nodes in the cloud. The edge submits, to an administrator of the cloud, a request to join the cloud. If the administrator allows the request, then the edge is given access to the address tables that define the structure of the cloud, and may insert itself into the structure. The edge may use the address tables to select paths for frames that the edge introduces to the cloud. Normally path decisions are made by devices that the administrator trusts and controls. However, since the TSE selects paths for its own frames but does not transit frames between other nodes in the cloud, the TSE may select paths even if it is untrusted by the administrator.",7987289
8010681,2011-08-30,160,B2,"Peer-to-peer (P2P) application programming interfaces (APIs) that allow an application to create, import, export, manage, enumerate, and delete P2P identities are presented. Further, the management of group identity information is provided. APIs abstract away from low level credential and cryptographic functions required to create and manage P2P identities. This management includes retrieval and setting of a friendly name, generation of a cryptographic public/private key pair, retrieval of security information in the form of an XML fragment, and creation of a new name based on an existing identity. Since the P2P environment also allows for the existence of multiple separate groups of peers within the P2P cloud, a preferred embodiment of the present invention also allows for the enumeration of all groups associated with a given identity, for each identity existing for the user.",8010681
8019873,2011-09-13,15,B2,"A utility computing portal supports public and private modules for application development in a cloud computing environment. The public modules support downloads, customer support and access to a development community. The private modules are accessible to users with valid login credentials or those authenticated via a related entity, such as a Live ID. The private modules may include modules for testing, analysis, and billing. The utility computing portal also supports access to application configuration, for example, allowing a manager to change the number of front end and backend physical/virtual machines available to various application roles.",8019873
8131844,2012-03-06,7,B2,"Computer-readable media, computer systems, and computing devices for providing customer intelligence data to a developer of an application that runs on a cloud operating environment associated with an online services provider. The online services provider collects customer information about customers, each of whom is identified by a customer ID. A developer uploads an application, having a corresponding application ID, and manages the application using resources associated with the cloud operating environment. An analysis module creates a three-way mapping between the application ID, customer IDs corresponding to customers that use the application, and customer intelligence data associated with the customer IDs. Using this mapping, the system presents the developer with customer intelligence information based on the customer intelligence data.",8131844
8140478,2012-03-20,7,B2,"Consistency is managed among data operations by coalescing commit operations, adjusting a commit rate to optimize latency, and converging to fairness across servers. Write operations representing a change to data stored by one or more of a plurality of computing devices are received in succession by, for example, a cloud computing service. A state of a plurality of tracking objects is adjusted to indicate whether the change in data has been provided to the computing devices and whether the change in data has been acknowledged by the computing devices. Changes to the same data are coalesced such that only the most recent change is provided to the computing devices for storage. In some embodiments, the commit rate is adjustable such that the commit rate decreases quickly but increases slowly based on measured latencies.",8140478
8169434,2012-05-01,16,B2,"An octree GPU construction system and method for constructing a complete octree data structure on a graphics processing unit (GPU). Embodiments of the octree GPU construction system and method first defines a complete octree data structure as forming a complete partition of the 3-D space and including a vertex, edge, face, and node arrays, and neighborhood information. Embodiments of the octree GPU construction system and method input a point cloud and construct a node array. Next, neighboring nodes are computed for each of the nodes in the node arrays by using at least two pre-computed look-up tables (such as a parent look-up table and a child look-up table). Embodiments of the octree GPU construction system and method then use the neighboring nodes and neighborhood information to compute a vertex array, edge array, and face array are computed by determining owner information and self-ownership information based on the neighboring nodes.",8169434
8190703,2012-05-29,22,B2,"An enhancement to a web browser offers an extension mechanism for web applications to utilize client-side resources, thereby moving more extensibility and flexibility to the client-side. The web browser may expose some control interfaces to meet various requirements from web applications. Using the extension mechanism, the web applications are able to offload the cloud servers, function when offline, and improve performance. The extension mechanism also provides users with full control to the data passing through their web browsers.",8190703
8196047,2012-06-05,15,B2,"Techniques are described for generating a user interface for visualizing a cloud service based on status and performance data of the cloud service obtained from data stores. A configuration file including declarative code may declare particular queries to status/performance data sources. The configuration file may also declare particular queries to topology data sources to obtain topology information. In accordance with the obtained information, objects representing the cloud service may be displayed. The objects correspond to particular hardware and software components, or logical grouping thereof, that are identified by the topology information.",8196047
8196175,2012-06-05,30,B2,"A ticketing system adapted for use with a cloud-based services platform is provided by a ticket-based authorization model in which the authorization requirements for traversing one or more meshes of resources associated with a cloud service are annotated in links included in a resource that refer to other resources. The meshes are thus self-describing with respect to the association among the resources (i.e., the links) as well as the authorization required to access resources. Resource access requires a principal ticket which asserts that a caller at a client (e.g., a security principal representing a device or identity associated with a user) is authenticated, plus zero or more claim tickets. The claim tickets make additional assertions about the caller that the cloud service may use to check that the caller is authorized to access the resource.",8196175
8234400,2012-07-31,8,B2,"Cloud computing platforms having computer-readable media that perform methods to shape virtual machine communication traffic. The cloud computing platform includes virtual machines and a controller. The controller limits the traffic associated with the virtual machines to enable the virtual machines to achieve desired communication rates, especially when a network servicing the virtual machines is congested. The controller may drop communication messages associated with the virtual machines based on a drop probability evaluated for the virtual machines.",8234400
8244559,2012-08-14,11,B2,"Embodiments for interacting with cloud computing providers are disclosed. In accordance with at least one embodiment, a resource broker receives a request for a computing task that is to be performed from a customer. The resource broker selects one of the cloud computing providers to perform at least a part of the computing task. In turn, the resource broker may obtain a gain from performance of the at least one part of the computing task by the cloud computing provider.",8244559
8255546,2012-08-28,66,B2,An application program interface (API) for sending and receiving endpoint registration data and peer-to-peer network cloud data has a registration call for adding endpoint data to a peer-to-peer network. The API may receive explicit data regarding address information or may be instructed to select and maintain suitable address information as the topology of the peer-to-peer network changes. Blocking and non-blocking calls are exposed for retrieving information peer-to-peer network endpoint data.,8255546
8261126,2012-09-04,34,B2,"Provided herein are systems and methodologies for bare metal machine restoration of a client computing environment over a network-based backup system. System recovery can be performed by performing a network boot from a predetermined server or set of servers on the Internet and/or an associated local network, followed by retrieving information relating to an operating system and/or environment of a system being recovered, such as incremental or full operating system images. Upon retrieval of information, the information can be used to conduct a full restore of the operating environment of the computing device. Additionally, a user can restore personal or other system data following rebuilding of the system operating environment. A cloud-based structure is provided herein as well as a hybrid peer-to-peer/cloud-based structure, wherein information used in a restore can be obtained from a global network location (e.g., cloud server(s)) and/or from one or more local peers.",8261126
8266204,2012-09-11,6,B2,"Cloud computing platforms having computer-readable media that perform methods for direct addressability and direct server return are provided. The cloud computing platform includes a load balancer and several servers. The servers are configured with public addresses, private addresses, and an address of the load balancer. The loopback interface of the servers is configured with the address of the load balancer. This allows a server to bypass the load balancer when replying to communication messages. Additionally, the public and private addresses of the servers enable direct addressability in the cloud computing platform. Accordingly, an application executing in the cloud computing platform may connect two or more clients on the same server.",8266204
8266290,2012-09-11,50,B2,A cloud computing platform contains a structured storage subsystem the provides scalable queues. The cloud computing platform monitors message throughput for the scalable queues and automatically increases or decreases subqueues that provide the operational functionality for each scalable queue. A visibility start time and cloud computing platform time are maintained for each message to provide an approximate first-in-first-out order for messages within each subqueue. A message in a subqueue may be available for processing when the current cloud computing time is greater than the visibility start of the message.,8266290
8275880,2012-09-25,18,B2,"A media content programming, delivery, and consumption model is provided by which consumers can receive programming that is personalized to their tastes and interests and discover new media content that they will likely enjoy, without having to put in a lot of effort or needing to be technically adept. The received media content programming can then be played on a PC or portable media player. Consumers can access the media content programming from a cloud-based service with the same ease as tuning to a radio station, and then may simply enjoy the programming without needing to take any additional steps. However, unlike traditional linear programming, the programming here is curated so that the delivered content is highly relevant to the consumer. Navigation within a programmed sequence is enabled by skipping ahead or going back in a playlist, and consumers can learn more about particular content by interacting with rich metadata.",8275880
8291036,2012-10-16,27,B2,"A datacenter infrastructure comprising a plurality of datacenters is configured to provide services to users. Data (e.g., application data) provided to respective datacenters from a user is synchronized between different datacenters comprised within “a cloud” according to a multilevel synchronization scheme. Respective levels of the multilevel synchronization operate to transfer different priority (user) data between the plurality of datacenters, wherein respective priorities are determined based upon the importance of the data in providing a service. For example, data used to perform a service is synchronized by a synchronization component facilitating a higher level of synchronization between datacenters, while data not routinely used to perform a service is synchronized by a lower priority synchronization component. Synchronization between datacenters allows a network address routing system to provide substantially uninterrupted routing of a user to an available or otherwise appropriate datacenter within the datacenter infrastructure, thereby providing increased service reliability and performance.",8291036
8295589,2012-10-23,17,B2,"Photographs of an object may be oriented with respect to both the geographic location and orientation of the object by registering a 3D model derived from a plurality of photographs of the objects with a 2D image of the object having a known location and orientation. For example, a 3D point cloud of an object created from photographs of the object using a Photosynth™ tool may be aligned with a satellite photograph of the object, where the satellite photograph has location and orientation information. A tool providing scaling and rotation of the 3D model with respect to the 2D image may be used or an automatic alignment may be performed using a function based on object edges filtered at particular angles. Once aligned, data may be recorded that registers camera locations for the plurality of photographs with geographic coordinates of the object, either absolute latitude/longitude or relative to the object.",8295589
8296178,2012-10-23,68,B2,"Secure content management is enabled as a cloud-based service through which security protection and policy enforcement may be implemented for both on-premise network users and roaming users. The global SCM service integrates the security functionalities—such as anti-virus, spyware, and phishing protection, firewall, intrusion detection, centralized management, and the like—that are typically provided by enterprise network SCM appliance hardware or servers into a cloud-based service that users reach via Internet-based points-of-presence (“POPs”). The POPs are configured with forward proxy servers, and in some implementations, caching and network acceleration components, and coupled to hubs which provide configuration management and identity management services such as active directory services.",8296178
8321688,2012-11-27,20,B2,"A digital escrow pattern is provided for backup data services including searchable encryption techniques for backup data, such as synthetic full backup data, stored at remote site or in a cloud service, distributing trust across multiple entities to avoid a single point of data compromise. In one embodiment, an operational synthetic full is maintained with encrypted data as a data service in a cryptographically secure manner that addresses integrity and privacy requirements for external or remote storage of potentially sensitive data. The storage techniques supported include backup, data protection, disaster recovery, and analytics on second copies of primary device data. Some examples of cost-effective cryptographic techniques that can be applied to facilitate establishing a high level of trust over security and privacy of backup data include, but are not limited to, size-preserving encryption, searchable-encryption, or Proof of Application, blind fingerprints, Proof of Retrievability, and others.",8321688
8341405,2012-12-25,48,B2,"A system that can assist users to manage a personal active directory for all of their information maintained within a cloud-based environment is provided. The identity of a client that accesses data is monitored and recorded in a log. In turn, this information can be made available to the owner of the information in order to develop a desired access control list (ACL). Additionally, the system can employ a heuristic component that can automatically establish the ACL on the owner's behalf. As well, the system can track how information is being accessed (or attempted to be accessed) by other people therefore, giving the owner of the information the opportunity to restrict or allow access based upon any number of recorded factors (e.g., identity, context).",8341405
8341427,2012-12-25,23,B2,"A digital escrow pattern is provided for network data services including searchable encryption techniques for data stored in a cloud, distributing trust across multiple entities to avoid a single point of data compromise. In one embodiment, a key generator, a cryptographic technology provider and a cloud services provider are each provided as separate entities, enabling a publisher of data to publish data confidentially (encrypted) to a cloud services provider, and then expose the encrypted data selectively to subscribers requesting that data based on subscriber identity information encoded in key information generated in response to the subscriber requests, e.g., a role of the subscriber.Appendix A—Additional Non-Limiting Details about Federated Trust Overlays",8341427
8364758,2013-01-29,32,B2,"A topology management process is implemented in peer-to-peer content distribution clouds using tracker nodes. Tracker nodes have information about available peers and assist peers in finding other peers to connect to. Various algorithms for use at the tracker nodes are described for selecting which peers to return as potentials for forming connections to. In addition, architectures and algorithms to allow efficient scaling of tracker nodes in peer-to-peer clouds are described.",8364758
8380845,2013-02-19,38,B2,Technologies are described herein for providing a monitoring service in a cloud-based computing environment. A request is received from a user to subscribe to the monitoring service. The monitor workflow may correspond to the monitoring service. A first call to a finder application is executed over a communications network to retrieve data points according to the monitor workflow. A second call to an analyzer application is executed over the communications network to identify a relevant data point in the data points. A third call to a notifier application is executed over the communications network to notify the user of the relevant data point.,8380845
8438635,2013-05-07,11,B2,"A mechanism is provided for automatically logging into a cloud based system that does not accept token log-on credentials generated by a single sign-on service. In an embodiment, a one-time password is automatically generated and persisted. The generated password is used to log in automatically to a cloud based system that does not accept tokens generated by the web-ID providers and for connecting to other services. Examples of such systems may include Windows, Linux, and iOS.",8438635
8468345,2013-06-18,12,B2,"A digital escrow pattern and trustworthy platform is provided for data services including mathematical transformation techniques, such as searchable encryption techniques, for obscuring data stored at remote site or in a cloud service, distributing trust across multiple entities to avoid a single point of data compromise. Using the techniques of a trustworthy platform, data (and associated metadata) is decoupled from the containers that hold the data (e.g., file systems, databases, etc.) enabling the data to act as its own custodian through imposition of a shroud of mathematical complexity that is pierced with presented capabilities, such as keys granted by a cryptographic key generator of a trust platform. Sharing of, or access to, the data or a subset of that data is facilitated in a manner that preserves and extends trust without the need for particular containers for enforcement.",8468345
8468352,2013-06-18,6,B2,"The present invention extends to methods, systems, and computer program products for retrieving and using cloud based storage credentials. Embodiments of the invention include automatically retrieving cloud based credentials (e.g., storage keys) as needed, such as, for example, on demand. Automatically retrieving credentials reduces administrator workloads and mitigates the potential for human errors. Embodiments of the invention also include using credentials (e.g., storage keys) in the deployment and ongoing operation of services (e.g., computing workers) in a resource cloud. Embodiments of the invention also include propagating credentials (e.g., storage keys) to instances running in the cloud during deployment.",8468352
8468387,2013-06-18,53,B2,"Provided herein are systems and methodologies for bare metal machine restoration of a client computing environment over a network-based backup system. System recovery can be performed by performing a network boot from a predetermined server or set of servers on the Internet and/or an associated local network, followed by retrieving information relating to an operating system and/or environment of a system being recovered, such as incremental or full operating system images. Upon retrieval of information, the information can be used to conduct a full restore of the operating environment of the computing device. Additionally, a user can restore personal or other system data following rebuilding of the system operating environment. A cloud-based structure is provided herein as well as a hybrid peer-to-peer/cloud-based structure, wherein information used in a restore can be obtained from a global network location (e.g., cloud server(s)) and/or from one or more local peers.",8468387
8474027,2013-06-25,60,B2,"A user-centric or identity-centric resource licensing system that manages access to ‘cloud-based’ resources (e.g., applications and services) is provided. A ‘cloud’ refers to a collection of resources (e.g., hardware and/or software) provided and maintained by an off-site or off-premise party (e.g., third party), wherein the collection of resources can be accessed by an identified user via a network. In accordance with the user-centric licensing model, the resource license (and subscription) rights can migrate with a user without regard to physical location, device used, or other contextual factors (e.g., activity engaged). Effectively, the rights are mapped (and tracked) as a function of a user identity, which can be a core identity or an identity based upon activity engaged, role, capacity, etc.",8474027
8479008,2013-07-02,9,B2,"Embodiments are directed to the providing a cloud keying and signing service and to securing software package distribution on the cloud. In an embodiment, a computer system instantiates a signing service configured to sign software packages. The computer system receives a signing request from a computer user requesting that a selected software package be signed. The signing request includes a computed hash of the selected software package. The computer system generates a private and public key pair on behalf of the computer user and stores the private key of the generated key pair in a secure data store.",8479008
8510426,2013-08-13,42,B2,Technologies are described herein for providing communication and coordination between web services in a cloud-based computing environment. A call to an available events operation is executed in a web service to request subscription event identifiers corresponding to available events at the web service. The subscription event identifiers are received. A subscribe operation is populated with a relevant subscription event identifier related to a subscribed event from the subscription event identifiers. A call to the subscribe operation is executed in the web service to establish a subscription to the web service. A subscription identifier corresponding to the subscription is received. Notifications related to the subscribed event at the web service are received while the subscription is active.,8510426
8510447,2013-08-13,10,B2,"Cloud computing platforms having computer-readable media that perform methods for direct addressability and direct server return are provided. The cloud computing platform includes a load balancer and several servers. The servers are configured with public addresses, private addresses, and an address of the load balancer. The loopback interface of the servers is configured with the address of the load balancer. This allows a server to bypass the load balancer when replying to communication messages. Additionally, the public and private addresses of the servers enable direct addressability in the cloud computing platform. Accordingly, an application executing in the cloud computing platform may connect two or more clients on the same server.",8510447
8516137,2013-08-20,57,B2,"Cloud computing platforms having computer-readable media that perform methods to manage virtual hard drives as blobs are provided. The cloud computing platform includes fabric computers and blob stores. The fabric computers execute virtual machines that implement one or more applications that access virtual hard drives. The data in the virtual hard drives is accessed, via a blob interface, from blobs in the blob stores. The blob stores interface with a driver that translates some application input/output (I/O) requests destined to the virtual hard drives to blob commands when accessing data in the virtual hard drives.",8516137
8526728,2013-09-03,6,B2,"An image enhancement system may match images to a matrix having various enhancements of images for groups of users. The matrix may define image enhancement settings for the particular images and groups of users, and the matching may apply enhancements to a new image that closely matches a user's preferences. After the matrix is initially populated, new users and new images may be added to increase the matrix's accuracy. The image enhancement system may be deployed as a cloud service, where images may be enhanced as a standalone application or as part of a social network or image sharing website. In some embodiments, the image enhancement system may be deployed on a personal computer or as a component of an image capture device.",8526728
8532074,2013-09-10,9,B2,"One or more mobile devices and a cloud server computing device are utilized to provide Internet access to one or more client computing devices. One of the clients is designated as a Wi-Fi access point. The Wi-Fi access point implements a reverse-infrastructure Wi-Fi mode which tethers available mobile devices and other clients to the access point. The cloud server periodically computes an optimal number of the mobile devices to be used for data striping, and transmits a webpage to a requesting client by striping data associated with the webpage across the optimal number of the mobile devices.",8532074
8533356,2013-09-10,18,B2,"Cloud computing platforms having computer-readable media that perform methods to shape virtual machine communication traffic. The cloud computing platform includes virtual machines and a controller. The controller limits the traffic associated with the virtual machines to enable the virtual machines to achieve desired communication rates, especially when a network servicing the virtual machines is congested. The controller may drop communication messages associated with the virtual machines based on a drop probability evaluated for the virtual machines.",8533356
8542252,2013-09-24,230,B2,"Techniques may comprise identifying surfaces, textures, and object dimensions from unorganized point clouds derived from a capture device, such as a depth sensing device. Employing target digitization may comprise surface extraction, identifying points in a point cloud, labeling surfaces, computing object properties, tracking changes in object properties over time, and increasing confidence in the object boundaries and identity as additional frames are captured. If the point cloud data includes an object, a model of the object may be generated. Feedback of the model associated with a particular object may be generated and provided real time to the user. Further, the model of the object may be tracked in response to any movement of the object in the physical space such that the model may be adjusted to mimic changes or movement of the object, or increase the fidelity of the target's characteristics.",8542252
8544075,2013-09-24,20,B2,"A customer relationship management (CRM) eventing framework may be extended to a cloud computing environment. A listening channel may be opened between a service and a service bus in a cloud computing environment. The cloud computing environment may also include an authenticating service. Service information for the service may be registered with a CRM. The CRM may receive a request made by a requester. The request may trigger a request processing pipeline in an eventing framework. The CRM may post event data responsive to the request to the service bus. The service may receive the event data, process it and may send back a confirmation or response. The CRM may finally send a response to the requester.",8544075
8548640,2013-10-01,27,B2,"A server computer may be located at a home or business and may be used for heating the home or business. The server computer may operate a distributed cloud based application and may generate heat in response to application load. The server computer may have an air or water based heat exchanger that may integrate into various heating, ventilation, and air conditioning systems to use the heat generated by the server. In some embodiments, a thermostat may regulate the application load on the server computer as controlled by a cloud based controller.",8548640
8549106,2013-10-01,10,B2,"Techniques for enabling client computing devices to leverage remote server pools for increasing the effectiveness of applications stored on the client computing device are described herein. In some instances, the server pools comprise a “cloud”, “cluster” or “data center” that comprises hundreds or thousands of servers connected together by a network that has an extremely low latency and high bandwidth relative to the network through which the client computing device connects to the server pool. The client computing device may request that the server pool perform a certain task for an application whose canonical state resides on the client. After computation of a result of the task, a server of the server pool then provides the result to the client. By doing so, the techniques dramatically increase the amount of resources working on the request of the client and, hence, dramatically increase the speed and effectiveness of the client-side application.",8549106
8572241,2013-10-29,7,B2,"The present invention extends to methods, systems, and computer program products for integrating external and cluster heat map data. Embodiments of the invention include a proxy service that manages (e.g., asynchronous) communication with cloud nodes. The proxy service simulates packets to on-premise services to simplify the integration with an existing heat map infrastructure. The proxy maintains a cache of performance counter mappings and timestamps on the on-premise head node to minimize the impact of latency into heat map infrastructure. In addition, data transfer is minimized by mapping a fixed set of resource based performance counters into a variable set of performance counters compatible with the on premise heat map infrastructure.",8572241
8578460,2013-11-05,12,B2,Technologies are generally described for automatically reconnecting a security principal to cloud services through correlation of security principal identifier attributes. A new security principal for a user may be detected and automatically reconnected to the user's cloud based services. An administrator for the security domains may specify a value of a unique security principal metadata attribute for the original security principal in a customizable security principal metadata attribute in the new security principal in the same or new security domain. A secondary verification metadata attribute may optionally be specified to ensure the correct security principal is reconnected to the user's cloud based resources. The correlation between the original security principal for the user and the new security principal may be used to reconnect the user's cloud resources.,8578460
8583774,2013-11-12,10,B2,"A set of interacting devices within a cluster environment may use a secondary naming system to assign and transfer friendly names between devices within the cluster. The cluster may be operated inside, outside, or partially within a cloud computing environment. The secondary naming system may maintain a hosts file within the addressable memory of each member of the cluster, where the hosts file may updated and changes propagated to every member of the cluster so that each member maintains an identical hosts file.",8583774
8584221,2013-11-12,10,B2,"An authentication mechanism in a local area network may use a cloud authentication mechanism to allow or deny authentication requests. A user may gain access within a local area network by entering a cloud identification and password, which may be verified by a cloud authentication mechanism. If the authentication is successful from the cloud authentication mechanism, the user identification and password are stored locally for subsequent authentication requests. In some embodiments, the cloud password may be periodically flushed so that subsequent requests may be passed to the cloud authentication mechanism. The authentication mechanism may be used in both domain and workgroup local area networks, and may operate in parallel with other users who may have local area network or client credentials which may not be authenticated from the cloud.",8584221
8589481,2013-11-19,19,B2,"A mechanism is provided for presenting a software application to a plurality of users in a cloud computing environment. For example, an application that was designed for use by a single user is provided in a cloud based platform without re-architecting the application. Using a web-based interface, multiple cloud users may launch and execute the application. The various instances of the application are provided to the cloud users as if the application were designed as a multi-user application.",8589481
8601598,2013-12-03,46,B2,"A system that enables a cloud-based data repository to function as a secure ‘drop-box’ for data that corresponds to a user is provided. The ‘drop box’ can be facilitated through the use of cryptographic keying technologies. For instance, data that is ‘dropped’ by or on behalf of a particular user can be encrypted using a public key that corresponds to a user-specific private key. Thus, although the data resides within the large pool of ‘cloud-based’ data, it is protected since it can only be decrypted by using the private key, which is kept secret. The innovation can further facilitate user-centric secure storage by partitioning the cloud-based repository into multiple partitions, each of which corresponds to specific indexing criteria.",8601598
8607054,2013-12-10,8,B2,An end user of an enterprise is enabled to receive secure remote presentation access to the assigned virtual machines in a hosted public cloud through the cloud provider's virtualization hosts and remote presentation gateway. Thus an enterprise administrator may purchase computing capacity from the cloud provider and further sub-divide the purchased computing capacity among enterprise end users. The cloud provider need not create shadow accounts for each end user of the enterprise. The cloud provider AD and the enterprise AD do not need to trust each other. The cloud provider also need not expose host information to the tenants. Authorization may be provided by using a combination of a custom authorization plug-in at the terminal services gateway and an indirection listener component at the virtualization host. The host details may also be abstracted when the client connects to the remote presentation gateway so as to protect the fabric from attack and enabling the tenant virtual machines to freely move across the cloud provider's virtualization hosts.,8607054
8610706,2013-12-17,8,B2,"Described is a technology in which point cloud surface reconstruction is performed via parallel processing on a graphics processing unit, achieving real-time reconstruction rates. An octree is built for a given set of oriented points, with each node containing a set of points enclosed by the node. The data structure is built on the GPU, in parallel, using level-order traversals to process nodes at a same tree level. The surface is reconstructed based on data configured and located via the traversals. To produce the surface, an implicit function over the volume spanned by the octree nodes is computed using the GPU, e.g., based on a Poisson surface reconstruction method. A sparse linear system is built and a multi-grid solver is employed to solve the system. An adaptive marching cubes procedure is performed on the GPU to extract an isosurface of the implicit function as a triangular mesh.",8610706
8611643,2013-12-17,17,B2,"Photographs of an object may be oriented with respect to both the geographic location and orientation of the object by registering a 3D model derived from a plurality of photographs of the objects with a 2D image of the object having a known location and orientation. For example, a 3D point cloud of an object created from photographs of the object using a Photosynth™ tool may be aligned with a satellite photograph of the object, where the satellite photograph has location and orientation information. A tool providing scaling and rotation of the 3D model with respect to the 2D image may be used or an automatic alignment may be performed using a function based on object edges filtered at particular angles. Once aligned, data may be recorded that registers camera locations for the plurality of photographs with geographic coordinates of the object, either absolute latitude/longitude or relative to the object.",8611643
8620889,2013-12-31,8,B2,"A file fetcher manager provides commonly-utilized management and resource allocation for multiple file fetchers that each implement a different type of mechanism or protocol for transferring data files between peer endpoints in meshes associated with a cloud-computing service. Each file fetcher is configured with both client-side and server-side components to retrieve and serve out data files. The file fetcher manager encapsulates the file fetchers to provide an abstract interface to callers while hiding the underlying details of the file fetchers. The file fetcher manager is arranged for managing simultaneous operations of the multiple file fetchers to route requests from the callers to the appropriate file fetchers, and for scheduling work items for the file fetchers so that data transfers efficiently utilize available resources while keeping the entire transfer process coherent and organized.",8620889
8621553,2013-12-31,18,B2,"Applications, such as cloud services, may be deployed within a network environment (e.g., a cloud computing environment). Unfortunately, when the applications are instantiated within the network environment, they have the ability to compromise the security of other applications and/or the infrastructure of the network environment. Accordingly, as provided herein, a security scheme may be applied to a network environment within which an application is to be instantiated. The security scheme may comprise one or more security layers (e.g., virtual machine level security, application level security, operating system level security, etc.) derived from an application service model describing the application and/or resources allocated to the application.",8621553
8621630,2013-12-31,13,B2,"A content inspection system provides cloud-based content inspection for mobile devices. The content inspection system includes a content inspection server for receiving a request providing a digital fingerprint of content for evaluation for threats and a data reputation services server for maintaining a threat database. The content inspection system communicates with the mobile device using a service oriented architecture web services based on exchanges of messages between agents of the content inspection system and the mobile device. The content inspection server authenticates the received request belongs to a subscriber, and once the request is authenticated, the data reputation services server operates on the request to determine whether content identified by the digital fingerprint matches pre-existing claims in the threat database. The content inspection system generates a threat evaluation response for the mobile device based on reviewing the threat database for pre-existing claims.",8621630
8621653,2013-12-31,13,B2,"A location collection system is described herein that provides a uniform facility for reporting location data to a cloud-based service from a variety of devices, and that provides a uniform facility for accessing aggregated location data collected by the cloud-based service. The system collects location information related to a user and reports the location information to a central service to provide a variety of useful services to the user. By providing a big, secure location vault in the cloud, the system enables big data analytics to be used to allow current and future questions to be asked of this data and to correlate this with other data to enable new scenarios not yet enabled. Thus, the location collection system provides a model to report, gather, and analyze location data across devices and users.",8621653
8635152,2014-01-21,10,B2,"A mechanism is provided for deploying software applications in a cloud computing environment. An administrator is provided an interface for allowing a software application that is designed for a single tenant to be used by a plurality of users. An aspect of the invention is to provide a mechanism for quickly and easily giving multi-user qualities to a single tenant application like autoCAD. As such, multiple users can access the application without the need to download and install a version locally on their system. The system is able to determine the period of time for which an application is in use for a given user, because every application is run on a resource that is part of the cloud environment. Therefore, it is possible for the application provider to charge for the application in a usage-based model—e.g. by the hour, or day—without any re-engineering of the existing application.",8635152
8635607,2014-01-21,15,B2,"Building binary packages for software products, particularly large-scale software products, is a highly computation intensive process. Thus, it is desirable to distribute the workload over a large number of computing nodes so as to have the build process complete in an optimal period of time. One environment providing compute resources that can be utilized for a highly available and dynamically scalable distributed build process is an elastic compute cloud. In such an environment, virtual machines can be instantiated and destroyed as the resource requirements of the build process dictate. This has the advantage that dedicated hardware is unneeded, and excess capacity on the hardware employed can be employed for other computation tasks when the build process is idle. Presented herein are systems, methods and computer storage media for distributing a highly available and scalable build service, suitable for use in an elastic compute environment or other distributed environment.",8635607
8650326,2014-02-11,24,B2,"Architecture that facilitates communications between two network nodes of the different networks by providing a routing mechanism that uses alternative modalities driven entirely by policies that are authored and stored in a computing cloud and enforced on the client. This allows the selection of one network path over another path based on criteria such as, physical location of the hosts and service level agreements (SLAs) to be provided, for example. With respect for path selection, a packet can be routed through a datacenter closest to the hosts. With respect to SLAs, there may be different SLAs available to different clients. For clients with the highest bandwidth/uptime or other guarantees, a network path different from other types of clients can be selected. Additionally, connectivity can be allowed or disallowed based on other kinds of policy rules such as a virtual circle to which the hosts may belong.",8650326
8660847,2014-02-25,35,B2,"A system for integrating local speech recognition with cloud-based speech recognition in order to provide an efficient natural user interface is described. In some embodiments, a computing device determines a direction associated with a particular person within an environment and generates an audio recording associated with the direction. The computing device then performs local speech recognition on the audio recording in order to detect a first utterance spoken by the particular person and to detect one or more keywords within the first utterance. The first utterance may be detected by applying voice activity detection techniques to the audio recording. The first utterance and the one or more keywords are subsequently transferred to a server which may identify speech sounds within the first utterance associated with the one or more keywords and adapt one or more speech recognition techniques based on the identified speech sounds.",8660847
8661125,2014-02-25,12,B2,"A multi-level monitoring system is provided for monitoring multiple performance aspects of a cloud service concurrently in order to generate a full and reliable performance analysis of the cloud service. The multi-level monitoring system may include a set of components for carrying out the performance analysis of the cloud service which may be deployed together to operate externally, internally, or concurrently with the cloud service. The component framework of the multi-level monitoring system may include a main component, a plug-in associated with the main component, a definition database, a log database, and an output database. The main components of an example multi-level monitoring framework may include a probe runner component for probing the cloud service, a monitor component for generating alerts based on probe results, and a responder component for processing the alerts and taking appropriate actions to improve the cloud service performance.",8661125
8667292,2014-03-04,18,B2,"Privacy-preserving metering with low overhead is described. In an embodiment consumption of a resource such as electricity, car insurance, cloud computing resources is monitored by a meter and bills are created in a manner which preserves privacy of a customer but at the same reduces bandwidth use between a meter and a provider of the resource. For example, fine grained meter readings which describe customer behavior are kept confidential without needing to send large cryptographic commitments to meter readings from a meter to a provider. In an example, meter readings are encrypted and sent from a meter to a provider who is unable to decrypt the readings. In examples a cryptographic signature is generated to commitments to the meter readings and only the signature is sent to a provider thus reducing bandwidth. For example, a customer device is able to regenerate the commitments using the signature.",8667292
8671085,2014-03-11,39,B2,"A distributed database transaction coordination manager's outcome store may be unavailable to resolve in-doubt transactions locally, e.g., after an unclean detach, during an outcomes store restore, or during a logical database restore. To facilitate transactional consistency, AGEs and values based on them are used. Some code avoids reformatting any closed physical portion for reuse based on the segment's most recently received minimum of persisted AGEs. Some code commits any in-doubt transactions that appear on an aggregate list and aborts any not on the aggregate list. Some code writes each segment's transaction commit records to persistent storage until the segment's persisted-AGE is not less than a common-restore-AGE, and some code resolves any in-doubt transactions based on a harvested outcomes list. Outcomes may reside in a log or a persisted transactions table. A restore checkpoint may include harvested outcomes. Segments may reside on cloud nodes and/or in a shared nothing database system.",8671085
8671417,2014-03-11,10,B2,"Various technologies described herein pertain to developing a web application using a scripting language-based framework. A call can be received via an interface of the scripting language-based framework. The call can manage a control included in the scripting language-based framework. Further, the call can be provided by an application that references the scripting language based framework. Moreover, a user interface can be generated based on the control managed by the call, and backend cloud-based services provided by a distributed data store on a cloud platform can be accessed based on the control managed by the call.",8671417
8676849,2014-03-18,10,B2,"Techniques and environments that increase the convenience, efficiency and variety of cloud services are offered to clients. User data having an original representational format is losslessly transformed to form one or more alternate renditions having various representational formats based on the lossless transforms. The renditions, which may be pre-generated, can be stored on a network server instead of the identical user data to thereby reduce redundant computation and storage costs. In some cases both the renditions and the original use data may be stored. The original user data may be reconstructed, recreated, or restored using the alternate renditions.",8676849
8682957,2014-03-25,15,B2,"The current invention is directed to embedded, wireless cloud-connector devices and systems that allow the embedded, wireless cloud-connector devices to be deployed in a variety of embedding devices, applications, and uses. The embedded, wireless, cloud-connector devices to which the current application is directed are implemented using a single integrated circuit, or set of integrated-circuit chips, and each interfaces to a device, product, or system in which the cloud-connector devices are embedded as subcomponents as well as to a communications-services provider. The cloud-connector devices provide data exchange between devices, products, and systems in which they are embedded and cloud providers that provide cloud-computing services, data-message routing, and wireless services through wireless carriers. Embedded, wireless cloud-connector devices, and the systems that interconnect and manage them, allow cloud-providers to extend the cloud-computing domain into many different types of low-cost and geographically dispersed markets and areas of use.",8682957
8682958,2014-03-25,10,B2,"The present invention extends to methods, systems, and computer program products for decoupling cluster data from cloud deployment. The decoupling facilitates taking down and reattaching a cluster to persisted data as needed. Other embodiments of the invention include resuming a cluster's execution on a different topology and/or different system states based on a persisted data set.",8682958
8693993,2014-04-08,11,B2,"A dynamically created and automatically updated personalized cloud of mobile tasks may be displayed on an interactive visual display via a personalized cloud generator application. The personalized cloud generator application may receive and/or capture information representing a mobile task performed by a mobile computing device user. The personalized cloud generator application may then store the information and determine a relevance of a given performed mobile task. If the relevance of the performed mobile task meets a prescribed threshold, the personal cloud generator application may display a selectable visual representation (e.g., selectable icon) of the performed mobile task. Given a user's activity, the visual representation may be automatically updated (displayed, removed, moved, resized, etc.) based on the information received and/or captured. Subsequent selection of the displayed visual representation allows quick and easy access or performance of the associated mobile task.",8693993
8694653,2014-04-08,9,B2,"The present invention extends to methods, systems, and computer program products for targeted data transfer data between operational domains. Embodiments of the invention facilitate moving data between operational domains inside and outside of a resource cloud. A proxy runs on the boundary of each operational domain, such as, for example, an on premise cluster and a resource cloud. The proxies are capable of resolving the location of the targeted entity and forwarding the data or request on to the next hop, which may either be another proxy or the worker module running on the target node. A proxy can run on the head node of an on premise cluster so that compute nodes on private networks can be targeted. A proxy can also run on a public endpoint within the resource cloud to make nodes within the resource cloud available.",8694653
8695005,2014-04-08,17,B2,The described method/system/apparatus uses intelligence to better allocate tasks/work items among the processors and computers in the cloud. A priority score may be calculated for each task/work unit for each specific processor. The priority score may indicate how well suited a task/work item is for a processor. The result is that tasks/work items may be more efficiently executed by being assigned to processors in the cloud that are better prepared to execute the tasks/work items.,8695005
8701155,2014-04-15,9,B2,"A cloud infrastructure that communicates with computing devices is provided. The computing devices install filters on other computing devices that they wish to receive items from including pictures, messages, and documents. The filters include criteria that are evaluated on the computing devices, rather than at a server, to determine if an item may be sent to another computing device. The computing devices may then send items that match the criteria to the cloud infrastructure, and the items may be stored and queued for delivery to other computing devices. The items may be encrypted before being provided to the cloud infrastructure, and decrypted when received by the computing devices.",8701155
8705746,2014-04-22,45,B2,"A system that enables a cloud-based data repository to function as a secure ‘drop-box’ for data that corresponds to a user is provided. The ‘drop box’ can be facilitated through the use of cryptographic keying technologies. For instance, data that is ‘dropped’ by or on behalf of a particular user can be encrypted using a public key that corresponds to a user-specific private key. Thus, although the data resides within the large pool of ‘cloud-based’ data, it is protected since it can only be decrypted by using the private key, which is kept secret. The innovation can further facilitate user-centric secure storage by partitioning the cloud-based repository into multiple partitions, each of which corresponds to specific indexing criteria.",8705746
8713163,2014-04-29,20,B2,"The present invention extends to methods, systems, and computer program products for monitoring cloud-runtime operations. Embodiments of the invention include an infrastructure for initiating and monitoring (e.g., asynchronous) cloud-runtime operations. In some embodiments, cloud-runtime operations are included in a sequence of operations (e.g., in a workflow) for deploying or purging cloud based resources for a customer premises. Accordingly, monitored operations include creating cloud deployments, growing cloud deployments, shrinking cloud deployments, and deleting cloud deployments. Cloud deployments can be reliably deleted when a workflow is aborted, to prevent accrual of unexpected charges.",8713163
8713365,2014-04-29,17,B2,"Embodiments enable recovery of push notification channels via session information associated with user identifiers. A proxy service creates session information describing push notification channels (e.g., subscriptions) for a user and associates the session information with a user identifier. The session information is stored in a cloud service or other storage area separate from the proxy service. After failure of a user computing device or the proxy service, the session information is obtained via the user identifiers and the push notification channels are re-created with the session information. In some embodiments, the proxy service enables delivery of the same notification to multiple computing devices associated with the user identifier.",8713365
8719627,2014-05-06,11,B2,"A cloud migration system is described herein that provides capacity management and disaster recovery by detecting peak load conditions and automatically moving computing to another computing resource (and back) and by providing computing across two or more clouds and moving completely to one in the case of a disaster at one site. The system monitors loads within a datacenter and detects a threshold that indicates that the current load is nearing the datacenter's capacity. Upon detecting that the threshold will be reached, the system facilitates an orderly move of at least some datacenter load to another datacenter or cloud-based resources. The system can also be used as a disaster recovery architecture at a datacenter/network level to manage fast workload transition in case of disaster. Thus, the system allows enterprises to build smaller and more efficient datacenters that leverage other resources for rare extra loads.",8719627
8719706,2014-05-06,9,B2,"A cloud help system is described herein that is a confederation of both internet and product help content that gives the user of a software application a rich web-based user interface for searching the internet in conjunction with and in the context of the software application. An application developer associates identifiers with various features and areas within an application. Upon detecting a user request for product help, the system receives the identifier and identifies instructional material related to the received identifier. The instructional material combines traditional local and online help information with dynamic content from an online data source. The online data source includes an association between each identifier and one or more searches for online content. An administrator can update the online searches over time so that new material can be incorporated.",8719706
8719804,2014-05-06,31,B2,"Instances of a same application execute on different respective hosts in a cloud computing environment. Instances of a monitor application are distributed to concurrently execute with each application instance on a host in the cloud environment, which provides user access to the application instances. The monitor application may be generated from a specification, which may define properties of the application/cloud to monitor and rules based on the properties. Each rule may have one or more conditions. Each monitor instance running on a host, monitors execution of the corresponding application instance on that host by obtaining from the host information regarding values of properties on the host per the application instance. Each monitor instance may evaluate the local host information or aggregate information collected from hosts running other instances of the monitor application, to repeatedly determine whether a rule condition has been violated. On violation, a user-specified handler is triggered.",8719804
8725798,2014-05-13,15,B2,"Provisioning a cloud based high performance computing cluster. The method includes from a cloud based provisioning service deployed in a cloud based computing provider, providing a user interface. The method further includes receiving user input at the cloud based provisioning service from the user interface. The method further includes from the user input, determining a configuration for a cloud based user service for the user. Using the cloud based provisioning service, the method further includes provisioning the cloud based user service for the user, in the cloud, based on the determined configuration.",8725798
8744423,2014-06-03,6,B2,Personalization data such as settings and/or state is migrated across devices including mobile phones. Device personalizations are pushed to a cloud service or other mechanism for backup and subsequent transmission to other devices. The personalization data can later be employed to configure one or more other devices in the same manner as a first device.,8744423
8745397,2014-06-03,10,B2,"Technologies are described herein for cloud monitoring federations that can include cloud monitoring services (CMS) that collect monitoring information from point of presence (POP) agents. The cloud monitoring POPs may be located in the cloud, on client machines, embedded within cloud applications, or wherever they can obtain visibility into managed entities associated with the cloud. Management systems, acting as cloud monitoring clients (CMC), may interface with the CMS to obtain a complete view of services and application used by their enterprise including those that operate outside of the enterprise premises as part of a cloud or outside network. The publishing by POPs and consumption by CMCs of management information across components within the enterprise and out in the cloud may be supported by managing roles, responsibilities, scopes, security boundaries, authenticity of information, service level agreements, and other aspects of cloud monitoring operations.",8745397
8745434,2014-06-03,11,B2,"Data that is collected and disseminated by mobile devices typically has to be processed, correlated with other data, aggregated, and then transmitted back to the mobile device users before the information becomes stale or otherwise irrelevant. These operations may be performed in a cloud-based solution that manages dataflow. The cloud-based solutions may be scalable and implemented in a fault-tolerant distributed system to support user-facing continuous sensing and processing services in the cloud-computing system. A system may monitor execution of data and shift workloads (i.e., balancing) in response to spatial and temporal load imbalances that occur in a continuous computing environment. A failure recovery protocol may be implemented that uses a checkpoint-based partial rollback recovery mechanism with selective re-execution, which may allow recovery of the continuous processing after an error while avoiding large amounts of downtime and re-execution.",8745434
8769134,2014-07-01,16,B2,A cloud computing platform contains a structured storage subsystem the provides scalable queues. The cloud computing platform monitors message throughput for the scalable queues and automatically increases or decreases subqueues that provide the operational functionality for each scalable queue. A visibility start time and cloud computing platform time are maintained for each message to provide an approximate first-in-first-out order for messages within each subqueue. A message in a subqueue may be available for processing when the current cloud computing time is greater than the visibility start of the message.,8769134
8775518,2014-07-08,17,B2,"The current patent application is directed to a class of highly functional, cloud-connected, interactive applications that are well suited for distribution and execution in social-networking contexts. When executed within the contexts of browser applications running on processor-controlled electronic devices, the class of application programs to which the current patent application is directed provides for importing images and other information from a social-networking service, developing digitally encoded and electronically stored content based on the imported images and other information, and distributing the digitally encoded and electronically stored content within a social-networking environment.",8775518
8775554,2014-07-08,17,B2,"Embodiments extend functionality of a web page using cloud-based page applications. A page application provider, executing as part of a web browser, receives notification of a web page being accessed by a user of a user computing device. One or more page applications associated with the web page are identified. The identified page applications provide functionality related to the web page and, in some embodiments, interact or share data with the web page. The page application provider presents the identified page applications to the user. Based on a selection of at least one of the presented page applications, the selected page application is provided for execution by the user computing device. In some embodiments, the correlations among the user, web pages, and page applications are available from a cloud-based page application service.",8775554
8775599,2014-07-08,10,B2,"A system that includes multiple hosts, each running a plurality of virtual machines. The system may be, for example, a cloud computing environment in which there are services and a service coordination system that communicates with the hosts and with the services. The services include a middleware management service that is configured to maintain per-tenant middleware policy for each of multiple tenants. The middleware management service causes the middleware policy to be applied to network traffic by directing network traffic to a middleware enforcement mechanism. This middleware policy is per-tenant in that it depends on an identity of a tenant.",8775599
8775626,2014-07-08,12,B2,"The present invention extends to methods, systems, and computer program products for using templates to configure cloud resources. Embodiments of the invention include encapsulating cloud configuration information in an importable/exportable node template. Node templates can also be used to bind groups of nodes to different cloud subscriptions and cloud service accounts. Accordingly, managing the configuration of cloud based resources can be facilitated through an interface at a (e.g., high performance) computing component. Templates can also specify a schedule for starting/stopping instance running within a resource cloud.",8775626
8793031,2014-07-29,12,B2,"Embodiments enhance the functionality of a vehicle, a user device, or both by the selection and sharing of data. Upon detection of each other, the vehicle device and the user device obtain and share data. The data may be associated with the user, the user computing device, and/or the vehicle and may be stored in cloud-based services. Functionality of the vehicle and/or user device is customized to the user based on the shared data. For example, the user device may provide assisted global positioning system (GPS) data to the vehicle to reduce a time-to-fix (TTF) when determining a location of the vehicle. In other examples, settings of the vehicle are personalized to the user, and location-relevant content is downloaded to the user device.",8793031
8799453,2014-08-05,171,B2,"A cloud manager assists in deploying and managing networks for an online service. The cloud manager system receives requests to perform operations relating to configuring, updating and performing tasks in networks that are used in providing the online service. The management of the assets may comprise deploying machines, updating machines, removing machines, performing configuration changes on servers, Virtual Machines (VMs), as well as performing other tasks relating to the management. The cloud manager is configured to receive requests through an idempotent and asynchronous application programming interface (API) that can not rely on a reliable network.",8799453
8800048,2014-08-05,16,B2,"Methods and a tool or instrument for performing the methods of protecting a computer program with a parameter cloud are disclosed. A parameter cloud comprising a plurality of elements may be created. Called functions of a computer program may have defined expected parameter cloud states so that proper behavior of the called function is achieved when the parameter cloud state is the expected parameter cloud state. An expected parameter cloud state may include a selected set of elements of the parameter cloud having assigned values. Static portions of the called functions may depend on a current parameter cloud state, and calling functions may transform the parameter cloud state prior to calling their respective called functions. The methods and instrument may operate on original source code or post-binary targets of the computer program. A fingerprint may be used to identify a specific computer program from a sequence of state transitions.",8800048
8805833,2014-08-12,10,B2,"The personal data search technique uses data input by users for a given user's personal data on a social networking site to enrich the given user's personal data. The technique annotates personal data stored on a personal computing device or in a computing cloud with data obtained from social networking sites (for example, tags, comments, likes/dislikes and so forth) provided by friends/other users in the given user's social network or networks. Such annotations can later are used by search engine to enhance the search functionality and/or to improve the ranking of search results. Since the data is entered by actual human users it is very accurate and since the data is already readily available on social networks the cost to obtain it is very inexpensive.",8805833
8806451,2014-08-12,32,B2,"Systems and methods are provided for using monads to facilitate complex computation tasks in a cloud computing environment. In particular, monads can be employed to facilitate creation and execution of data mining jobs for large data sets. Monads can allow for improved error handling for complex computation tasks. Monads can also facilitate identification of opportunities for improving the efficiency of complex computations.",8806451
8806652,2014-08-12,25,B2,"Aspects of the subject matter described herein relate to identity technology. In aspects, even though a cloud operator may control one or all of the entities with which a user device interacts, the employees and computers controlled by the cloud operator may still have insufficient data to determine a natural identity of the user based on interactions of the user device with the cloud operator's computers. Privacy boundaries on the user device control transmission of natural identity information to other entities such that, without user consent, computers outside of the user device have insufficient data singly or combined to determine a natural identity of the user.",8806652
8812411,2014-08-19,10,B2,"The subject disclosure relates to a knowledge-driven data quality solution that is based on a rich knowledge base. The data quality solution can provide continuous improvement and can be based on continuous (or on-going) knowledge acquisition. The data quality solution can be built once and can be reused for multiple data quality improvements, which can be for the same data or for similar data. The disclosed aspects are easy to use and focus on productivity and user experience. Further, the disclosed aspects are open and extendible and can be applied to cloud-based reference data (e.g., a third party data source) and/or user generated knowledge. According to some aspects, the disclosed aspects can be integrated with data integration services.",8812411
8812687,2014-08-19,10,B2,"A mechanism is described for provisioning remote desktops in a cloud based infrastructure while maintaining user personalization. In cloud based systems, a user may not always reconnect to the same VM endpoint. In one embodiment, the virtual hard disk assigned to a user is mounted to the endpoint assigned to the user. The virtual hard disk includes the user's personal data and personalization information (e.g., settings, profiles, files, etc.). When the user disconnects from the remote desktop, the virtual hard disk is demounted from the endpoint. The virtual hard disk thus provides information regarding the user's state when the user is disconnected.",8812687
8812830,2014-08-19,26,B2,"In a cloud computing environment, a production server virtualization stack is minimized to present fewer security vulnerabilities to malicious software running within a guest virtual machine. The minimal virtualization stack includes support for those virtual devices necessary for the operation of a guest operating system, with the code base of those virtual devices further reduced. Further, a dedicated, isolated boot server provides functionality to securely boot a guest operating system. The boot server is isolated through use of an attestation protocol, by which the boot server presents a secret to a network switch to attest that the boot server is operating in a clean mode. The attestation protocol may further employ a secure co-processor to seal the secret, so that it is only accessible when the boot server is operating in the clean mode.",8812830
8817777,2014-08-26,15,B2,"A hybrid Unified Communications (UC) telephony deployment includes users of a tenant that are hosted between a UC cloud deployment and a UC on-premise deployment that offers PSTN connectivity for the users. An identity of a tenant and its' users are maintained consistently between the on-premise and cloud based UC deployment (e.g. telephone numbers, dialing preferences, voice mail . . . ). Each user of the tenant can register with the UC service from one or more locations (e.g. on-premise, off-premise . . . ) whether or not they are hosted by the on-premise deployment or the cloud based UC deployment. Functionality of the UC deployment may also be maintained at one or more locations within the hybrid UC deployment. For example, some services (e.g. voicemail, or other services) can be hosted in the cloud while the remaining services are hosted on-premise. Different Telco providers may be chosen by the tenant to provide PSTN services for one or more users of the tenant.",8817777
8819171,2014-08-26,6,B2,"A system, method, and computer product for monitoring and benchmarking client devices from a server. A server, data center, and/or cloud computing environment may monitor certain aspects of a remote desktop session. The rendering, capture, and compression of a desktop may be monitored. The time between the sending of frames to a thin client can be monitored, the network bandwidth available can be monitored and the time between sending a frame and receiving a response from the thin client can be monitored. Based on these values, a benchmark for the remote desktop experience can be determined.",8819171
8819490,2014-08-26,10,B2,"A test system for a managed cloud computing environment may have a management system that may recruit devices in the cloud and outside the cloud to perform a test on a cloud based application. Each device may execute an agent that connects the device to several cloud services for messaging, data collection, and executable code storage. The management system may identify and gather the devices, then cause the devices to execute a test by sending commands through the messaging service. The devices may access executable code for the specific tasks of a test through the code storage service, and as the devices complete tasks for the test, the devices may publish results in the data collection service. The test system enables any type of scenario to be implemented, including operations that can only be performed inside and outside the managed cloud environment.",8819490
8819701,2014-08-26,26,B2,"A cloud computing monitoring system has an alert capturing system and a message transfer system that provides performance tracking and alert management to a local monitoring system. The alert capturing system may operate as part of a managed code framework and may capture and route alerts that may be transmitted to an operating system, as well as application exceptions and debugging information. A message queuing system may transmit the alerts to a local monitoring system, which may have a connector that subscribes to the cloud system's message queuing system.",8819701
8825996,2014-09-02,7,B2,"Described herein are technologies pertaining to preserving privacy of users of mobile computing devices. Two users of two mobile computing devices share a quantization scheme for quantizing location data using a predefined quantization interval. The two users additionally share a private key that is utilized to encrypt locations obtained by the two computing devices that have been quantized using the shared quantization scheme. Encrypted, quantized locations are compared in a cloud computing service in connection with answering location-based queries, where the comparison is undertaken without the cloud computing service decrypting the encrypted, quantized locations.",8825996
8826068,2014-09-02,23,B2,"A system and method for performing automated testing of an application in a cloud environment. A controller initializes an manages a number of virtual machines (VM), each VM including a test engine. The controller retrieves configuration data, determines a number of VMs to deploy, and initializes the VMs. The controller manages each VM by providing test commands and monitoring the results. Each VM receives and executes the test commands. The system may be used to test interactive applications or non-interactive applications.",8826068
8843609,2014-09-23,41,B2,"A tenant comprising one or more users receives services from a cloud computing system (“CCS”). The CCS determines when a tenant is not using any services, and if so, the CCS initiates a tenant suspension process. The tenant suspension process involves suspending various asynchronous computing processes for the tenant, which execute otherwise execute even if no users of the tenant are currently accessing the CCS. After a period of non-use of the CCS, the tenant is suspended. The tenant is returned to an active state automatically when a user of the tenant logs-on to receive services.",8843609
8849924,2014-09-30,7,B2,"Network infrastructure management may be provided. First, administrative tools associated with a plurality of network topologies may be provided in a management console. Providing the administrative tools may comprise providing a first set of tools associated with a first network topology in the console. The first network topology may be an on-premises topology. Providing the administrative tools may also comprise providing a second set of tools associated with a second network topology in the console. The second network topology may be a cloud topology. Next, communications for the plurality of network topologies may be established to manage the plurality of network topologies through the management console. Establishing the communications for the plurality of network topologies may comprise establishing a first communications channel between the first network topology and the console. In addition, establishing the communications may comprise establishing a second communications channel between the second network topology.",8849924
8850230,2014-09-30,31,B2,"This document describes tools capable of enabling cloud-based movable-component binding. The tools, in some embodiments, bind protected media content to a movable component in a mobile computing device in a cryptographically secure manner without requiring the movable component to perform a complex cryptographic function. By so doing the mobile computing device may request access to content and receive permission to use the content quickly and in a cryptographically robust way.",8850230
8856171,2014-10-07,12,B2,"The subject disclosure relates to interaction and execution of objects in a distributed network or in the cloud. Each object comprises a Uniform Resource Identifier (URI) path that names the object in the cloud through a distributed object directory. A client device can directly interface with a live instance of an object based on the URI path. The object can be agnostic to remote procedure call semantics. In some aspects, the object can be connected to an interacted with either remotely or locally. Further, single instances or multiple instances of the object can exist at substantially the same time.",8856171
8856917,2014-10-07,13,B2,"A mechanism is provided for automatically logging into a cloud based system that does not accept token log-on credentials generated by a single sign-on service. In an embodiment, a one-time password is automatically generated and persisted. The generated password is used to log in automatically to a cloud based system that does not accept tokens generated by the web-ID providers and for connecting to other services. Examples of such systems may include Windows, Linux, and iOS.",8856917
8863082,2014-10-14,7,B2,"Porting between local, cluster, and cloud execution is aided by using the same source code for multiple data sources. A data source identifier recited in source code maps to data sources at different execution targets. Executable codes tailored to successive targets are produced using a resolution API without changing the developer's source code. An editable data source mapping is per-project, maintained in a file or project property, and placed in a distributable software package with executable code. Burdens on developers to determine execution targets in their source code and explicitly handle different execution locations in the source code are reduced. Source code can be freed of absolute path data source identifiers or code for detecting execution location. Source-to-source translation injects calls to create a folder, file, or cloud container. Data source resolution can be based on a relative path rooted at the data source identifier.",8863082
8863291,2014-10-14,26,B2,"The reputation of an executable computer program is checked when a user input to a computing device initiates a program launch, thus triggering a check of a local cache of reputation information. If the local cache confirms that the program is safe, it is permitted to launch, typically without notifying the user that a reputation check has been made. If the local cache cannot confirm the safety of the program, a reputation check is made by accessing a reputation service in the cloud. If the reputation service identifies the program as safe, it returns an indication to the computing device and the program is permitted to be launched, again without notifying the user that a reputation check has been made. If the reputation service identifies the program as unsafe or potentially unsafe, or does not recognize it at all, a warning is displayed to the user.",8863291
8881223,2014-11-04,78,B2,"Secure content management is enabled as a cloud-based service through which security protection and policy enforcement may be implemented for both on-premise network users and off-premise or roaming users. The global SCM service integrates the security functionalities—such as anti-virus, spyware, and phishing protection, firewall, intrusion detection, centralized management, and the like—that are typically provided by enterprise network SCM appliance hardware or servers into a cloud-based service that users reach via Internet-based points-of-presence (“POPs”). The POPs are configured with forward proxy servers, and in some implementations, caching and network acceleration components, and coupled to hubs which provide configuration management and identity management services such as active directory services.",8881223
8892601,2014-11-18,12,B2,Creating web application using cloud-based friction-free databases without web hosting knowledge. User credentials are received at a web application service for initiating a web application task via client software. The user credentials are analyzed to determine whether to grant the user permission to initiate the requested web application task. The web application task is initiated when the permission is granted. Data associated with the initiated web application task is received at the web application service for analysis of the data to host and render a web application based solely on received data provided without basis of web hosting knowledge.,8892601
8898318,2014-11-25,58,B2,"One or more techniques and/or systems are disclosed for providing resource authorization to users of a distributed memory store (e.g., a distributed web-based cloud service). A session ID that identifies a location of an authorization document in a distributed memory store is used to access the authorization document, which comprises a global section with a principal ID related to a user. The user can be authorized to utilize a resource (e.g., in a distributed cloud service) if a resource section is present for the principal ID in the authorization document, and has appropriate resource data for the resource. If the resource section is not present, it can be created in the authorization document, and identified by a resource identifier. Authorization data can be loaded into the newly created resource section, and the authorization document, with the global and resource sections, is saved to a local cache for the distributed memory store.",8898318
8898487,2014-11-25,24,B2,"Mobile computing device power consumption can be reduced by using expiration window timers, state-based timers and/or the coordination of keep-alive timers. Upon detecting a trigger event causing a mobile computing device to transition from a low-power state to an active state, the device can determine whether the trigger event occurs within the expiration window of a timer, and execute tasks associated with the trigger event and the timer. Tasks associated with state-based timers can be executed if the mobile computing device or a component thereof is in (or, alternatively, not in) a specified state. A mobile computing device can execute tasks associated with multiple keep-alive timers used for maintaining communication links between the device and cloud-based service providers in a single active state. A cloud-based keep-alive service can maintain mobile computing device-service provider communication links by sending one keep-alive communication to a mobile computing device in place of multiple communications.",8898487
8904008,2014-12-02,48,B2,"Systems and methods are provided for assigning and associating resources in a cloud computing environment. Virtual machines in the cloud computing environment can be assigned or associated with pools corresponding to users as dedicated, standby, or preemptible machines. The various states provide users with the ability to reserve a desired level of resources while also allowing the operator of the cloud computing environment to increase resource utilization.",8904008
8910268,2014-12-09,78,B2,"Secure content management is enabled as a cloud-based service through which security protection and policy enforcement may be implemented for both on-premise network users and roaming users. The global SCM service integrates the security functionalities—such as anti-virus, spyware, and phishing protection, firewall, intrusion detection, centralized management, and the like—that are typically provided by enterprise network SCM appliance hardware or servers into a cloud-based service that users reach via Internet-based points-of-presence (“POPs”). The POPs are configured with forward proxy servers, and in some implementations, caching and network acceleration components, and coupled to hubs which provide configuration management and identity management services such as active directory services.",8910268
8918501,2014-12-23,15,B2,"Monitoring knowledge is distilled into platform-nonspecific patterns of high-level language elements compiled into management packs or other rule packs targeting specific platforms. A server health and/or configuration monitoring knowledge compiler accepts distillation document(s) and target-specific information, and generates target-specific rule packs to be consumed by monitoring tools to monitor specific target platforms consistent with the platform-nonspecific monitoring elements. Computational rule pack generation is qualitatively different from manual rule pack creation. Plug-ins tailor the compiler to generate on-premises or cloud-based rule packs. Distillation element examples include monitor alert types, instructional content types, target attributes and tags, monitored item types, event alert types, performance collection types, policy monitor types, and threshold monitor types. Tags on monitoring elements indicate relevant products, locations, product features, monitoring tool features, contributors, etc. Runtime code is shared by multiple rule packs for different target platforms.",8918501
8935317,2015-01-13,17,B2,"Optimization mechanism that dynamically splits the computation in an application (e.g., cloud), that is, which parts run on a client (e.g., mobile) and which parts run on servers in a datacenter. This optimization can be based on application characteristics, network connectivity (e.g., latency, bandwidth, etc.) between the client and the datacenter, power or energy available at the client, size of the application objects, load in the datacenter, security and privacy concerns (e.g., cannot share all data on the client with the datacenter), and other criteria, as desired.",8935317
8935375,2015-01-13,21,B2,"Methods, systems, and computer-readable media for facilitating coordination between a fabric controller of a cloud-computing network and a service application running in the cloud-computing network are provided. Initially, an update domain (UD) that includes role instance(s) of the service application is selected, where the service application represents a stateful application is targeted for receiving a tenant job executed thereon. The process of coordination involves preparing the UD for execution of the tenant job, disabling the role instance(s) of the UD to an offline condition, allowing the tenant job to execute, and restoring the role instance(s) to an online condition upon completing execution of the tenant job. Preparing the UD includes notifying a management role established within the service application of the fabric controller's intent to execute the tenant job and receiving a management-role response communicating a presence of replications of internal state(s) of the role instance(s) affected by the tenant job.",8935375
8935742,2015-01-13,78,B2,"Secure content management is enabled as a cloud-based service through which security protection and policy enforcement may be implemented for both on-premise network users and roaming users. The global SCM service integrates the security functionalities—such as anti-virus, spyware, and phishing protection, firewall, intrusion detection, centralized management, and the like—that are typically provided by enterprise network SCM appliance hardware or servers into a cloud-based service that users reach via Internet-based points-of-presence (“POPs”). The POPs are configured with forward proxy servers, and in some implementations, caching and network acceleration components, and coupled to hubs which provide configuration management and identity management services such as active directory services.",8935742
8941644,2015-01-27,5,B2,"This document describes techniques for creating three-dimensional models of image collections using a network-accessible (e.g., cloud-based) computation service, rather than a client computing device. In some instances described below, the computation service performs at least a portion of the operations for creating these models in parallel.",8941644
8943043,2015-01-27,14,B2,"A “Community-Based Mobile Search Cache” provides various techniques for maximizing the number of query results served from a local “query cache”, thereby significantly limiting the need to connect to the Internet or cloud using 3G or other wireless links to service search queries. The query cache is constructed remotely and downloaded to mobile devices. Contents of the query cache are determined by mining popular queries from mobile search logs, either globally or based on queries of one or more groups or subgroups of users. In various embodiments, searching and browsing behaviors of individual users are evaluated to customize the query cache for particular users or user groups. The content of web pages related to popular queries may also be included in the query cache. This allows cached web pages to be displayed without first displaying cached search results when a corresponding search result has a sufficiently high click-through probability.",8943043
8943551,2015-01-27,58,B2,"Device information for each of multiple devices associated with a user account is maintained by a cloud service. The device information can include credential information allowing the device to be accessed by other ones of the multiple devices, remote access information indicating how the device can be accessed by other ones of the multiple devices on other networks, and property information including settings and/or device drivers for the device. The device information for each of the multiple devices is made available to other ones of the multiple devices, and can be used by the multiple devices to access one another and provide a consistent user experience across the multiple devices.",8943551
8955082,2015-02-10,10,B2,"An authentication mechanism in a local area network may use a cloud authentication mechanism to allow or deny authentication requests. A user may gain access within a local area network by entering a cloud identification and password, which may be verified by a cloud authentication mechanism. If the authentication is successful from the cloud authentication mechanism, the user identification and password are stored locally for subsequent authentication requests. In some embodiments, the cloud password may be periodically flushed so that subsequent requests may be passed to the cloud authentication mechanism. The authentication mechanism may be used in both domain and workgroup local area networks, and may operate in parallel with other users who may have local area network or client credentials which may not be authenticated from the cloud.",8955082
8959484,2015-02-17,10,B2,"Compiling source code to provide an executable code build. The method includes configuring a pool of substantially identical virtual machines in a distributed cloud computing environment. Configuring may include configuring virtual machines to have generic code compiling functionality. The method further includes determining that source code for a particular user should be compiled. As a result, the method includes selecting a virtual machine from the pool of substantially identical virtual machines and configuring the selected virtual machine in a way that is specific to the user. Source code for the user is retrieved from a source control system deployed in the distributed computing environment. Using the virtual machine configured in the way specific to the user, the user's retrieved source code is compiled to compiled code. After compiling is completed, the configured virtual machine is restored to a generic form.",8959484
8972491,2015-03-03,7,B2,"An application programming interface is provided that allows applications to assign multiple service-level agreements to their data transactions. The service-level agreements include latency bounds and consistency guarantees. The applications may assign utility values to each of the service-level agreements. A monitor component monitors the various replica nodes in a cloud storage system for latency and consistency, and when a transaction is received from an application, the monitor determines which of the replica nodes can likely fulfill the transaction in satisfaction of any of the service-level agreements. Where multiple service-level agreements can be satisfied, the replica node that can fulfill the transaction according to the service-level agreement with the greatest utility is selected. The application may be charged for the transaction based on the utility of the service-level agreement that was satisfied.",8972491
8972560,2015-03-03,32,B2,"Cloud computing platforms having computer-readable media that perform methods to shape virtual machine communication traffic. The cloud computing platform includes virtual machines and a controller. The controller limits the traffic associated with the virtual machines to enable the virtual machines to achieve desired communication rates, especially when a network servicing the virtual machines is congested. The controller may drop communication messages associated with the virtual machines based on a drop probability evaluated for the virtual machines.",8972560
8972578,2015-03-03,20,B2,An application provides cloud computing master data management. The application determines a rank associated with received server information from a server. The source rank is adjusted according to evaluation of server information against naming convention standards. The source rank is used in determining a category matching the server information. An assigned category includes instructions to configure assets of a server. The application assembles configuration information from the assigned category and provides the configuration information to the server.,8972578
8983911,2015-03-17,8,B2,"A storage abstraction system is described herein that exposes storage from an operating system as a uniform storage device and abstracts from applications the selection of a particular storage location and different properties of storage devices. The application provides the data to store and some information about the application's goals for storing the data, and lets the operating system route the data to the right place based on the data's characteristics. The operating system may choose to store data anywhere from L2 cache to a cloud-based storage service and anything in between, based on information about the data's persistence requirements, expected usage, access frequency, security needs, and so forth. The system lets applications and users focus on expressing their goals and needs for the data, and lets the operating system manage the hardware.",8983911
8996932,2015-03-31,21,B2,"Embodiments are directed to establishing a model for testing cloud components and to preventing cascading failures in cloud components. In one scenario, a computer system models identified cloud components (including cloud hardware components and/or cloud software components) as health entities. Each health entity is configured to provide state information about the cloud component. The computer system establishes declarative safety conditions which declaratively describe cloud computing conditions that are to be maintained at the identified cloud components. The computer system then tests against the declarative safety conditions to determine which cloud components are or are becoming problematic. Upon determining that an error has occurred, the computer system notifies users of the error and the component at which the error occurred. Guarded interfaces are established to ensure that actions taken to fix the error do not cause further failures.",8996932
8997107,2015-03-31,42,B2,"An elastic scaling cloud-hosted batch application system and method that performs automated elastic scaling of the number of compute instances used to process batch applications in a cloud computing environment. The system and method use automated elastic scaling to minimize job completion time and monetary cost of resources. Embodiments of the system and method use a workload-driven approach to estimate a work volume to be performed. This is based on task arrivals and job execution times. Given the work volume estimate, an adaptive controller dynamically adapts the number of compute instances to minimize the cost and completion time. Embodiments of the system and method also mitigate startup delays by computing a work volume in the near future and gradually starting up additional compute instances before they are needed. Embodiments of the system and method also ensure fairness among batch applications and concurrently executing jobs.",8997107
8997196,2015-03-31,27,B2,"Systems, methods and apparatus for accessing at least one resource hosted by at least one server of a cloud service provider. In some embodiments, a client computer sends authentication information associated with a user of the client computer and a statement of health regarding the client computer to an access control gateway deployed in an enterprise's managed network. The access control gateway authenticates the user and determines whether the user is authorized to access the at least one resource hosted in the cloud. If the user authentication and authorization succeeds, the access control gateway requests a security token from a security token service trusted by an access control component in the cloud and forwards the security token to the client computer. The client computer sends the security token to the access component in the cloud to access the at least one resource from the at least one server.",8997196
9003477,2015-04-07,4,B2,"A hosted resource management system is described herein that provides systems and methods whereby a cloud-based tenant can define a logical model that allows the tenant to work with cloud-based entities in a manner that aligns with the tenant's own purpose and thinking. The system then reflects this model in a set of management tools and access paradigms that are provided to the cloud-based tenant. Each division in the logical model is termed a scope, and can include various types of cloud-based entities. Each of these scopes may contain similar cloud-based entity types, but because of the organization provided by scopes the tenant can manage these cloud-based entities according to the view and model that the tenant defines. Thus, the hosted resource management system provides a way of managing cloud-based entities that is intuitive for cloud-based tenants and facilities easier management of large-scale applications with many cloud-based entities.",9003477
9009615,2015-04-14,16,B2,"A user interface display provides access to an analysis portal that receives customized code for a business data system. The code is provided through the user interface display to a cloud based service that analyzes the customized code based on the types of services requested by the user. A report is generated, based on the analysis, and displayed to the user.",9009615
9009726,2015-04-14,24,B2,"A “Concurrent Sharing Model” provides a programming model based on revisions and isolation types for concurrent revisions of states, data, or variables shared between two or more concurrent tasks or programs. This model enables revisions of shared states, data, or variables to maintain determinacy despite nondeterministic scheduling between concurrent tasks or programs. More specifically, the Concurrent Sharing Model provides various techniques wherein shared states, data, or variables are conceptually replicated on forks, and only copied or written if necessary, then deterministically merged on joins such that concurrent tasks or programs can work with independent local copies of the shared states, data, or variables while ensuring automated conflict resolution. This model is applicable to a wide variety of system architectures, including applications that execute tasks on a CPU or GPU, applications that run, in full or in part, on multi-core processors without full shared-memory guarantees, and applications that run within cloud computing environments.",9009726
9026098,2015-05-05,9,B2,"A method and system allows a mobile device user to receive status information concerning the mobile device even when the user is not in possession of the mobile device. The user can access the status information via a cloud-based service, thereby allowing the user to be made aware of the device's status from any location at which the user has network (e.g., Internet) access. The system includes the service, which securely receives and stores the status information from the mobile device and a client, which is used to access the service in order to receive the status information to display to the user, and which can send commands to the mobile device.",9026098
9026658,2015-05-05,13,B2,"The subject disclosure is directed towards automatically managing job request execution for a computer cluster using cloud computing resource allocations. When client computers to the computer cluster submit job requests to a head node, a set of job requests is selected based on a policy. The head node converts the set of job requests into a set of resource allocation requests based on job specification data. After communicating the resource allocation requests to a cloud computing provider, the head node is granted access and control over one or more worker nodes as a response. The worker nodes proceed to execute the set of job requests and update the head node with status information once the execution finishes.",9026658
9026814,2015-05-05,21,B2,"A power context system is described herein that makes decisions related to device power usage based on factors such as location, load, available alternatives, cost of power, and cost of bandwidth. The system incorporates contextual knowledge about the situation in which a device is being used. Using the context of location, devices can make smarter decisions about deciding which processes to migrate to the cloud, load balancing between applications, and switching to power saving modes depending on how far the user is from a power source. As the cloud becomes more frequently used, load balancing by utilizing distributed data warehouses to move processes to different locations in the world depending on factors such as accessibility, locales, and cost of electricity are considerations for power management. Power management of mobile devices is becoming important as integration with the cloud yields expectations of devices being able to reliably access and persist data.",9026814
9026994,2015-05-05,26,B2,"Systems, methods, and computer-readable media having computer-executable instructions embodied thereon that generate notifications that are delivered to translators who provide updates or translations that are included in localization resources for software applications are provided. Resources are stored on a cloud device in a development file or a public database. The public database stores the content that is selected for modification or translation. The languages may be selected by one or more application developers or may be based on a geographic region associated with the content or the language currently associated with the content. One or more translators are identified based on matches to translator profiles included in the public database. The matching translators receive notifications, which inform the translator that updates or translations are requested. In turn, the translators may access the public database and provide the updates or translations.",9026994
9032303,2015-05-12,9,B2,"Systems, methods, and computer program products for facilitating web-based interaction with a local system are disclosed. Such systems, methods, and computer program products provide an approach that allows a web client within in a web browser environment to access local hardware and local software—via a web server contained in the local system—in a local computer system. In response to a user input, the web client directs local hardware and local software to perform actions (e.g., writing files and taking pictures). Information related to such actions is returned to the web client via the local web server. The local computer system may be remotely located from the web client and such returned information may be stored and/or executed at a remote site (e.g., cloud database). Security layers may be provided to authenticate the user as well as user permissions for accessing the local computer system.",9032303
9043186,2015-05-26,9,B2,"Various technologies described herein pertain to computing surface normals for points in a point cloud. The point cloud is representative of a measured surface of a physical object. A point in the point cloud can be set as a point of origin, and points in the point cloud can be modeled as electrostatic point charges. Moreover, a point of least electrostatic potential on a sphere centered at the point of origin can be computed as a function of the electrostatic point charges. Further, unit vector with a direction from the point of origin to the point of least electrostatic potential on the sphere can be assigned as a normal for the point of origin.",9043186
9053348,2015-06-09,18,B2,"A secure cloud computing platform. The platform has a pool of secure computing devices such that each can be allocated to a customer as with other computing resources. Each secure computing device may be configured by a customer with a key and software for performing operations on sensitive data. The customer may submit data, defining a job for execution on the platform, as cyphertext. The secure computing device may perform operations on that data, which may include decrypting the data with the key and then executing the software to perform an operation on cleartext data. This operation, and the data on which it is performed, though in cleartext, may be inaccessible to the operator of the cloud computing platform. The device may operate according to a secure protocol under which the software is validated before loading and the device is provisioned with a key shared with the customer.",9053348
9059856,2015-06-16,10,B2,"Embodiments are directed to the providing a cloud keying and signing service and to securing software package distribution on the cloud. In an embodiment, a computer system instantiates a signing service configured to sign software packages. The computer system receives a signing request from a computer user requesting that a selected software package be signed. The signing request includes a computed hash of the selected software package. The computer system generates a private and public key pair on behalf of the computer user and stores the private key of the generated key pair in a secure data store.",9059856
9069620,2015-06-30,20,B2,A cloud manager controls the deployment and management of machines for an online service. A build system creates deployment-ready virtual hard disks (VHDs) that are installed on machines that are spread across one or more networks in farms that each may include different configurations. The build system is configured to build VHDs of differing configurations that depend on a role of the virtual machine (VM) for which the VHD will be used. The build system uses the VHDs to create virtual machines (VMs) in both test and production environments for the online service. The cloud manager system automatically provisions machines with the created virtual hard disks (VHDs). Identical VHDs can be installed directly on the machines that have already been tested.,9069620
9071535,2015-06-30,11,B2,"Methods, systems, and computer storage media for detecting anomalies within nodes of a data center are provided. A self-learning system is employed to proactively and automatically detect the anomalies using one or more locally hosted agents for pulling information that describes states of a plurality of nodes (e.g., computing devices of a cloud-computing infrastructure), respectively, and using at least one early-warning mechanism for implementing a comparison technique. The comparison technique involves individually comparing the state information of the plurality of the nodes against one another and, based upon the comparison, grouping one or more nodes of the plurality of nodes into clusters that exhibit substantially similar state information. Upon identifying the clusters that include low number of nodes grouped therein, with respect to a remainder of the clusters of nodes, the members of the identified clusters are designated as anomalous machines.",9071535
9077525,2015-07-07,11,B2,"An obfuscated policy data encryption system and method for re-encrypting data to maintain the confidentiality and integrity of data about a user when the data is stored in a public cloud computing environment. The system and method allow a user to specify in a data-sharing policy who can obtain the data and how much of the data is available to them. This policy is obfuscated such that it is unintelligible to the cloud operator and others processing and storing the data. In some embodiments, a patient species with whom his health care data should be shared with and the encrypted health care data is stored in the cloud in an electronic medical records system. The obfuscated policy allows the electronic medial records system to dispense the health care data of the patient to those requesting the data without disclosing the details of the policy itself.",9077525
9077539,2015-07-07,22,B2,"The disclosed architecture employs techniques that make secure multi-party computation (MPC) practical and scalable. In support of utilizing cloud computing, for example, for evaluating functionality, a third party server can be employed which does not have any input to the computation and does not receive any output from the computation, yet has a vast amount of computational resources. Accordingly, the secure MPC architecture can outsource as much as possible of the computation and communications burden of the parties without the server(s) learning any information about the party inputs.",9077539
9081619,2015-07-14,14,B2,"A method of provisioning a Web hosting resource includes providing a cloud service. A request for a Web hosting resource is received by the cloud service, wherein the request is provided by a client. The cloud service identifies a Web host based on the received request for a Web hosting resource. The cloud service sends a request to the Web host to provision a first Web hosting resource for use by the client.",9081619
9083619,2015-07-14,35,B2,"Methods, systems, and computer-readable media for automatically validating and configuring an inventory of hardware to interact seamlessly with a cloud-computing fabric of a data center are provided. Initially, devices internal to the hardware inventory are located by sending and receiving messages via out-of-band communication channels and network communication channels, respectively. Locating the internal devices involves establishing communication from a user device to the hardware inventory and selecting at least one of the internal devices for conducting a discovery process thereon. The discovery process involves receiving a first network identifier via the out-of-band communication channel and receiving a second network identifier via the network communication channel. When the first and second network identifiers match, the interconnection of the selected device is validated. Otherwise, one or more remedial measures are initiated with respect to the selected device. Validation involves conducting a server boot within the MOS and executing validation and configuration tools.",9083619
9088577,2015-07-21,4,B2,"Techniques for configuring and operating a multimedia aware cloud, particularly configured for mobile device computing, are described herein. In some instances, clusters of servers are organized for general computing, graphic computing and data storage. A load balancing server may be configured to: identify multimedia types currently being processed within the multimedia edge cloud; determine desired quality of service levels for each identified multimedia type; evaluate individual abilities of devices communicating with the multimedia edge cloud; and assess bandwidth of each network over which the multimedia edge cloud communicates with a mobile device. With that information, multimedia data may be adapted accordingly, to result in an acceptable quality of service level when delivered to a specific mobile device. In one example of the techniques, graphic computing server clusters may be configured to process workload using a configuration that includes elements of both parallel and serial computing.",9088577
9092209,2015-07-28,12,B2,"A framework that enables a local computing cloud infrastructure for rural (and third world) populations with the ability to connect into the global cloud. The framework include is a low cost architecture of long distance, wireless based, renewable energy powered, and small datacenter (DC) (referred to as a pico-DC) nodes that can fully operate off-grid, both power-wise and Internet connection-wise at a very low cost. Additionally, the framework includes power management and storage techniques that effectively enable low power and efficient power use. Thus, systems are self-sufficient, low maintenance and weather proof with no need for power or data connections.",9092209
9092984,2015-07-28,8,B2,"Described is a technology by which driver safety technology such as collision detection is implemented via mobile device (e.g., smartphone) sensors and a cloud service that processes data received from vehicles associated with the devices. Trajectory-related data is received at the cloud service and used to predict collisions between vehicles and/or lane departures of vehicles. To operate the service in real-time with low latency, also described is dividing driving areas into grids, e.g., based upon traffic density, having parallel grid servers each responsible for only vehicles in or approaching its own grid, and other parallel/distributed mechanisms of the cloud service.",9092984
9098339,2015-08-04,18,B2,"Embodiments related to predictive cloud-based presimulation are described herein. For example, one disclose embodiment provides, on a computing device, a method comprising receiving an input of state from a client device and executing a server simulation of a digital experience based on the input of state, the server simulation configured to run concurrently with, and ahead of, a client simulation on the client device. The method further comprises generating a plurality of simulation results from the server simulation, selecting one or more simulation results from the plurality of simulation results based on a likelihood the client simulation will utilize a particular simulation result, and sending the one or more simulation results to the client device.",9098339
9098344,2015-08-04,14,B2,The description relates to cloud-edge topologies. Some aspects relate to cloud-edge applications and resource usage in various cloud-edge topologies. Another aspect of the present cloud-edge topologies can relate to the specification of cloud-edge applications using a temporal language. A further aspect can involve an architecture that runs data stream management systems (DSMSs) engines on the cloud and cloud-edge computers to run query parts.,9098344
9106659,2015-08-11,11,B2,"The present invention extends to methods, systems, and computer program products for decoupling cluster data from cloud deployment. The decoupling facilitates taking down and reattaching a cluster to persisted data as needed. Other embodiments of the invention include resuming a cluster's execution on a different topology and/or different system states based on a persisted data set.",9106659
9110163,2015-08-18,15,B2,"Within machine vision, object movement is often estimated by applying image evaluation techniques to visible light images, utilizing techniques such as perspective and parallax. However, the precision of such techniques may be limited due to visual distortions in the images, such as glare and shadows. Instead, lidar data may be available (e.g., for object avoidance in automated navigation), and may serve as a high-precision data source for such determinations. Respective lidar points of a lidar point cloud may be mapped to voxels of a three-dimensional voxel space, and voxel clusters may be identified as objects. The movement of the lidar points may be classified over time, and the respective objects may be classified as moving or stationary based on the classification of the lidar points associated with the object. This classification may yield precise results, because voxels in three-dimensional voxel space present clearly differentiable statuses when evaluated over time.",9110163
9110724,2015-08-18,11,B2,"A cloud statistics server generates statistics for a cloud service based on an identified data item and an identified operation. The cloud service may include various computing nodes and storage nodes. The cloud statistics may include expected completion times for the identified operation and the identified data item with respect to each of the computing nodes. A computing node may be selected to execute the identified operation based on the expected completion times. The generated statistics may be generated by the cloud statistics server using a network topology associated with the data item that is based on the latencies or expected transfer times between the various storage nodes and computing nodes, and a replication strategy used by the cloud service. The topology may be implemented as a directed graph with edge weights corresponding to expected transfer times between each node.",9110724
9110844,2015-08-18,10,B2,"When a stateful service is implemented in a cloud architecture, a state service system receives a user interface definition for a service and generates a client proxy and optionally a storage proxy. The stateful service implements service instances to service requests from clients. The client proxy receives and logs messages from a client in a state service component and a storage proxy logs interactions with a data store. When a service instance serving existing clients is changed, the proxies replay the logged information to the new service instance to recover or maintain state for individual client sessions.",9110844
9110892,2015-08-18,24,B2,"Aspects of the subject matter described herein relate to synchronizing data. In aspects, properties are synchronized from an organization property store to a cloud property store and/or vice versa. The list of properties to synchronize may change based on the cloud services to which the organization subscribes, changes to the cloud services, or for other reasons. Furthermore, the list of properties to synchronize may be limited to certain objects of the organization which may also change over time.",9110892
9125022,2015-09-01,26,B2,"Embodiments infer position information using captured content items. A computing device such as a mobile computing or a cloud service analyzes one or more content items to generate information describing the content items. For content items that include photographs, for example, the photographs are processed to identify faces, objects, places, text, etc. The generated information is compared to reference content items (e.g., image comparison), user data (e.g., calendar data, contact information, etc.), and/or public data (e.g., address information, event information, etc.) to identify at least one match. Location information associated with the matched reference content items, user data, and/or public data is obtained. A position is determined for the content items based on the location information obtained from the matched reference content item, user data, and/or public data. In some embodiments, the obtained location information is used to refine a position determined using a beacon-based positioning service.",9125022
9128768,2015-09-08,75,B2,"A cloud based service provides Master Data Management (MDM) services to clients. A client may create/modify MDM workflows that are hosted by the cloud based service to assist in meeting their needs. An interface is provided at points within the workflow that is hosted by the cloud based service. The cloud based service utilizes a flexible pipeline that executes predefined configurable blocks. A user can create or customize an existing workflow based on the predefined set of blocks (e.g. execution blocks, conditional blocks, loop blocks). The blocks are configured to receive, process and send information relating to the master data according to a predefined schema. Clients may publish master data changes and/or subscribe to master data changes made by other clients.",9128768
9128780,2015-09-08,7,B2,"The present invention extends to methods, systems, and computer program products for validating license servers in virtualized environments. Embodiments of the invention leverage a set of features acquired or built in cloud computing environments to facilitate a software based solution providing uniqueness and immutability of a license server hosted in the cloud. Avoiding features of the underlying hardware systems results a much more flexible and reliable platform for hosting license servers. Features of a cloud storage service can be used to create a unique ID for a license server. Security and reliability of license servers hosted in a pubic cloud environment is also improved.",9128780
9137111,2015-09-15,39,B2,"Methods, systems, and computer-readable media for automatically validating and configuring an inventory of hardware to interact seamlessly with a cloud-computing fabric of a data center are provided. Initially, devices internal to the hardware inventory are located by sending and receiving messages via out-of-band communication channels and network communication channels, respectively. Locating the internal devices involves establishing communication from a user device to the hardware inventory and selecting at least one of the internal devices for conducting a discovery process thereon. The discovery process involves receiving a first network identifier via the out-of-band communication channel and receiving a second network identifier via the network communication channel. When the first and second network identifiers match, the interconnection of the selected device is validated. Otherwise, one or more remedial measures are initiated with respect to the selected device. Validation involves conducting a server boot within the MOS and executing validation and configuration tools.",9137111
9141487,2015-09-22,13,B2,"Embodiments described herein are directed to migrating affected services away from a faulted cloud node and to handling faults during an upgrade. In one scenario, a computer system determines that virtual machines running on a first cloud node are in a faulted state. The computer system determines which cloud resources on the first cloud node were allocated to the faulted virtual machine, allocates the determined cloud resources of the first cloud node to a second, different cloud node and re-instantiates the faulted virtual machine on the second, different cloud node using the allocated cloud resources.",9141487
9141679,2015-09-22,9,B2,"Cloud data storage systems, methods, and techniques partition system data symbols into predefined-sized groups and then encode each group to form corresponding parity symbols, encode all data symbols into global redundant symbols, and store each symbol (data, parity, and redundant) in different failure domains in a manner that ensures independence of failures. In several implementations, the resultant cloud-encoded data features both data locality and ability to recover up to a predefined threshold tolerance of simultaneous erasures (unavailable data symbols) without any information loss. In addition, certain implementations also feature the placement of cloud-encoded data in domains (nodes or node groups) to provide similar locality and redundancy features simultaneous with the recovery of an entire domain of data that is unavailable due to software or hardware upgrades or failures.",9141679
9141779,2015-09-22,34,B2,"A multi-party security protocol that incorporates biometric-based authentication and withstands attacks against any single party (e.g., mobile phone, cloud, or the user). The protocol involves the function split between mobile and cloud and the mechanisms to chain-hold the secrets. A key generation mechanisms binds secrets to a specific device or URL (uniform resource locator) by adding salt to a master credential. An inline CAPTCHA (Completely Automated Public Turing test to tell Computers and Humans Apart) handling mechanism uses the same sensor modality as the authentication process, which not only improves the usability, but also facilitates the authentication process. This architecture further enhances existing overall system security (e.g., handling untrusted or compromised cloud service, phone being lost, impersonation, etc.) and also improves the usability by automatically handling the CAPTCHA.",9141779
9143568,2015-09-22,9,B2,A cloud-based storage service hosts content information that may be accessed by client machines in a peer-to-peer network. The content information is a compact representation of the content which is stored outside of the cloud-based storage service. The cloud-based storage service generates the content information and a content information hash. The content information hash is used to validate the content information when the content information is downloaded to the peer-to-peer network. The cloud-based storage service also generates metadata that describes the content information so that a client machine in the peer-to-peer network may access the content information from the cloud-based storage service.,9143568
9147195,2015-09-29,20,B2,"A data custodian and curation system may store data from a data supplier in encrypted form and may allow users to consume the data when the consumers obtain access to the data through an agreement. The curation system may manage access to the data, even allowing a consumer to use the data as if it were their own, but may track each usage of the data to implement a payment scheme or various usage restrictions. The curation system may encrypt downstream uses of the data and operate as a digital rights management system for the data. The custodian and curation system may operate as a cloud service that may contain encrypted data from many data providers but where the data providers may individually control access to their data in a managed system at any granular level.",9147195
9153195,2015-10-06,72,B2,"The technology provides contextual personal information by a mixed reality display device system being worn by a user. A user inputs person selection criteria, and the display system sends a request for data identifying at least one person in a location of the user who satisfy the person selection criteria to a cloud based application with access to user profile data for multiple users. Upon receiving data identifying the at least one person, the display system outputs data identifying the person if he or she is within the field of view. An identifier and a position indicator of the person in the location is output if not. Directional sensors on the display device may also be used for determining a position of the person. Cloud based executing software can identify and track the positions of people based on image and non-image data from display devices in the location.",9153195
9158563,2015-10-13,18,B2,"Techniques are described herein that are capable of dynamically installing plugin(s) for application(s). An agent plugin is caused to run in a deployment of a specified application (e.g., across multiple machines in a cloud environment or “on premises”). The specified application is packaged to include the agent plugin. The agent plugin is used to install designated plugin(s) dynamically based on configuration information regarding the specified application. The configuration information indicates that the designated plugin(s) are to be installed in response to the specified application being deployed.",9158563
9161200,2015-10-13,82,B2,"Embodiments manage data transfers using a plurality of data usage plans available to a computing device. Each of the data usage plans has data usage statistics representing an amount of network data consumed under the data usage plan. For each data transfer request received from applications executing on the computing device, a service executing on the computing device or in a cloud defines a network data transfer configuration for performing the data transfer request. The network data transfer configuration is defined based on, for example, the data usage plans, the data usage statistics, and the data transfer request to reduce transfer costs and/or provide a particular quality of service (QoS).",9161200
9164997,2015-10-20,33,B2,"Recognizing cloud content techniques are described herein. A designated storage location for cloud content corresponding to a service is registered locally at a device. Files stored in association with the registered storage location may be recognized as cloud content of the corresponding service. The recognized cloud content may be handled in various ways to customize the user experience and tailor interaction with cloud content. For example, icons or other visual identifiers may be used within device, operating system and/or application user interfaces to represent an association of files with a particular service based on recognition of the files as cloud content. Additionally, a registered storage location for a device may be employed to obtain relative paths to files that may be used to roam file activity lists between different devices.",9164997
9165154,2015-10-20,34,B2,"A digital escrow pattern is provided for network data services including searchable encryption techniques for data stored in a cloud, distributing trust across multiple entities to avoid a single point of data compromise. In one embodiment, a key generator, a cryptographic technology provider and a cloud services provider are each provided as separate entities, enabling a publisher of data to publish data confidentially (encrypted) to a cloud services provider, and then expose the encrypted data selectively to subscribers requesting that data based on subscriber identity information encoded in key information generated in response to the subscriber requests, e.g., a role of the subscriber.",9165154
9176773,2015-11-03,16,B2,"Tools and techniques for migrating applications to compute clouds are described herein. A tool may be used to migrate any arbitrary application to a specific implementation of a compute cloud. The tool may use a library of migration rules, apply the rules to a selected application, and in the process generate migration output. The migration output may be advisory information, revised code, patches, or the like. There may be different sets of rules for different cloud compute platforms, allowing the application to be migrated to different clouds. The rules may describe a wide range of application features and corresponding corrective actions for migrating the application. Rules may specify semantic behavior of the application, code or calls, storage, database instances, interactions with databases, operating systems hosting the application, and others.",9176773
9185179,2015-11-10,23,B2,"Embodiments enable recovery of push notification channels via session information associated with user identifiers. A proxy service creates session information describing push notification channels (e.g., subscriptions) for a user and associates the session information with a user identifier. The session information is stored in a cloud service or other storage area separate from the proxy service. After failure of a user computing device or the proxy service, the session information is obtained via the user identifiers and the push notification channels are re-created with the session information. In some embodiments, the proxy service enables delivery of the same notification to multiple computing devices associated with the user identifier.",9185179
9189285,2015-11-17,8,B2,Embodiments provide an abstraction on top of virtual machine allocation APIs to expose scalable services. The services are higher level components that expose a particular set of functionalities. A deployment manager handles matching and managing virtual machine allocations in order to meet the customer demands for the managed services. A deployment service exposes a “service” as a unit of resource allocation in a distributed computing environment or cloud computing service. Client components interact with the deployment service to request new service instances to meet customer demand.,9189285
9189533,2015-11-17,17,B2,"Embodiments described herein may involve enabling applications to cooperate with a system-level sync framework. The sync framework may provide system synchronization of files between user devices and a cloud storage service. Arbitrary applications on a user computing device can communicate with the sync framework to temporarily suspend synchronization of a specified file by the sync framework. The application can register functions with the sync framework that the sync framework can invoke in relation to suspending synchronization, continuing to provide system-level access to the file for arbitrary applications, and resuming synchronization.",9189533
9191643,2015-11-17,30,B2,"The subject disclosure is directed towards mixing RGB data with infrared data so as to provide depth-related data in regions where infrared data are sparse. Infrared data, such as corresponding to point cloud data, are processed to determine sparse regions therein. For any such sparse regions, RGB data corresponding to a counterpart region in the RGB data are added to a data structure. The data structure, which may include or be concatenated to the IR data, may be used for depth-related data, e.g., with a point cloud.",9191643
9195968,2015-11-24,27,B2,"A cloud-based broker service may be provided for computing devices in a distributed computing environment. The broker service may aggregate user accounts and user account credentials utilized for accessing online services by the computing devices. The broker service may monitor a context of the computing devices associated with the user accounts. The broker service may then utilize the context, data associated with the user accounts and data associated with the user account credentials to automate tasks and/or provide alerts associated with the data.",9195968
9197625,2015-11-24,78,B2,"Device information for each of multiple devices associated with a user account is maintained by a cloud service. The device information can include credential information allowing the device to be accessed by other ones of the multiple devices, remote access information indicating how the device can be accessed by other ones of the multiple devices on other networks, and property information including settings and/or device drivers for the device. The device information for each of the multiple devices is made available to other ones of the multiple devices, and can be used by the multiple devices to access one another and provide a consistent user experience across the multiple devices.",9197625
9205335,2015-12-08,20,B2,"Devices including gaming consoles, personal computers, tablets, smartphones, and the like may be configured with a client for capturing signals which are representative of user interactions with applications such as games. The captured signals are sent to a cloud-based service for archival storage. The service can subsequently replay the archived captured signals and compare them against known rules to determine if an achievement obtained by a user during interaction with the application was legitimately obtained in compliance with the rules or obtained improperly, for example by cheating or exploiting a bug in the application to falsely trigger the achievement. If the achievement is invalid, then the service can retroactively revoke the achievement. Alternatively, the service can replay the captured signals and detect instances in which an achievement was validly achieved but not properly acknowledged. The achievement can then be awarded or unlocked for the user retroactively.",9205335
9208571,2015-12-08,198,B2,"Digitizing objects in a picture is discussed herein. A user presents the object to a camera, which captures the image comprising color and depth data for the front and back of the object. For both front and back images, the closest point to the camera is determined by analyzing the depth data. From the closest points, edges of the object are found by noting large differences in depth data. The depth data is also used to construct point cloud constructions of the front and back of the object. Various techniques are applied to extrapolate edges, remove seams, extend color intelligently, filter noise, apply skeletal structure to the object, and optimize the digitization further. Eventually, a digital representation is presented to the user and potentially used in different applications (e.g., games, Web, etc.).",9208571
9210162,2015-12-08,13,B2,"In an environment that includes a host computing system that executes virtual machines, and a secure cloud computing channel that communicatively couples the host to a client computing system that is assigned to a particular one of the virtual machines, the particular virtual machine generates a certificate, install the certificate on the itself, and returns a certificate representation to the client. This may occur when the virtual machine is provisioned. During a subsequent connection request from the client to the virtual machine, the virtual machine returns the certificate to the client. The client compares the certificate representation that was returned during provisioning with the certificate returned during the subsequent connection, and if there is a match, then the virtual machine is authenticated to the client. Thus, in this case, the virtual machine authenticates without the client having to generate, install, and manage security for a certificate.",9210162
9211643,2015-12-15,9,B1,"Various technologies described herein pertain to automatic in-situ calibration and registration of a depth sensor and a robotic arm, where the depth sensor and the robotic arm operate in a workspace. The robotic arm can include an end effector. A non-parametric technique for registration between the depth sensor and the robotic arm can be implemented. The registration technique can utilize a sparse sampling of the workspace (e.g., collected during calibration or recalibration). A point cloud can be formed over calibration points and interpolation can be performed within the point cloud to map coordinates in a sensor coordinate frame to coordinates in an arm coordinate frame. Such technique can automatically incorporate intrinsic sensor parameters into transformations between the depth sensor and the robotic arm. Accordingly, an explicit model of intrinsics or biases of the depth sensor need not be utilized.",9211643
9213867,2015-12-15,21,B2,"A cloud computing service to securely process queries on a database. A security device and method of operation are also disclosed. The security device may be provisioned with a private key of a subscriber to the cloud service and may have processing hardware that uses that key, sequestering the key and encryption processing in hardware that others, including operating personnel of the cloud service, cannot readily access. Processing within the security device may decrypt queries received from the subscriber and may encrypt responses for communication over a public network. The device may perform functions on clear text, thereby limiting the amount of clear text data processed on the cloud platform, while limiting bandwidth consumed in communicating with the subscriber. Such processing may include formatting data, including arguments in a query, in a security protocol used by the cloud platform.",9213867
9215154,2015-12-15,77,B2,Technologies are described herein for providing a monitoring service in a cloud-based computing environment. A request is received from a user to subscribe to the monitoring service. The monitor workflow may correspond to the monitoring service. A first call to a finder application is executed over a communications network to retrieve data points according to the monitor workflow. A second call to an analyzer application is executed over the communications network to identify a relevant data point in the data points. A third call to a notifier application is executed over the communications network to notify the user of the relevant data point.,9215154
9218740,2015-12-22,1,B2,"Described is a technology by which driver safety technology such as collision detection is implemented via mobile device (e.g., smartphone) sensors and a cloud service that processes data received from vehicles associated with the devices. Trajectory-related data is received at the cloud service and used to predict collisions between vehicles and/or lane departures of vehicles. To operate the service in real-time with low latency, also described is dividing driving areas into grids, e.g., based upon traffic density, having parallel grid servers each responsible for only vehicles in or approaching its own grid, and other parallel/distributed mechanisms of the cloud service.",9218740
9219776,2015-12-22,8,B2,"A cloud service stores and aggregates content that is obtained from different content sources using different protocols. For example, the content may include electronic messages, calendar information, contacts, social network content, feed data, search results, and the like. The cloud service aggregates content for each user based on the user's configuration settings. The cloud service may perform processing on the aggregated content before it is delivered and displayed to the user on the client device. For example, one or more views may be generated and stored by the cloud service before the view is requested from the client. Changes made to the aggregated content on the client may be synchronized with the content source. Searches may be made across all or a portion of the different content sources that are aggregated for a user.",9219776
9223632,2015-12-29,47,B2,"A cloud management system is described herein that provides the ability for an application to span two or more clouds while allowing operation, management, and troubleshooting of the distributed application as a single application. The system provides infrastructure that communicates across datacenters for execution and for centralizing knowledge of instances of an application that are running at different locations. The infrastructure provided by the system monitors both the application and connections between the clouds, with intelligence to know if issues are within the application or because of the connection between the clouds. The system coordinates management functions across multiple cloud platforms/locations. Thus, the cloud management system creates a single monitoring and troubleshooting interface and knowledge and execution fabric across multiple clouds so that applications spread across multiple clouds can be monitored, managed, and debugged more easily.",9223632
9229771,2016-01-05,90,B2,"Embodiments are directed to bursting application portions to different types of cloud computing systems, managing distributed applications distributed over a plurality of different cloud types and to creating a cloud bursting target in a specified cloud. In one scenario, a computer system provides an indication of available cloud computing systems including at least a first and a second cloud computing system of different types. The computer system receives a selection indicating that a portion of a software application currently hosted on the first cloud computing system of the first type is to be bursted onto the second cloud computing system. The computer system then, in response to the selection, bursts the software application portion from the first cloud computing system of the first type to the second cloud computing system of the second, different type.",9229771
9229839,2016-01-05,12,B2,"Embodiments are directed to implementing rate controls to limit faults detected by timeout and to learning and adjusting an optimal timeout value. In one scenario, a computer system identifies cloud components that have the potential to fail within a time frame that is specified by a timeout value. The computer system establishes a number of components that are allowed to fail during the time frame specified by the timeout value and further determines that the number of component failures within the time frame specified by the timeout value has exceeded the established number of components that are allowed to fail. In response, the computer system increases the timeout value by a specified amount of time to ensure that fewer than or equal to the established number of components fail within the time frame specified by the timeout value.",9229839
9231878,2016-01-05,37,B2,"Cloud computing platforms having computer-readable media that perform methods to shape virtual machine communication traffic. The cloud computing platform includes virtual machines and a controller. The controller limits the traffic associated with the virtual machines to enable the virtual machines to achieve desired communication rates, especially when a network servicing the virtual machines is congested. The controller may drop communication messages associated with the virtual machines based on a drop probability evaluated for the virtual machines.",9231878
9239740,2016-01-19,17,B2,"Partitioning execution of a program between a client device and a cloud of network resources, exploits the asymmetry between the computational and storage resources of the cloud and the resources and proximity of the client access device to a user. Programs may be decomposed into work units. Those work units may be profiled to determine execution characteristics, modeled based on current state information and the profile, and a model performance metric (MPM) generated. Based on the MPM, work units may be partitioned between the client and the cloud.",9239740
9245286,2016-01-26,39,B2,"A utility computing portal supports public and private modules for application development in a cloud computing environment. The public modules support downloads, customer support and access to a development community. The private modules are accessible to users with valid login credentials or those authenticated via a related entity, such as a Live ID. The private modules may include modules for testing, analysis, and billing. The utility computing portal also supports access to application configuration, for example, allowing a manager to change the number of front end and backend physical/virtual machines available to various application roles.",9245286
9245382,2016-01-26,16,B2,"Described is a technology by which a user interacts with a surface representative of a point cloud data to correct for imperfect scan data. The surface is reconstructed based on the interaction. Real time viewing of the image is facilitated by parallel surface reconstruction. For example, the user may draw strokes to reduce topological ambiguities in poorly-sampled areas. An algorithm automatically adds new oriented sample points to the original point cloud based on the user interaction. Then a new isosurface is generated for the augmented point cloud. The user also may specify the geometry of missing areas of the surface. The user copies a set of points from another point cloud, and places the points around the target area. A new isosurface is then generated.",9245382
9247008,2016-01-26,26,B2,"A uniform approach for web service discovery is provided through common auto-discovery logic for cloud-based or enterprise-based deployments for a specific web service. Appropriate credentials may be applied employing a uniform method using an appropriate authentication scheme for on-premise, fully hosted, or partially hosted auto-discovered web services. A common interface may be implemented even if the protocols for discovery differ from service to service or between cloud-based deployment and enterprise-based deployment for the same service. Web service locations auto-discovered through different protocols may be cached for subsequent use.",9247008
9251039,2016-02-02,28,B2,"Debugging capabilities for software running in a cloud-computing environment are disclosed. A controller identifies which machines in the cloud are running instances of software to be debugged. An agent is deployed onto the machines in the cloud to facilitate communication with the developer's machine. When the developer wants to debug software on the agent's machine, the agent downloads and installs a monitor onto the machine. The agent configures the machine for remote debugging via the monitor. A security mechanism ensures that only authenticated developers can access the monitor and the remote machine for debugging. A controller automatically determines which machines can be debugged, updates a list of processes available for debugging on the machines, and identifies how to connect a developer's debugging client to the machines. The controller permits remote debugging only upon request from an authenticated developer and only for those processes that the developer is permitted to debug.",9251039
9251324,2016-02-02,16,B2,"Methods, systems, and computer program products are provided for developing application definition packages, and deploying the application definition packages at cloud services to produce real-time data analytics applications. In one implementation, a selection is received of an application definition package that defines a real-time data analytics application. The application definition package indicates an application name and includes at least one payload definition, reference data definition, and query definition. A domain name is provided for the real-time data analytics application, and a cloud service is generated that is associated with the domain name. The application definition package is applied to an application template to generate a finalized real-time data analytics package. The finalized real-time data analytics package is instantiated in the cloud service to create a network-accessible instance of the real-time data analytics application.",9251324
9253720,2016-02-02,3,B2,"One or more mobile devices and a cloud server computing device are utilized to provide Internet access to one or more client computing devices. One of the clients is designated as a Wi-Fi access point. The Wi-Fi access point implements a reverse-infrastructure Wi-Fi mode which tethers available mobile devices and other clients to the access point. The cloud server periodically computes an optimal number of the mobile devices to be used for data striping, and transmits a webpage to a requesting client by striping data associated with the webpage across the optimal number of the mobile devices.",9253720
9256733,2016-02-09,13,B2,"A client system interacts with a sandbox environment to host a web browser control within the sandbox. A webpage URL, a URL to a script file to be injected into the webpage, a name of the script method to be invoked, and the event to look for to trigger the script method sent to the sandbox environment from the client. The sandbox environment downloads the script file from the cloud using the script URL and loads a rendering engine with the specified webpage URL. The specified script file is subsequently injected into the loaded webpage at the sandbox environment. After the specified event is fired, the sandbox environment triggers the specified script method and stores the results within a results array, accessible to the client system.",9256733
9256980,2016-02-09,106,B2,"An “Oriented Disk Interpolator” provides various techniques for interpolating between points in a point cloud using RGB images (or images in other color spaces) to produce a smooth implicit surface representation that can then be digitally sampled for ray-tracing or meshing to create a high fidelity geometric proxy from the point cloud. More specifically, the Oriented Disk Interpolator uses image color-based consistency to build an implicit surface from oriented points and images of the scene by interpolating disks in 3D space relative to a point cloud of a scene or objects within the scene. The resulting implicit surface is then available for a number of uses, including, but not limited to, constructing a high fidelity geometric proxy.",9256980
9259842,2016-02-16,9,B2,"Initial interaction between a mobile robot and at least one user is described herein. The mobile robot captures several images of its surroundings, and identifies existence of a user in at least one of the several images. The robot then orients itself to face the user, and outputs an instruction to the user with regard to the orientation of the user with respect to the mobile robot. The mobile robot captures images of the face of the user responsive to detecting that the user has followed the instruction. Information captured by the robot is uploaded to a cloud-storage system, where information is included in a profile of the user and is shareable with others.",9259842
9262228,2016-02-16,6,B2,"A method that can be used in a distributed workflow system that uses loosely coupled computation of stateless nodes to bring computation tasks to the compute nodes is disclosed. The method can be employed in a computing system, such as cloud computing system, that can generate a computing task separable into work units and performed by a set of distributed and decentralized workers. In one example, the method arranges the work units into a directed acyclic graph representing execution priorities between the work units. The plurality of distributed and decentralized workers query the directed acyclic graph for work units ready for execution based upon the directed acyclic graph. In one example, the method is included in a computer readable storage medium as a software program.",9262228
9264360,2016-02-16,12,B2,"A system that includes multiple hosts, each running a plurality of virtual machines. The system may be, for example, a cloud computing environment in which there are services and a service coordination system that communicates with the hosts and with the services. The services include a middleware management service that is configured to maintain per-tenant middleware policy for each of multiple tenants. The middleware management service causes the middleware policy to be applied to network traffic by directing network traffic to a middleware enforcement mechanism. This middleware policy is per-tenant in that it depends on an identity of a tenant.",9264360
9264478,2016-02-16,39,B2,"A home cloud computing system employs a virtualization system to virtualize data of a device and adaptively transform type or format of the virtualized data for one or more other devices, thus leveraging resources of the device for the one or more other devices. Through data virtualization and adaptive transformation, devices of heterogeneous types are seamlessly connected to one another and can act as input or output devices for each other to create a home cloud network of devices.",9264478
9282093,2016-03-08,8,B2,"The subject disclosure is directed towards securely synchronizing passwords that are changed at a source location (e.g., an on-premises directory service) to a target location (e.g., a cloud directory service), so that the same credentials may be used to log into the source or target location, yet without necessarily having each domain controller handle the synchronization. The plaintext password is not revealed, instead using hash values computed therefrom to represent the password-related data. The target may receive a secondary hash of a primary hash, and thereby only receive and store a password blob. Authentication is accomplished by using the same hashing algorithms at the target service to compute a blob and compare against the synchronized blob. Also described are crypto agility and/or changing hashing algorithms without requiring a user password change.",9282093
9288102,2016-03-15,56,B2,"An environment is described in which a cloud-implemented service system controls a plurality of target devices via a plurality of respective device-agnostic pipe mechanisms. The target devices themselves may represent “dumb” devices, e.g., lacking local control logic, or providing reduced reliance on local control logic. Users may interact with the service system via applications running on any type of user devices.",9288102
9292342,2016-03-22,35,B2,"Generally in a computing environment, executing work based on time (i.e. according to a predetermined schedule) is a common need. However, in cloud based systems, scheduled work may be expensive to customers as generally customers rent system resources. Thus, having a processor dedicated to performing actions that have been pre-scheduled can be expensive. This application describes using a continuation-based runtime for scheduling time-bound and/or periodic work in a distributed (i.e. cloud) system. A system architecture and computer-implemented method are described that deploy an environment-independent action to a remote-based system (such as a cloud computing system, for example). The action is limited to using a predetermined amount of resources and is limited to simple, non-cpu intensive orchestrations of network calls. A schedule is defined for the action, and the action is then called in a processor-independent fashion (for example, by using a continuation based runtime) such that state of the action is maintained independent of the processor on which the action is being executed.",9292342
9300532,2016-03-29,19,B2,"Methods, systems, and computer-readable media for automating deployment of service applications by exposing environmental constraints in a service model are provided. In general, the methods are performed in the context of a general purpose platform configured as a server cloud to run various service applications distributed thereon. Accordingly, the general purpose platform may be flexibly configured to manage varying degrees of characteristics associated with each of the various service applications. Typically, these characteristics are provided in the service model that governs the environmental constraints under which each component program of the service application operates. As such, hosting environments are selected and adapted to satisfy the environmental constraints associated with each component program. Adapting the hosting environments includes installing parameters transformed from configuration settings of each component program via map constructs, thereby refining the hosting environment to support operation of the component program.",9300532
9304672,2016-04-05,109,B2,"Techniques for representing and publishing an interactive document useful for analyzing data. The document may be represented as a directed acyclic graph of entities interconnected by edges. The entities may be of multiple types. Yet, a broad range of interactive documents may be represented by a limited number of types of entities and the capabilities to interconnect entities of different types and to share a data schema across entities of different types. A tool may enable a user to author such documents. The tool may also facilitate publishing of the document. For publishing, the document may be converted to an executable form. Prior to such a conversion, the graph may be modified for more efficient processing. The graph may also be partitioned such that portions of the graph, when distributed across tiers of a computing system, such as a cloud-based platform, execute on computing devices that provide efficient operation.",9304672
9313188,2016-04-12,21,B2,"Embodiments are directed to provisioning private virtual machines in a public cloud and to managing private virtual machines hosted on a public cloud. In one scenario, a computer system receives authentication information for a private domain from an entity. The entity indicates that their private virtual machines are to be provisioned on a public cloud, where the entity's private domain is accessible using the authentication information. The computer system establishes a virtual network on the public cloud which is configured to host the entity's private virtual machines, where each virtual machine hosts remote applications. The computer system establishes an authenticated connection from the virtual network to the entity's private domain using the received authentication information and provides the entity's private virtual machines on the public cloud. The remote applications provided by the private virtual machines then have access to data stored within the entity's private domain using the authenticated connection.",9313188
9313252,2016-04-12,6,B2,"Various embodiments enable redundant or replica services, such as “cloud” services, to be run at geographically distributed locations. Each replica is capable of performing operations that are generally, identically performed across all replicas. In the event of an interruption at one location, services in other locations can quickly and automatically take over operations. In one or more embodiments, a Distributed Agreement Protocol is utilized to bind a CRUD-type protocol as a state machine. Binding takes place through the use of a reverse proxy that is located at each of the locations at which the service is distributed. In at least some embodiments, the Distributed Agreement Protocol is implemented as the Paxos protocol or a variant thereof, and/or the CRUD-type protocol comprises the HTTP protocol.",9313252
9317313,2016-04-19,10,B2,"A “just in time” feedback-driven strategy for provisioning storage in a cloud computing environment is described. An agent miming in a guest virtual machine can monitor the storage needs of the guest virtual machine. When a specified threshold for the guest virtual machine is reached, the host can be notified of the changing storage needs. The host can respond by re-sizing the storage device and notifying the guest virtual machine of the changed storage capacity.",9317313
9317334,2016-04-19,10,B2,"An application combines on-site and cloud-based calculations. The application selects a cloud computing broker from a list sorted by load. The broker receives computation requests from the application, sends corresponding load-balanced requests to local application service hosts and cloud proxies, receives responses, and sends the responses to the application without identifying the response source as local versus non-local. Each proxy has a logical-physical mapping of cloud-resident worker nodes. A scheduler receives session requests from applications, allocates local and cloud computing resources to a session, and tracks resource usage by session. An application previously run only on-premises can be executed partially on cloud worker nodes without modification. The proxy re-routes unfulfilled requests from a failed worker, undetected by the broker. If all workers assigned to that proxy fail, then the broker reassigns unfulfilled requests to another proxy, undetected by the application.",9317334
9317395,2016-04-19,17,B2,"Collecting usage data in a cluster computing environment. A method includes at a tracker service receiving a request from an at least partially cloud based deployment for an interval for the deployment to report usage information in usage reports. The usage information includes information defining how software in a deployment is used. In response to the request from the deployment, the method further includes, the tracker service providing an interval to the deployment. The method further includes at the tracker service, receiving usage reports from the deployment according to the provided interval.",9317395
9326103,2016-04-26,16,B2,"Techniques for indoor location-finding are described herein. Inside buildings, anomalies in the Earth's magnetic field may be caused by the buildings' structures. These anomalies tend to be location specific and temporally stable. Accordingly, a database or map may be constructed of field strength measurements, and made available to clients, either online (e.g., through cloud services) or offline. As a user carrying a portable device walks within a building, magnetic field measurements may be made. The measurements may be configured in as vectors and compared to the database. A specific location may be indicated by anomaly information seen in both the vector(s) and database. Optionally, techniques may be combined with a particle filter that may be operated step-by-step as the user moves within the building. In another option, fusion with Wi-Fi signals may be performed, such as with a two-pass bidirectional particle filtering.",9326103
9336060,2016-05-10,17,B2,"A framework and middleware services for developing, deploying and managing composite applications is disclosed. The middleware services may be deployed on-premises or in the cloud. The framework includes a rich collection of middleware services, an application model to compose services into a composite application, a high-density multi-tenant scalable container to host the composition logic, and unified lifecycle management of the composite application and its constituent services.",9336060
9336147,2016-05-10,14,B2,"In a cloud computing environment, a cache and a memory are partitioned into “colors”. The colors of the cache and the memory are allocated to virtual machines independently of one another. In order to provide cache isolation while allocating the memory and cache in different proportions, some of the colors of the memory are allocated to a virtual machine, but the virtual machine is not permitted to directly access these colors. Instead, when a request is received from the virtual machine for a memory page in one of the non-accessible colors, a hypervisor swaps the requested memory page with a memory page with a color that the virtual machine is permitted to access. The virtual machine is then permitted to access the requested memory page at the new color location.",9336147
9336184,2016-05-10,156,B2,"Techniques for representing and publishing an interactive document useful for analyzing data. The document may be represented as a directed acyclic graph of entities interconnected by edges. The entities may be of multiple types. Yet, a broad range of interactive documents may be represented by a limited number of types of entities and the capabilities to interconnect entities of different types and to share a data schema across entities of different types. A tool may enable a user to author such documents. The tool may also facilitate publishing of the document. For publishing, the document may be converted to an executable form. Prior to such a conversion, the graph may be modified for more efficient processing. The graph may also be partitioned such that portions of the graph, when distributed across tiers of a computing system, such as a cloud-based platform, execute on computing devices that provide efficient operation.",9336184
9338112,2016-05-10,27,B2,"In one embodiment, a cloud service interface 112 or a device interface 124 may filter messages in a message synchronization between a message service account and a cloud service account. A cloud service interface 112 or a device interface 124 may associate a message service account 114 on a user messaging device 110 with a cloud service account 122. The cloud service interface 112 or a device interface 124 may execute a message synchronization between the cloud service account 122 and the message service account 114. The cloud service interface 112 or a device interface 124 may apply a message filter to the message synchronization.",9338112
9342298,2016-05-17,40,B2,"In various embodiments, methods and systems for maintaining compatibility between applications, based on feature-set constraints are provided. A distributed computing system provides Platform as a service (PaaS) including a software framework in a service model of cloud computing. A known compatibility baseline is established for features of a first application and a second application. The known compatibility baseline inherently includes a baseline set of unenumerated features of the applications. It is determined that the first application is compatible with second application based on comparing an explicit enumeration of added features or removed features in a feature set of the applications. The added features or removed features are tracked after the baseline set of unenumerated features is defined. The determination whether the first application and the second application are compatible is communicated for processing the first application and/or the second application.",9342298
9342332,2016-05-17,4,B2,"Building binary packages for software products, particularly large-scale software products, is a highly computation intensive process. Thus, it is desirable to distribute the workload over a large number of computing nodes so as to have the build process complete in an optimal period of time. One environment providing compute resources that can be utilized for a highly available and dynamically scalable distributed build process is an elastic compute cloud. In such an environment, virtual machines can be instantiated and destroyed as the resource requirements of the build process dictate. This has the advantage that dedicated hardware is unneeded, and excess capacity on the hardware employed can be employed for other computation tasks when the build process is idle. Presented herein are systems, methods and computer storage media for distributing a highly available and scalable build service, suitable for use in an elastic compute environment or other distributed environment.",9342332
9361080,2016-06-07,30,B2,"A mechanism is provided for presenting a software application to a plurality of users in a cloud computing environment. For example, an application that was designed for use by a single user is provided in a cloud based platform without re-architecting the application. Using a web-based interface, multiple cloud users may launch and execute the application. The various instances of the application are provided to the cloud users as if the application were designed as a multi-user application.",9361080
9369342,2016-06-14,23,B2,"Embodiments provision captive portals on network access points (NAPs). In response to a request from a NAP owner, a cloud service associates a NAP with the NAP owner and provides a control channel for configuring the NAP. The NAP owner inputs configuration settings describing the captive portal. The cloud service processes the configuration settings to generate configuration data. The cloud service transmits the configuration data to the NAP. The NAP applies the configuration data to configure the NAP. Some embodiments configure Wi-Fi hotspots with captive portals for gated access to the Internet.",9369342
9378079,2016-06-28,9,B2,Anomalies detection in error signals of a cloud based service is provided. An application such as an analysis application identifies a machine learning algorithm that matches error signals of components of a cloud based service. A periodic pattern from the error signals is removed with the machine learning algorithm to filter the periodic pattern from an error count in the error signals. The error signals are processed with the machine learning algorithm to detect one or more anomalies with the components. The machine learning algorithm is updated while processing new data to detect new patterns.,9378079
9378389,2016-06-28,209,B2,"Techniques for sharing of items from online storage (e.g., cloud storage) are described herein. In at least some embodiments, sharing links can be configured as one-time sharing links that provide recipients with limited, one-time access to a shared item for the purpose of selecting or registering an account to use for subsequent access to the item. Recipients are able to select accounts they find most convenient for accessing a shared item without the owner/sharer of the item necessarily having contact information for those accounts or sending a link to the accounts. Selection of a one-time link initiates an authentication sequence that selectively provides an option to select a particular account. Once the one-time sharing link is redeemed, the one-time sharing link is invalidated for subsequent access to the item.",9378389
9396277,2016-07-19,46,B2,"Primary data for an application is stored at a remotely located first server such as cloud storage. A user of the application may wish to modify or add to the primary data to create supplemental data for which storage is not supported in the first server. Configurations herein include a way to store the supplemental data (e.g., edits, additions, etc.) on a second server at a second storage service provider (e.g. a corporate intranet). Different instances of the application executing on different computer devices by that same user can retrieve the primary data from the first storage service provider as well as retrieve the supplemental data from the second storage service provider.",9396277
9405556,2016-08-02,34,B2,"Systems, computer program products and computer program products for facilitating the dynamic addition and removal of operating system components on computing devices based on application or user interaction over time are disclosed. Such systems, computer program products and computer program products provide one or more API intercept layers, a rules engine and a hydrate engine that facilitates the ability to dynamically rehydrate or hydrate operating system components. In an embodiment, a minimal (or core) operating system image on a computing device is deployed. Then, required components may be dynamically added (i.e., “streamed” or “rehydrated”) from storage, a server or cloud service as required by an executing application program on the computing device. In another embodiment, a totally complete operating system image is deployed on a computing device. Then, unused components may be dynamically removed (i.e., “dehydrated”) from the computing device over time based on application or user interaction.",9405556
9411902,2016-08-09,22,B2,"A client system interacts with a sandbox environment to host a web browser control within the sandbox. A webpage URL, a URL to a script file to be injected into the webpage, a name of the script method to be invoked, and the event to look for to trigger the script method sent to the sandbox environment from the client. The sandbox environment downloads the script file from the cloud using the script URL and loads a rendering engine with the specified webpage URL. The specified script file is subsequently injected into the loaded webpage at the sandbox environment. After the specified event is fired, the sandbox environment triggers the specified script method and stores the results within a results array, accessible to the client system.",9411902
9418216,2016-08-16,17,B2,"One or more techniques and/or systems are provided for obtaining access to a cloud service. In particular, a user may log into a client device using an operating system (OS) cloud login ID. The user may access cloud services (e.g., a music streaming service, a data storage service, etc.) through applications executing on the client device using merely the OS cloud login ID without providing additional login credentials specific to the cloud services. A client side application may request a token to access a cloud service. The token may be generated by an identity provider based upon the identity provider verifying an application ID identifying the application, a cloud service ID identifying the cloud service and/or OS cloud credentials. In this way, the application may present the token to a cloud service provider for verification to gain access to the cloud service hosted by the cloud service provider.",9418216
9419914,2016-08-16,14,B2,"The present invention extends to methods, systems, and computer program products for using templates to configure cloud resources. Embodiments of the invention include encapsulating cloud configuration information in an importable/exportable node template. Node templates can also be used to bind groups of nodes to different cloud subscriptions and cloud service accounts. Accordingly, managing the configuration of cloud based resources can be facilitated through an interface at a (e.g., high performance) computing component. Templates can also specify a schedule for starting/stopping instance running within a resource cloud.",9419914
9424436,2016-08-23,21,B2,"The enforcement of operation restriction on a file system entity over a network. The file system entity exists on a server (which could be a single machine, a cluster of servers, or a cloud computing environment). The server facilitates setting up of a session over a network with a client. As part of this facilitation, the server receives from the client a locale of the client. Upon subsequent receipt from the client of a request to perform an operation on the file system entity, the client consults supplemental data to determine whether the requested operation is permitted on the file system entity. The supplemental data may comprise at least one of the locality information or operation expiry data.",9424436
9426031,2016-08-23,10,B2,Personalization data such as settings and/or state is migrated across devices including mobile phones. Device personalizations are pushed to a cloud service or other mechanism for backup and subsequent transmission to other devices. The personalization data can later be employed to configure one or more other devices in the same manner as a first device.,9426031
9436492,2016-09-06,18,B2,"The provisioning of a virtual machine when booted from virtual storage. During virtual machine boot from an image, the virtual machine detects storage media. The virtual machine acquires a provisioning agent and provisioning data from the detected storage media. The virtual machine uses the provisioning data to provision itself, and executes the provisioning agent. The provisioning agent may monitor the progress of the provisioning and/or report a status of the provisioning. The virtual machine may operate in a cloud computing environment, the status of the provisioning agent being returned to the user through the cloud environment. The user need not generate the provisioning data in a format readable by the virtual machine. Instead, perhaps some naturally entered user input is used to automatically generate the properly formatted provisioning data using perhaps a service in the cloud.",9436492
9436502,2016-09-06,30,B2,"An “Eventually Consistent Sharing Model” provides various techniques for using “revision diagrams” to determine both arbitration and visibility of changes or updates to shared data (e.g., data, databases, lists, etc.) without requiring a causally consistent partial order for visibility, and without requiring change or update timestamps for arbitration. In particular, the Eventually Consistent Sharing Model provides fork-join automata based on revision diagrams to track the forking and joining of data versions, thereby tracking updates made to replicas of that data by one or more sources. “Cloud types” are used to define a structure of the shared data that enables fully automatic conflict resolution when updating the shared data. These concepts enable mobile devices (or other computing devices that may periodically go “offline”) to share structured data in cloud-based environments in a manner that provides local data replicas for offline operation while guaranteeing eventually consistent convergence of the data replicas.",9436502
9436553,2016-09-06,12,B2,Usability of a cloud based service is recovered from a system failure. A customer transaction associated with the customer experience is executed to simulate the customer experience in the cloud based service. A failure associated with a subsystem the cloud based service is detected from an output of the customer transaction. A recovery action is determined to be associated with the failure. The recovery action is executed on the subsystem and monitored to determine a success status.,9436553
9442715,2016-09-13,15,B2,"A cyclical patching process associated with a cloud application may be defined to ensure high availability (HA) of the cloud application in order to prevent impacting an availability to end users. A list of server identities corresponding to one or more servers of a datacenter hosting the cloud application may be accepted. HA metric values for each of the server identities may be determined in order to compute an overall HA metric value for the cloud application. A subset of the servers may be removed from a rotation framework of the cloud application based on the determined HA metric values, where the removal does not affect the overall HA metric value of the cloud application. One or more patches may be applied to each server within the subset of servers in parallel, and the subset of servers may be reinstated in the rotation framework of the cloud application.",9442715
9444708,2016-09-13,9,B2,Outage detection in a cloud based service is provided using synthetic measurements and anonymized usage data of the cloud based service. Synthetic measurements and usage data are processed through a shared aggregator to generate aggregated data. The synthetic measurements and the usage data are analyzed through a decision tree to correlate an outage based on the synthetic measurements and the usage data. A confidence value is assigned to the outage. An alert is generated that includes information associated with the outage and the confidence value.,9444708
9444896,2016-09-13,95,B2,"Embodiments described herein are directed to reinitiating an application on a target computing cloud and to evaluating potential target cloud computing systems. In one scenario, a computing system receives an indication that identifies a target cloud for application migration. The target cloud computing system includes a specified set of hardware and/or environment specifications, associated configuration settings and an assigned rating that indicates how well the application will perform on the target cloud computing system. The computing system determines that the application is to be reconfigured for compatibility with the target cloud computing system and reconfigures some or all of the application to comply with the hardware and/or environment specifications and configuration settings of the target cloud computing system. The computing system also identifies and transfers specified portions of the application to the target cloud, and indicates that the application is to be re-instantiated using the transferred application portions.",9444896
9450838,2016-09-20,167,B2,"A system for managing allocation of resources based on service level agreements between application owners and cloud operators. Under some service level agreements, the cloud operator may have responsibility for managing allocation of resources to the software application and may manage the allocation such that the software application executes within an agreed performance level. Operating a cloud computing platform according to such a service level agreement may alleviate for the application owners the complexities of managing allocation of resources and may provide greater flexibility to cloud operators in managing their cloud computing platforms.",9450838
9450873,2016-09-20,20,B2,"Traffic in a cloud is controlled by the nodes participating in the cloud. Tenants of the cloud each have a ratio. On any given node, a current transmission rate of the node is allocated among the tenants of the node, or more specifically, their execution units (e.g., virtual machines) on the node. Thus each tenant receives a predefined portion of the transmission capacity of the node. The transmission capacity can vary as conditions on the network change. For example, if congestion occurs, the transmission capacity may be decreased. Nonetheless, each tenant receives, according to its ratio, a same relative portion of the overall transmission capacity.",9450873
9454384,2016-09-27,84,B2,"Operating systems can be constructed through working “in the clouds” without dependence on a specific piece of hardware. Over the Internet, an operating system is constructed based on received requests. Received requests disclose modules that are to be added to the operating system and these modules are added. A constructed operating system can be tested in context of a web server and then downloaded to an electronic device. The electronic device boots the operating system from virtual hard disk by utilization of bare metal deployment and/or non-metal deployment.",9454384
9456019,2016-09-27,33,B2,Embodiments of automated cloud service performance prediction are disclosed. The automated cloud service performance prediction includes extracting one or more dependency relationships for each web object in the webpage. The prediction further includes determining an original performance metric value and original timing information associated with a page loading of a webpage. The prediction also includes simulating a page loading of the webpage based on the adjusted timing information and the dependency relationships to estimate a new performance metric value associated with the simulated page loading of the webpage. The prediction additionally includes comparing the original performance metric value to the new performance metric value to determine whether the adjusted timing information increased or decreased the new performance metric value relative to the original performance metric value.,9456019
9460419,2016-10-04,14,B2,"A crowdsourcing data structuring system and method for capturing unstructured data from the Web and adding structure by placing the data in a document that is accessible by others in a cloud computing environment. Using crowdsourcing, the unstructured data is annotated, amended, and verified to add structure to the unstructured data. An anchor and update module convert the data to a pointer that links the document to the data at an information source and stores the pointer in the document rather than the data itself. The data displayed in the document is updated whenever the information source is updated. A contribution module allows users to add data to the document, a validation module allows users to determine the validity of the data linked to in the document, and an expert ranking module allows users to rank the expert or contributor of the data in the document.",9460419
9477486,2016-10-25,31,B2,"In a cloud computing environment, a production server virtualization stack is minimized to present fewer security vulnerabilities to malicious software running within a guest virtual machine. The minimal virtualization stack includes support for those virtual devices necessary for the operation of a guest operating system, with the code base of those virtual devices further reduced. Further, a dedicated, isolated boot server provides functionality to securely boot a guest operating system. The boot server is isolated through use of an attestation protocol, by which the boot server presents a secret to a network switch to attest that the boot server is operating in a clean mode. The attestation protocol may further employ a secure co-processor to seal the secret, so that it is only accessible when the boot server is operating in the clean mode.",9477486
9497138,2016-11-15,42,B2,"A tenant comprising one or more users receives services from a cloud computing system (“CCS”). The CCS determines when a tenant is not using any services, and if so, the CCS initiates a tenant suspension process. The tenant suspension process involves suspending various asynchronous computing processes for the tenant, which execute otherwise execute even if no users of the tenant are currently accessing the CCS. After a period of non-use of the CCS, the tenant is suspended. The tenant is returned to an active state automatically when a user of the tenant logs-on to receive services.",9497138
9501484,2016-11-22,38,B2,"Recognizing cloud content techniques are described herein. A designated storage location for cloud content corresponding to a service is registered locally at a device. Files stored in association with the registered storage location may be recognized as cloud content of the corresponding service. The recognized cloud content may be handled in various ways to customize the user experience and tailor interaction with cloud content. For example, icons or other visual identifiers may be used within device, operating system and/or application user interfaces to represent an association of files with a particular service based on recognition of the files as cloud content. Additionally, a registered storage location for a device may be employed to obtain relative paths to files that may be used to roam file activity lists between different devices.",9501484
9510251,2016-11-29,129,B2,"A continual learning process is applied to a class of risk estimate-based algorithms and associated risk thresholds used for deciding when to initiate a handoff between different types of network connections that are available to a mobile device having telephony functionality. The process is implemented as a virtuous loop providing ongoing tuning and adjustment to improve call handoff algorithms and risk thresholds so that handoffs can be performed with the goals of minimizing dropped calls and unacceptable degradation in call quality as well as avoiding premature handoffs. Device characteristics, environmental context, connection measurements, and outcomes of call handoff decisions are crowd-sourced from a population of mobile devices into a cloud-based handoff decision enabling service. The service evaluates potentially usable handoff decision algorithms and risk thresholds against archived crowd-sourced data to determine how they would have performed in real world situations and delivers improved algorithms and risk thresholds to the mobile devices.",9510251
9519862,2016-12-13,19,B2,"The subject disclosure relates to a knowledge-driven data quality solution that is based on a rich knowledge base. The data quality solution can provide continuous improvement and can be based on continuous (or on-going) knowledge acquisition. The data quality solution can be built once and can be reused for multiple data quality improvements, which can be for the same data or for similar data. The disclosed aspects are easy to use and focus on productivity and user experience. Further, the disclosed aspects are open and extendible and can be applied to cloud-based reference data (e.g., a third party data source) and/or user generated knowledge. According to some aspects, the disclosed aspects can be integrated with data integration services.",9519862
9523772,2016-12-20,21,B2,"In scenarios involving the capturing of an environment, it may be desirable to remove temporary objects (e.g., vehicles depicted in captured images of a street) in furtherance of individual privacy and/or an unobstructed rendering of the environment. However, techniques involving the evaluation of visual images to identify and remove objects may be imprecise, e.g., failing to identify and remove some objects while incorrectly omitting portions of the images that do not depict such objects. However, such capturing scenarios often involve capturing a lidar point cloud, which may identify the presence and shapes of objects with higher precision. The lidar data may also enable a movement classification of respective objects differentiating moving and stationary objects, which may facilitate an accurate removal of the objects from the rendering of the environment (e.g., identifying the object in a first image may guide the identification of the object in sequentially adjacent images).",9523772
9525643,2016-12-20,31,B2,"The present invention extends to methods, systems, and computer program products for using templates to configure cloud resources. Embodiments of the invention include encapsulating cloud configuration information in an importable/exportable node template. Node templates can also be used to bind groups of nodes to different cloud subscriptions and cloud service accounts. Accordingly, managing the configuration of cloud based resources can be facilitated through an interface at a (e.g., high performance) computing component. Templates can also specify a schedule for starting/stopping instance running within a resource cloud.",9525643
9537650,2017-01-03,25,B2,"A digital escrow pattern for data services can include selective access for obscured data at a remote site or in a cloud service, distributing trust across multiple entities to avoid a single point of data compromise. Based on the pattern, a “trustworthy envelope” for any kind of payload enables curtained access through a variety of decorations or seals placed on the envelope that allow for a gamut of trust ranging with guarantees such as, but not limited to, confidentiality, privacy, anonymity, tamper detection, integrity, etc. Verifiable trust is provided through families of techniques that are referred to as wrapper composition. Multiple concentric and/or lateral transform wrappers or layers can wholly or partially transform data, metadata or both to mathematical transform (e.g., encrypt, distribute across storage, obscure) or otherwise introduce lack of visibility to some or all of the data, metadata or both.",9537650
9537889,2017-01-03,17,B2,"Embodiments control submission of crowdsourced data from a computing device to a cloud service. The cloud service receives a packet from the computing device having collected data and a single-use data tag associated therewith. The single-use data tag represents one of a threshold quantity of single-use data tags issued to the computing device. The cloud service validates the single-use data tag in the received packet by, for example, searching for the single-use data tag in a tag store maintained by the cloud service. The collected data from the received packet is stored by the cloud service based on the validation. After validation, the tag store is updated to prevent re-use of the single-use data tag. In some embodiments, the cloud service is a location service receiving crowdsourced beacon fingerprint data from a plurality of mobile computing devices.",9537889
9537973,2017-01-03,70,B2,"CND load balancing in the cloud. Server resources are allocated at an edge data center of a content delivery network to properties that are being serviced by edge data center. Based on near real-time data, properties are sorted by trending traffic at the edge data center. Server resources are allocated for at least one property of the sorted properties at the edge data center. The server resources are allocated based on rules developed from long-term trends. The resource allocation includes calculating server needs for the property in a partition at the edge data center, and allocating the server needs for the property to available servers in the partition.",9537973
9552473,2017-01-24,67,B2,"A method of storing data from a whiteboard application executed on a computing system including an interactive display device is provided. The method comprises storing, in a memory of the computing system, whiteboard data input to the whiteboard application in response to user interaction with the interactive display device, displaying a login selector on the interactive display device, upon detecting actuation of the login selector, identifying the user based on credentials of the user; and in response to identifying the user, (i) retrieving previews of stored whiteboard files from a user account in a cloud-based storage system corresponding to the identity of the user, (ii) displaying the previews on the interactive display device, and (iii) uploading the whiteboard data as a whiteboard file from the memory of the computing system to the user account.",9552473
9554323,2017-01-24,16,B2,Embodiments produce a set of instructions for connecting to a network through a network access point based on data crowdsourced from mobile computing devices. The crowdsourced data describes interactions between the mobile computing devices and the network access point when establishing a connection to the network. A cloud service analyzes the crowdsourced data to identify a set of instructions for association with the network access point. The mobile computing devices replay the set of instructions when subsequently attempting to connect to the network access point.,9554323
9558093,2017-01-31,18,B2,Visual tools are provided for failure analysis in distributed systems. Errors from synthetic measurements and usage data associated with a cloud based service are aggregated by a management application. The errors are processed to create a distribution that segments the errors based on components of the cloud based service. A failed component that generates a subset of the errors associated with a failure is highlighted. The failed component is one of the components of the cloud based service. The distribution is provided in a visualization to identify the failure by emphasizing the failed component with a failure information in proximity to the failed component.,9558093
9560037,2017-01-31,20,B2,User interface integration across multiple clouds is achieved by hosting UI extensions for different services in the same browser window. The UI extensions are initialized by a shell with any necessary security context for the corresponding cloud. The shell provides versioning so that the newest version of the UI is presented to users for all versions of a service. A connector in a local cloud provides translation between APIs across different clouds.,9560037
9560121,2017-01-31,14,B2,"A method of provisioning a Web hosting resource includes providing a cloud service. A request for a Web hosting resource is received by the cloud service, wherein the request is provided by a client. The cloud service identifies a Web host based on the received request for a Web hosting resource. The cloud service sends a request to the Web host to provision a first Web hosting resource for use by the client.",9560121
9560166,2017-01-31,31,B2,"Provisioning a cloud based high performance computing cluster. The method includes from a cloud based provisioning service deployed in a cloud based computing provider, providing a user interface. The method further includes receiving user input at the cloud based provisioning service from the user interface. The method further includes from the user input, determining a configuration for a cloud based user service for the user. Using the cloud based provisioning service, the method further includes provisioning the cloud based user service for the user, in the cloud, based on the determined configuration.",9560166
9565250,2017-02-07,13,B2,"In various embodiments, methods and systems for transferring data using a storage medium are provided. A storage medium may be shipped by a customer to a datacenter such that the data on the storage medium is copied to a storage associated with the datacenter or data in the storage is copied to the storage medium. The datacenter may support a cloud computing infrastructure that provides a storage account to the customer that is associated with the data copied from or copied to the storage medium. The storage medium further corresponds to a data transfer manifest that includes at least in part data mapping between storage service infrastructure and data in the storage medium. It is contemplated that embodiments of the present invention may further be implemented with data transfer service components that support a client component, storage service component, and a data transfer management component.",9565250
9569259,2017-02-14,37,B2,"Tools and techniques for migrating applications to compute clouds are described herein. A tool may be used to migrate any arbitrary application to a specific implementation of a compute cloud. The tool may use a library of migration rules, apply the rules to a selected application, and in the process generate migration output. The migration output may be advisory information, revised code, patches, or the like. There may be different sets of rules for different cloud compute platforms, allowing the application to be migrated to different clouds. The rules may describe a wide range of application features and corresponding corrective actions for migrating the application. Rules may specify semantic behavior of the application, code or calls, storage, database instances, interactions with databases, operating systems hosting the application, and others.",9569259
9582673,2017-02-28,44,B2,"A data model in which a set provides an abstraction that isolates the computation of membership from the details of how an enforcement point determines access (e.g., based on claims, based on security group membership etc). Set operations (e.g., intersection, union, inverse) can then be used across the sets. The architecture utilizes workflow on set transitions such that when an object such as a user enters the scope of one of these sets, notification can occur, such that inadvertent changes which lead to separation-of-duties violations can be detected quickly. The sets can also be used to define entitlements for enforcement of claims-based access control in a cross-organization deployment (e.g., to a cloud-hosted application).",9582673
9584949,2017-02-28,94,B2,"A cloud based service architecture is used in providing Master Data Management (MDM) services to clients. The MDM cloud based architecture comprises a client architecture and a server architecture. The client architecture includes synchronization services that are used to interact with the MDM cloud based service. The server architecture comprises a public Application Programming Interface (API) and a portal for accessing different MDM functionality. For example, a client may access the server architecture to create/modify MDM workflows that are hosted by the cloud based service. The cloud based service architecture also provides access to different MDM services including MDM workflows, validation, transformation, and storage relating to master data. The cloud based architecture may be used to publish master data and/or subscribe to master data.",9584949
9591095,2017-03-07,19,B2,"Application data prefetching embodiments are presented that prefetch and provide application data for use by an application operating on a mobile computing device during a period of disconnectivity from a communications network. In this way, an online experience can be achieved even during periods of network disconnectivity. In one implementation, application data is pushed to a mobile computing device by a cloud-based application data prefetching service. In another implementation, the mobile computing device takes on the tasks of prefetching the application data and providing it to the application.",9591095
9594885,2017-03-14,7,B2,"In various embodiments, methods and systems for license-messaging using cloud public-messaging infrastructures are provided. A cloud public-messaging infrastructure supports license message communication between applications. The cloud public-messaging infrastructure may implement license-messaging that circumvents network control units that control communication to the network components. A license-messaging channel is initialized with an on-premise relay service using the cloud public-messaging infrastructure. A cloud-based relay service listens for a license request from the cloud-based application. The license request is pushed using the cloud public-messaging infrastructure such that the license request is pulled through the license-messaging channel via the on-premise relay service to the on-premise license server. A response to the license request is received at the cloud-based relay service, via the on-premise relay service using the license messaging channel, and forwarded to the cloud-based application.",9594885
9595054,2017-03-14,166,B2,"A system for managing allocation of resources based on service level agreements between application owners and cloud operators. Under some service level agreements, the cloud operator may have responsibility for managing allocation of resources to the software application and may manage the allocation such that the software application executes within an agreed performance level. Operating a cloud computing platform according to such a service level agreement may alleviate for the application owners the complexities of managing allocation of resources and may provide greater flexibility to cloud operators in managing their cloud computing platforms.",9595054
9596127,2017-03-14,17,B2,"A scalable data feed system is disclosed. The data feed system may be offered as a cloud service that can serve many enterprises or tenants that require data to be pulled from information sources such as FTP, POP3, databases, line of business systems, a topic subscription, or an RSS feed, and pushed the data to information sinks, such as SMTP, email, FTP, mobile phones, and other devices and services. A pull agent pumps data from pull sources and pushes the data out to push agent counterparts. The push agent transforms and sends the data in messages to push sink, such as FTP, SMTP, or a mobile device. Both the pull agent and the push agent services are implemented as replicated services over a structured overlay network for high availability that can serve multiple requests to pump out data from multiple pull sources and push the data to multiple information sinks.",9596127
9596267,2017-03-14,7,B2,"A method includes acts for establishing a subscription for an entity. The method includes receiving, at a cloud service provider, a request from an entity to establish a subscription. The request includes credentials for the entity that are not proper credentials for an organization associated with the entity that the entity should use to access services for the organization. The method further includes performing a corrective action based on detecting one or more factors to determine that the entity is associated with the organization. The method further includes providing services based on the corrective action.",9596267
9600365,2017-03-21,47,B2,"In some examples, an erasure code can be implemented to provide for fault-tolerant storage of data. Maximally recoverable cloud codes, resilient cloud codes, and robust product codes are examples of different erasure codes that can be implemented to encode and store data. Implementing different erasure codes and different parameters within each erasure code can involve trade-offs between reliability, redundancy, and locality. In some examples, an erasure code can specify placement of the encoded data on machines that are organized into racks.",9600365
9609047,2017-03-28,18,B2,"A first node comprises a web server with a network interface configured to connect the web server to a plurality of second nodes of a cloud infrastructure. The first node has physical storage, connected to the web server, the physical storage comprising at least a master database of a multi-master database system of the cloud computing infrastructure, the master database configured to store atomic code units and data redundantly as part of the multi-master database system, the atomic code units defining the dynamic web application. The web server receives requests comprising input data and identifiers of individual ones of the atomic code units, at least some of the requests originating from client devices using the dynamic web application. The web server executes, in response to requests, individual ones of the atomic code units in dependence on state of the master database, such that the dynamic web application is executed.",9609047
9633068,2017-04-25,37,B2,"Aspects of the subject matter described herein relate to synchronizing data. In aspects, properties are synchronized from an organization property store to a cloud property store and/or vice versa. The list of properties to synchronize may change based on the cloud services to which the organization subscribes, changes to the cloud services, or for other reasons. Furthermore, the list of properties to synchronize may be limited to certain objects of the organization which may also change over time.",9633068
9634956,2017-04-25,10,B2,"An application combines on-site and cloud-based calculations. The application selects a cloud computing broker from a list sorted by load. The broker receives computation requests from the application, sends corresponding load-balanced requests to local application service hosts and cloud proxies, receives responses, and sends the responses to the application without identifying the response source as local versus non-local. Each proxy has a logical-physical mapping of cloud-resident worker nodes. A scheduler receives session requests from applications, allocates local and cloud computing resources to a session, and tracks resource usage by session. An application previously run only on-premises can be executed partially on cloud worker nodes without modification. The proxy re-routes unfulfilled requests from a failed worker, undetected by the broker. If all workers assigned to that proxy fail, then the broker reassigns unfulfilled requests to another proxy, undetected by the application.",9634956
9639678,2017-05-02,34,B2,"Embodiments are directed to providing an identity risk score as part of an authentication assertion, applying operating heuristics to determine an operating application's validity and to providing identity risk scores to requesting third parties. In one scenario, an authentication server receives from a cloud service portal various user credentials from a user. The user credentials identify a user to the authentication server. The authentication server verifies the user's identity using the received credentials and generates an identity risk score based on one or more identity factors. The identity factors indicate a likelihood that the user is a valid user. The authentication server encapsulates the generated identity risk score in an authentication assertion and sends the authentication assertion that includes the generated identity risk score to the cloud service portal.",9639678
9641394,2017-05-02,60,B2,"Methods, systems, and computer-readable media for automatically configuring an inventory of hardware to interact seamlessly with a cloud-computing fabric of a data center are provided. Initially, hardware devices within the hardware inventory are located by sending and receiving communications to network devices via serial-based connections and network-based connections, respectively. Information collected during hardware-device location is cross-referenced against a template file for purposes of validation. This information is also employed to generate an infrastructure state of the hardware inventory. The infrastructure state is shared with a controller of the fabric to integrate the hardware inventory therein. Upon integration, services and security measures are provisioned on the hardware inventory, which is designated as a fabric-computing cluster of the data center in order to extend reachability of the fabric, while distributed services are deployed and enabled on available portions of the hardware inventory, which are managed by the fabric controller.",9641394
9641580,2017-05-02,12,B2,"A low-latency cloud-scale computation environment includes a query language, optimization, scheduling, fault tolerance and fault recovery. An event model can be used to extend a declarative query language so that temporal analysis of event of an event stream can be performed. Extractors and outputters can be used to define and implement functions that extend the capabilities of the event-based query language. A script written in the extended query language can be translated into an optimal parallel continuous execution plan. Execution of the plan can be orchestrated by a streaming job manager which schedules vertices on available computing machines. The streaming job manager can monitor overall job execution. Fault tolerance can be provided by tracking execution progress and data dependencies in each vertex. In the event of a failure, another instance of the failed vertex can be scheduled. An optimal recovery point can be determined based on checkpoints and data dependencies.",9641580
9641977,2017-05-02,35,B2,"Embodiments infer position information using captured content items. A computing device such as a mobile computing or a cloud service analyzes one or more content items to generate information describing the content items. For content items that include photographs, for example, the photographs are processed to identify faces, objects, places, text, etc. The generated information is compared to reference content items (e.g., image comparison), user data (e.g., calendar data, contact information, etc.), and/or public data (e.g., address information, event information, etc.) to identify at least one match. Location information associated with the matched reference content items, user data, and/or public data is obtained. A position is determined for the content items based on the location information obtained from the matched reference content item, user data, and/or public data. In some embodiments, the obtained location information is used to refine a position determined using a beacon-based positioning service.",9641977
9645629,2017-05-09,18,B2,"Energy consumption analytics of a cloud based service is provided. An application such as a power analytics application monitors power consumption data of a server of the cloud based service. The power consumption data of the server is captured in a data file, a data store, a temporary storage, etc. The power consumption data is analyzed to detect power consumption metrics for the server. The power consumption metrics are presented in a business intelligence data structure.",9645629
9645839,2017-05-09,18,B2,"A cloud computing environment may use a virtualization layer within a stateless cloud computing process to capture, store, and retrieve state information generated by a stateful application executing within the process. The virtualization layer may monitor various state storage systems to identify changes to stateful items and store the stateful items in a state storage mechanism. The virtualization layer may intercept and redirect calls to the stateful items stored in the state storage mechanism. A cloud computing manager may start and stop the stateless cloud computing process, and may recover the state and resume executing the application.",9645839
9646410,2017-05-09,32,B2,A three-dimensional (3D) scene is computationally reconstructed using a combination of plural modeling techniques. Point clouds representing an object in the 3D scene are generated by different modeled techniques and each point is encoded with a confidence value which reflects a degree of accuracy in describing the surface of the object in the 3D scene based on strengths and weaknesses of each modeling technique. The point clouds are merged in which a point for each location on the object is selected according to the modeling technique that provides the highest confidence.,9646410
9651944,2017-05-16,14,B2,"Unmanned aerial vehicle (UAV) piloting authorization implementations are presented that authorize a pilot to operate a UAV in regulated airspace. In general, a UAV authorization system is employed which incorporates a control authorization unit into a UAV controller device and a control instruction authentication unit into a UAV. The control authorization unit obtains a signed digital certificate associated with a UAV pilot, checks that it is signed by a trusted signatory, and then determines that it is currently valid using cloud or server based validation service. If the digital certificate is currently valid, the pilot is allowed to initiate control instructions via the UAV controller device. The signed digital certificate is attached to any control instructions initiated by the pilot before transmission to the UAV. The control instruction authentication unit goes through a similar procedure to authenticate any received control instruction before allowing the UAV to execute the instruction.",9651944
9660884,2017-05-23,88,B2,Technologies are described herein for providing a monitoring service in a cloud-based computing environment. A request is received from a user to subscribe to the monitoring service. The monitor workflow may correspond to the monitoring service. A first call to a finder application is executed over a communications network to retrieve data points according to the monitor workflow. A second call to an analyzer application is executed over the communications network to identify a relevant data point in the data points. A third call to a notifier application is executed over the communications network to notify the user of the relevant data point.,9660884
9667727,2017-05-30,57,B2,"An environment is described in which a cloud-implemented service system controls a plurality of target devices via a plurality of respective device-agnostic pipe mechanisms. The target devices themselves may represent “dumb” devices, e.g., lacking local control logic, or providing reduced reliance on local control logic. Users may interact with the service system via applications running on any type of user devices.",9667727
9672349,2017-06-06,11,B2,"A cloud service system may activate features or functionality based on agreement of at least two parties such as a system administrator and a compliance officer to mitigate compliance, security, or privacy impact on the service. The controllers may make the “enable feature” decision independently, but still have equal say in the outcome. In some examples, pre-established profiles may be provided to a controller such as a compliance officer to make decisions by selection on his/her behalf at a particular level of risk acceptance and/or to meet a particular regulatory standard/certification.",9672349
9674055,2017-06-06,16,B2,"Technologies are described herein for cloud monitoring federations that can include cloud monitoring services (CMS) that collect monitoring information from point of presence (POP) agents. The cloud monitoring POPs may be located in the cloud, on client machines, embedded within cloud applications, or wherever they can obtain visibility into managed entities associated with the cloud. Management systems, acting as cloud monitoring clients (CMC), may interface with the CMS to obtain a complete view of services and application used by their enterprise including those that operate outside of the enterprise premises as part of a cloud or outside network. The publishing by POPs and consumption by CMCs of management information across components within the enterprise and out in the cloud may be supported by managing roles, responsibilities, scopes, security boundaries, authenticity of information, service level agreements, and other aspects of cloud monitoring operations.",9674055
9680964,2017-06-13,60,B2,"An application executing in a virtual environment, such as a web browser, may be serviced by an application host, such as a webserver that maintains application resources or provides runtime services to the application. However, it may be difficult to configure the application to operate suitably when the application host is unavailable. Techniques for facilitating such operation include the storing of application resources in a computing environment (such as the local file system or a deployable mesh or cloud environment) while also initiating the application within the virtual environment in the context of the application host, which may reduce difficulties with isolation policies imposed by the virtual environment (e.g., cross-domain restrictions imposed by the web browser.) This configuration may promote the servicing of the application alongside other applications and data objects, e.g., the automated deployment and synchronization of the application among all devices comprising the user's mesh environment.",9680964
9692665,2017-06-27,18,B2,"A failure analysis of a cloud based service is provided using synthetic measurements of the cloud based service. The synthetic measurements associated with a customer experience is executed on the cloud based service to determine a health of the cloud based service. The synthetic measurements simulate the customer experience which includes a use scenario of a customer of the cloud based service. Failures associated with the health of the cloud based service are aggregated, where the failures are detected from the synthetic measurements. A distribution is generated from the failures. The distribution is presented to a stakeholder.",9692665
9699180,2017-07-04,17,B2,"Providing access to a cloud service includes a system receiving an application request to access a cloud service. In response, the system sends an identity provider (IP) a token request, comprising an application identifier (ID), an operating system (OS) cloud credential associated with login credentials of a user of an OS hosting the application, and a cloud service ID of the cloud service. Based on sending the token request, and on the IP authenticating the user and verifying the application ID is valid, the system receives a token from the IP. The token, which is signed with an IP signature, comprises the cloud service ID, the application ID, and a user assigned ID associated with the cloud service. The system provides the token to the application for submission to a cloud service provider for access, and obtains cloud service access based on the cloud service provider validating the IP signature.",9699180
9705796,2017-07-11,18,B2,"A system that includes multiple hosts, each running a plurality of virtual machines. The system may be, for example, a cloud computing environment in which there are services and a service coordination system that communicates with the hosts and with the services. The services include a middleware management service that is configured to maintain per-tenant middleware policy for each of multiple tenants. The middleware management service causes the middleware policy to be applied to network traffic by directing network traffic to a middleware enforcement mechanism. This middleware policy is per-tenant in that it depends on an identity of a tenant.",9705796
9716717,2017-07-25,14,B2,"The subject disclosure is directed towards securely synchronizing passwords that are changed at a source location (e.g., an on-premises directory service) to a target location (e.g., a cloud directory service), so that the same credentials may be used to log into the source or target location, yet without necessarily having each domain controller handle the synchronization. The plaintext password is not revealed, instead using hash values computed therefrom to represent the password-related data. The target may receive a secondary hash of a primary hash, and thereby only receive and store a password blob. Authentication is accomplished by using the same hashing algorithms at the target service to compute a blob and compare against the synchronized blob. Also described are crypto agility and/or changing hashing algorithms without requiring a user password change.",9716717
9720809,2017-08-01,18,B2,"Debugging capabilities for software running in a cloud-computing environment are disclosed. Embodiments enable developers to debug any process running on a virtual machine hosted in a remote data center, virtual network, or cloud services environment over the Internet through a secured connection without manually installing and configuring a remote debugging monitor. A debugger module is dynamically installed and configured on a remote machine over the Internet through an extension model. In another embodiment, a debugger module is dynamically installed and configured on a remote machine over the Internet through a remote scripting approach. A secure connection is automatically established between debugger application components and debugging components on the remote machine.",9720809
9722945,2017-08-01,43,B2,"Embodiments are directed to preventing flapping when auto-scaling cloud resources. In one scenario, a computer system accesses information specifying a target operational metric that is to be maintained on a plurality of cloud resources. The computer system determines a current measured value for the target operational metric for at least some of the cloud resources. The computer system further calculates a scaling factor based on the target operational metric and the current measured value, where the scaling factor represents an amount of variance between the target operational metric and the current measured value. The computer system also calculates a delta value representing a modified quantity of cloud resources modified by the calculated scaling factor and determines whether a scaling action is to occur based on the calculated delta value.",9722945
9727445,2017-08-08,36,B2,"A web application intended to be called by a cloud service is debugged locally in a developer's machine. A debugging session is configured to initiate execution of the web application in its intended cloud context by utilizing a reverse proxy mechanism to forward network traffic from a calling cloud service to the developer's machine. In a first embodiment, an integrated development environment (IDE) is able to establish a connection with the reverse proxy mechanism during the debugging session. In a second embodiment, a separate process is used to establish the connection with the reverse proxy mechanism where the separate process is outside of the IDE.",9727445
9730037,2017-08-08,16,B2,"A method for managing data communication of a mobile device in a mobile network is provided. The method may include receiving a request, at a cloud proxy, to retrieve Internet data from the Internet. The request may originate from an application, and the Internet data may have a plurality unique objects. The method may also include aggregating the Internet data and two or more of the unique objects from the Internet. Furthermore, the method may include forwarding the Internet data and the two or more unique objects to the mobile device in one transmission.",9730037
9733953,2017-08-15,38,B2,"Systems, methods and computer program products for facilitating the execution of application programs on computing devices with limited-capability operating systems by dynamically redirecting certain API calls are disclosed. Such systems, methods and computer program products provide one or more API intercept layers and a rules engine that facilitates the ability to make dynamic decisions on how to handle specific API calls. The redirection may be initiated for any number of reasons/factors/characteristics related to the computing device that render the operating system to be considered “limited capability,” such as, for example, lack of local API implementation, power level, location, central processor unit usage, and any other pattern which determines that redirecting an API call to another entity is more efficient. Such entity may be a hardware component, a partitioned or virtualized operating system image, a network-based image or a cloud-based service.",9733953
9740469,2017-08-22,34,B2,"Techniques are described herein that are capable of dynamically installing plugin(s) for application(s). An agent plugin is caused to run in a deployment of a specified application (e.g., across multiple machines in a cloud environment or “on premises”). The specified application is packaged to include the agent plugin. The agent plugin is used to install designated plugin(s) dynamically based on configuration information regarding the specified application. The configuration information indicates that the designated plugin(s) are to be installed in response to the specified application being deployed.",9740469
9749208,2017-08-29,28,B2,"In various embodiments, methods and systems for integrated resource allocation and loading balancing are provided. A global resource allocator receives usage information of resources in a cloud computing system. The usage information is associated with a plurality of accounts and consumer operations pairs on servers of the cloud computing system. For selected account and consumer operation pairs associated with a particular resource, allocation targets are determined and communicated to the corresponding server of the selected account and consumer operation pairs. The servers use the resource based on the allocation targets. A load balancer receives the usage information the resource and the allocation targets. The allocation targets indicate a load by the selected account and consumer operation pairs on their corresponding servers. The load balancer performs a load balancing operation to locate a server with a capacity to process the allocated target of the selected account and consumer operation pairs.",9749208
9767598,2017-09-19,97,B2,"A “Point Cloud Smoother” provides various techniques for refining a 3D point cloud or other 3D input model to generate a smoothed and denoised 3D output model. Smoothing and denoising is achieved, in part, by robustly fitting planes to a neighborhood of points around each point of the input model and using those planes to estimate new points and corresponding normals of the 3D output model. These techniques are useful for a number of purposes, including, but not limited to, free viewpoint video (FVV), which, when combined with the smoothing techniques enabled by the Point Cloud Smoother, allows 3D data of videos or images to be denoised and then rendered and viewed from any desired viewpoint that is supported by the input data.",9767598
9769170,2017-09-19,16,B2,"The subject disclosure is directed towards securely synchronizing passwords that are changed at a source location (e.g., an on-premises directory service) to a target location (e.g., a cloud directory service), so that the same credentials may be used to log into the source or target location, yet without necessarily having each domain controller handle the synchronization. The plaintext password is not revealed, instead using hash values computed therefrom to represent the password-related data. The target may receive a secondary hash of a primary hash, and thereby only receive and store a password blob. Authentication is accomplished by using the same hashing algorithms at the target service to compute a blob and compare against the synchronized blob. Also described are crypto agility and/or changing hashing algorithms without requiring a user password change.",9769170
9774500,2017-09-26,12,B2,Personalization data such as settings and/or state is migrated across devices including mobile phones. Device personalizations are pushed to a cloud service or other mechanism for backup and subsequent transmission to other devices. The personalization data can later be employed to configure one or more other devices in the same manner as a first device.,9774500
9781205,2017-10-03,57,B2,"Methods, systems, and computer-readable media for selecting and managing a public cloud-computing network to host a client's account information are provided. Initially, the client issues a request to a coordination engine, which understands rules language of various public clouds, to update the account information residing on a target cloud. The target cloud was previously selected from the various public clouds as a function of desirable criteria specified by the client in light of properties (e.g., pricing, security, and reliability) dynamically abstracted from the public clouds. When addressing the request, the coordination engine extracts command(s) from the request and automatically translates the command(s) consistent with the rules language of the target cloud. Upon delivery to the target cloud, the translated command(s) affect reading of or writing to the account information. Accordingly, the client is absolved from converting instructions into a format that is expected by the target cloud.",9781205
9792156,2017-10-17,6,B2,"A hybrid configuration engine and associated method for reducing the complexity and burden of configuring rich coexistence between an on-premise solution and a cloud-based solution is described herein and illustrated in the accompanying figures. The hybrid configuration engine determines the current state of the on-premise solution and the cloud-based solution and learns the desired configuration state. After obtaining the current and desired configuration state information, the hybrid configuration engine determines and automatically performs steps to reach the desired configuration state. Finally, the hybrid configuration engine provides instructions describing the manual steps needed to reach the desired configuration state.",9792156
9794365,2017-10-17,32,B2,"Embodiments enable recovery of push notification channels via session information associated with user identifiers. A proxy service creates session information describing push notification channels (e.g., subscriptions) for a user and associates the session information with a user identifier. The session information is stored in a cloud service or other storage area separate from the proxy service. After failure of a user computing device or the proxy service, the session information is obtained via the user identifiers and the push notification channels are re-created with the session information. In some embodiments, the proxy service enables delivery of the same notification to multiple computing devices associated with the user identifier.",9794365
9800653,2017-10-24,16,B2,"In various embodiments, methods and systems for measuring load-balancer responsiveness in a cloud computing infrastructure are provided. A plurality of requests is transmitted to a data center virtual IP (VIP), where the data center VIP is configured to receive inbound traffic for a service. A load-balancing component associated with the VIP distributes the requests to a DIP pool comprised of one or more machines, each associated with a private direct IP (DIP). Each of the machines includes a DIP node-monitoring component including a keep-alive URL for receiving keep-alive probes and a dummy service URL for receiving the plurality of requests. A latency of exclusion or inclusion of a first DIP of a first machine in the DIP pool is determined based on at least some of the requests received by the DIP node-monitoring component from the load-balancing component.",9800653
9807153,2017-10-31,10,B2,"A mechanism is described for provisioning remote desktops in a cloud based infrastructure while maintaining user personalization. In cloud based systems, a user may not always reconnect to the same VM endpoint. In one embodiment, the virtual hard disk assigned to a user is mounted to the endpoint assigned to the user. The virtual hard disk includes the user's personal data and personalization information (e.g., settings, profiles, files, etc.). When the user disconnects from the remote desktop, the virtual hard disk is demounted from the endpoint. The virtual hard disk thus provides information regarding the user's state when the user is disconnected.",9807153
9807156,2017-10-31,18,B2,"A first node comprises a web server with a network interface configured to connect the web server to a plurality of second nodes of a cloud infrastructure. The first node has physical storage, connected to the web server, the physical storage comprising at least a master database of a multi-master database system of the cloud computing infrastructure, the master database configured to store atomic code units and data redundantly as part of the multi-master database system, the atomic code units defining the dynamic web application. The web server receives requests comprising input data and identifiers of individual ones of the atomic code units, at least some of the requests originating from client devices using the dynamic web application. The web server executes, in response to requests, individual ones of the atomic code units in dependence on state of the master database, such that the dynamic web application is executed.",9807156
9811392,2017-11-07,20,B2,"Computational tasks are mapped with computational locations in a distributed system such as a cloud computing environment. Mapping does not rely on workload estimates. Instead, tasks whose prerequisite tasks or other preconditions are determined to be mutually exclusive are co-located, while other tasks are mapped to different locations than one another. Locations are servers, processor cores, virtual machines, applications, or computational processes, for example. Mutual exclusivity may be determined by detecting that preconditions require different values of a shared variable in order to be satisfied, for example, or determining that preconditions correspond to different branches of a conditional programming statement. A satisfiability engine may also provide a satisfiability determination. Co-located tasks may also be batched, for improved execution performance. Co-location based on mutual exclusivity may result in fewer operations to save and restore task state, fewer cache misses, greater co-allocation of computational resources by the tasks, and easier debugging.",9811392
9832149,2017-11-28,27,B2,"Users of communication applications may be enabled to select from a user-friendly and efficiently provided list of files that may be of interest to them to attach to a correspondence and send to one or more recipients. For example, the communication application may retrieve information from one or more application programming interfaces (APIs) associated with applications of the user to determine the list of files. The files may be local files or cloud-based files, and a variety of criteria may be used to determine, group, and present the files to the user for selection. Once selected by the user, the files or links to cloud destinations of the files may be attached to the correspondence, where the files or links may be displayed in an attachment well or a body of the correspondence. Permissions associated with the attachments may be set by default, by user configuration, and/or modified by user.",9832149
9837124,2017-12-05,16,B2,"In various embodiments, methods and systems for generating interactive videos based on a layered interactive video platform are provided. An interactive graphics track is received using a layered video platform that supports interactive graphics tracks functionality on interactivity content editor components, content management components, and interactivity components on end-user media devices. The interactive graphics track comprises interactivity instructions that initialize cloud-based interactivity services. An interactivity content editor component can be used to generate interactive graphics tracks and develop interactivity instructions for composing the interactive graphics elements. Composing the interactive graphics elements is based on executing the interactivity instructions that define features of the interactive graphics elements. Composing the interactive graphics elements comprises accessing cloud-based interactivity services corresponding to the interactivity instructions. The interactive graphics tracks can be maintained separately from the video content. The interactive graphics elements are supported using the cloud-based interactivity services and layered over the video content.",9837124
9842039,2017-12-12,37,B2,"Embodiments are directed to determining an optimal number of concurrently running cloud resource instances and to providing an interactive interface that shows projected operational metric measurements. In one scenario, a computer system accesses metric information which identifies operational metric measurements, and further accesses a second portion of metric information that identifies operational metric measurements for the cloud resource instances over a second period of time. The computer system then calculates projected operational metric measurements based on the identified operational metric measurements over the first period of time (e.g. for reactive tuning) and further based on the identified operational metric measurements over the second period of time (e.g. for predictive tuning). The computer system then determines, based on the projected operational metric measurements, a number of cloud resource instances that are to be concurrently running at a specified future point in time.",9842039
9842316,2017-12-12,33,B2,"A cloud-based broker service may be provided for computing devices in a distributed computing environment. The broker service may aggregate user accounts and user account credentials utilized for accessing online services by the computing devices. The broker service may monitor a context of the computing devices associated with the user accounts. The broker service may then utilize the context, data associated with the user accounts and data associated with the user account credentials to automate tasks and/or provide alerts associated with the data.",9842316
9851998,2017-12-26,33,B2,"A computer system acquires forensics data from running virtual machines in a hypervisor-hosted virtualization environment. The computer system provides a forensics partition as an additional root virtual machine partition or child virtual machine partition. The forensics partition includes a forensics service application programming interface configured to target one or more virtual machines and acquire forensics data from a targeted virtual machine running in a particular child virtual machine partition. The forensics service application programming interface is configured to communicate via one or more inter-partition communication mechanisms such as an inter-partition communication bus, a hyercall interface, or forensics switch implemented by the hypervisor-hosted virtualization environment. The forensics service application programming interface can be exposed to a forensics tool as part of a cloud-based forensics service.",9851998
9853812,2017-12-26,247,B2,"Content on a device is encrypted and protected based on a data protection key corresponding to a particular identity of the user of the device. The protected content can then be stored to cloud storage, and from the cloud storage the protected content can be transferred to various other ones of the user's devices. A data protection key that is used to retrieve the plaintext content from the protected content is maintained by the user's device. This data protection key can be securely transferred to other of the user's devices, allowing any of the user's devices to access the protected content.",9853812
9857474,2018-01-02,13,B2,"Described is a technology by which GPS-capable devices work with a cloud service to receive satellite visibility-related data. The satellite visibility-related data may be used to determine a location, and/or to abort a search for satellites. The cloud service may use crowd data from other GPS-capable devices. In one aspect, line-of-sight satellites are differentiated from other satellites, and used to determine which satellite signals are more trustworthy. Reflected signals also may be determined.",9857474
9858045,2018-01-02,7,B2,"Embodiments of facilitating creation of cloud computing applications are disclosed therein. In one embodiment, a method includes receiving user input of a plurality of workflow items as a sequence of graphical objects on a graphical user interface. The workflow items individually are related to one or more cloud computing services. The method also includes determining an execution sequence of the plurality of workflow items based on data dependencies individually between pairs of the workflow items, the determined execution sequence being different than the sequence of the graphical objects. The determined execution sequence includes executing pairs of the workflow items without data dependencies therebetween generally in parallel and sequentially executing other pairs of the workflow items with data dependencies therebetween in accordance with the data dependencies.",9858045
9858114,2018-01-02,44,B2,"Tools and techniques for migrating applications to compute clouds are described herein. A tool may be used to migrate any arbitrary application to a specific implementation of a compute cloud. The tool may use a library of migration rules, apply the rules to a selected application, and in the process generate migration output. The migration output may be advisory information, revised code, patches, or the like. There may be different sets of rules for different cloud compute platforms, allowing the application to be migrated to different clouds. The rules may describe a wide range of application features and corresponding corrective actions for migrating the application. Rules may specify semantic behavior of the application, code or calls, storage, database instances, interactions with databases, operating systems hosting the application, and others.",9858114
9858402,2018-01-02,48,B2,"A multi-party security protocol that incorporates biometric-based authentication and withstands attacks against any single party (e.g., mobile phone, cloud, or the user). The protocol involves the function split between mobile and cloud and the mechanisms to chain-hold the secrets. A key generation mechanisms binds secrets to a specific device or URL (uniform resource locator) by adding salt to a master credential. An inline CAPTCHA (Completely Automated Public Turing test to tell Computers and Humans Apart) handling mechanism uses the same sensor modality as the authentication process, which not only improves the usability, but also facilitates the authentication process. This architecture further enhances existing overall system security (e.g., handling untrusted or compromised cloud service, phone being lost, impersonation, etc.) and also improves the usability by automatically handling the CAPTCHA.",9858402
9876851,2018-01-23,24,B2,The description relates to cloud-edge topologies. Some aspects relate to cloud-edge applications and resource usage in various cloud-edge topologies. Another aspect of the present cloud-edge topologies can relate to the specification of cloud-edge applications using a temporal language. A further aspect can involve an architecture that runs data stream management systems (DSMSs) engines on the cloud and cloud-edge computers to run query parts.,9876851
9877250,2018-01-23,139,B2,"A continual learning process is applied to a class of risk estimate-based algorithms and associated risk thresholds used for deciding when to initiate a handoff between different types of network connections that are available to a mobile device having telephony functionality. The process is implemented as a virtuous loop providing ongoing tuning and adjustment to improve call handoff algorithms and risk thresholds so that handoffs can be performed with the goals of minimizing dropped calls and unacceptable degradation in call quality as well as avoiding premature handoffs. Device characteristics, environmental context, connection measurements, and outcomes of call handoff decisions are crowd-sourced from a population of mobile devices into a cloud-based handoff decision enabling service. The service evaluates potentially usable handoff decision algorithms and risk thresholds against archived crowd-sourced data to determine how they would have performed in real world situations and delivers improved algorithms and risk thresholds to the mobile devices.",9877250
9887894,2018-02-06,89,B2,"Embodiments profile users based on data usage of installed applications and provide recommendations for reducing data usage. A computing device or cloud service determines a plurality of applications installed on the computing device. Data usage patterns associated with each of the determined plurality of applications are identified. The data usage patterns describe data usage over a network for at least one of the determined plurality of applications. One or more recommendations for reducing data usage are defined based on the identified data usage patterns. Some embodiments recommend switching applications, uninstalling applications, or disabling particular network connections.",9887894
9888056,2018-02-06,10,B2,"A cloud service stores and aggregates content that is obtained from different content sources using different protocols. For example, the content may include electronic messages, calendar information, contacts, social network content, feed data, search results, and the like. The cloud service aggregates content for each user based on the user's configuration settings. The cloud service may perform processing on the aggregated content before it is delivered and displayed to the user on the client device. For example, one or more views may be generated and stored by the cloud service before the view is requested from the client. Changes made to the aggregated content on the client may be synchronized with the content source. Searches may be made across all or a portion of the different content sources that are aggregated for a user.",9888056
9894040,2018-02-13,65,B2,"Embodiments are directed to securing data in the cloud, securely encrypting data that is to be stored in the cloud and to securely decrypting data accessed from the cloud. In one scenario, an instantiated trust service receives information indicating that a trust server is to be instantiated. The trust service instantiates the trust server, which is configured to store key references and encrypted keys. The trust service receives the public key portion of a digital certificate for each publisher and subscriber that is to have access to various specified portions of encrypted data. A data access policy is then defined that specifies which encrypted data portions can be accessed by which subscribers.",9894040
9900295,2018-02-20,250,B2,"Content on a device is encrypted and protected based on a data protection key. The protected content can then be copied to cloud storage, and from the cloud storage the protected content can be transferred to various other ones of the user's devices. A key used to retrieve plaintext content from the protected content is associated with an identifier of a particular device that provides the key, the device providing the key being the device that generated the key, or another managed device to which the protected content was transferred. A wipe command can similarly be transferred to the various ones of the user's devices, causing any keys associated with a particular device to be deleted from each of the various ones of the user's devices.",9900295
9905032,2018-02-27,37,B2,"In scenarios involving the capturing of an environment, it may be desirable to remove temporary objects (e.g., vehicles depicted in captured images of a street) in furtherance of individual privacy and/or an unobstructed rendering of the environment. However, techniques involving the evaluation of visual images to identify and remove objects may be imprecise, e.g., failing to identify and remove some objects while incorrectly omitting portions of the images that do not depict such objects. However, such capturing scenarios often involve capturing a lidar point cloud, which may identify the presence and shapes of objects with higher precision. The lidar data may also enable a movement classification of respective objects differentiating moving and stationary objects, which may facilitate an accurate removal of the objects from the rendering of the environment (e.g., identifying the object in a first image may guide the identification of the object in sequentially adjacent images).",9905032
9912755,2018-03-06,19,B2,"The automatic provisioning of a connection between a public cloud and an on-premises resource in a private network. This allows a connection to be more easily made when an application in the public cloud is to access that on-premises resource in the private network. The automatic provisioning is initiated upon determining that an application running in the public cloud is to access the on-premises resource. The provisioning occurs by identifying a bridging infrastructure that provides access to the on-premises resource. Credentials are then accessed for later use in connecting to the bridging infrastructure. Application-specific credentials are securely provided to the application. The application-specific credentials are usable by an agent on the public cloud to connect to the identified bridging infrastructure. A configuration packages is then created that includes resource-specific credentials, the identity of the on-premises resource and an executable.",9912755
9922200,2018-03-20,14,B2,"Systems, methods, and computer-readable storage media are provided for securely storing and accessing content within a public cloud. A processor manufacturer provides processors having secure enclave capability to a cloud provider. The provider makes available a listing of processor identifiers (CPUIDs) for processors available for storing content and having secure enclave capability. A content owner provides CPUIDs for desired processors from the listing to the manufacturer which provides the content owner with a processor-specific public code encryption key (CEK) for encrypting content to be stored on each processor identified. Each processor is constructed such that content encrypted with the public CEK may only be decrypted within a secure enclave thereof. The content owner encrypts the desired content with the public CEK and returns the encrypted content and the CPUID for the appropriate processor to the cloud provider. The cloud provider then stores the encrypted content on the particular processor.",9922200
9923957,2018-03-20,10,B2,"Techniques for configuring and operating a multimedia aware cloud, particularly configured for mobile device computing, are described herein. In some instances, clusters of servers are organized for general computing, graphic computing and data storage. A load balancing server may be configured to: identify multimedia types currently being processed within the multimedia edge cloud; determine desired quality of service levels for each identified multimedia type; evaluate individual abilities of devices communicating with the multimedia edge cloud; and assess bandwidth of each network over which the multimedia edge cloud communicates with a mobile device. With that information, multimedia data may be adapted accordingly, to result in an acceptable quality of service level when delivered to a specific mobile device. In one example of the techniques, graphic computing server clusters may be configured to process workload using a configuration that includes elements of both parallel and serial computing.",9923957
9928101,2018-03-27,18,B2,"In an environment that includes a host computing system that executes virtual machines, and a secure cloud computing channel that communicatively couples the host to a client computing system that is assigned to a particular one of the virtual machines, the particular virtual machine generates a certificate, install the certificate on the itself, and returns a certificate representation to the client. This may occur when the virtual machine is provisioned. During a subsequent connection request from the client to the virtual machine, the virtual machine returns the certificate to the client. The client compares the certificate representation that was returned during provisioning with the certificate returned during the subsequent connection, and if there is a match, then the virtual machine is authenticated to the client. Thus, in this case, the virtual machine authenticates without the client having to generate, install, and manage security for a certificate.",9928101
9928645,2018-03-27,16,B2,"Concepts and technologies are described herein for providing raster-based mesh decimation. Generally described, input data defining a model is processed to render the model as a depth map from a multitude of perspectives. By capturing depth map data from a multitude of perspectives, components of the model that are visible from the multitude of perspectives are captured in the depth map data and components that are blocked by the visible components are not captured in the depth map data. Point cloud data is generated by merging the depth map data captured from the multitude of perspectives. Output mesh data is generated by applying a surface reconstruction to the point cloud data. One or more mesh decimation algorithms may be applied to the mesh data. Image data may also be captured from the input data and applied to the output mesh data.",9928645
9935963,2018-04-03,220,B2,"Techniques for sharing of items from online storage (e.g., cloud storage) are described herein. In at least some embodiments, sharing links can be configured as one-time sharing links that provide recipients with limited, one-time access to a shared item for the purpose of selecting or registering an account to use for subsequent access to the item. Recipients are able to select accounts they find most convenient for accessing a shared item without the owner/sharer of the item necessarily having contact information for those accounts or sending a link to the accounts. Selection of a one-time link initiates an authentication sequence that selectively provides an option to select a particular account. Once the one-time sharing link is redeemed, the one-time sharing link is invalidated for subsequent access to the item.",9935963
9940210,2018-04-10,21,B2,"Embodiments described herein are directed to migrating affected services away from a faulted cloud node and to handling faults during an upgrade. In one scenario, a computer system determines that virtual machines running on a first cloud node are in a faulted state. The computer system determines which cloud resources on the first cloud node were allocated to the faulted virtual machine, allocates the determined cloud resources of the first cloud node to a second, different cloud node and re-instantiates the faulted virtual machine on the second, different cloud node using the allocated cloud resources.",9940210
9942167,2018-04-10,53,B2,"A utility computing portal supports public and private modules for application development in a cloud computing environment. The public nodules support downloads, customer support and access to a development community. The private modules are accessible to users with valid login credentials or those authenticated via a related entity, such as a Live ID. The private modules may include modules for testing, analysis, and billing. The utility computing portal also supports access to application configuration, for example, allowing a manager to change the number of front end and backend physical/virtual machines available to various application roles.",9942167
9942179,2018-04-10,48,B2,"Generally in a computing environment, executing work based on time (i.e. according to a predetermined schedule) is a common need. However, in cloud based systems, scheduled work may be expensive to customers as generally customers rent system resources. Thus, having a processor dedicated to performing actions that have been pre-scheduled can be expensive. This application describes using a continuation-based runtime for scheduling time-bound and/or periodic work in a distributed (i.e. cloud) system. A system architecture and computer-implemented method are described that deploy an environment-independent action to a remote-based system (such as a cloud computing system, for example). The action is limited to using a predetermined amount of resources and is limited to simple, non-cpu intensive orchestrations of network calls. A schedule is defined for the action, and the action is then called in a processor-independent fashion (for example, by using a continuation based runtime) such that state of the action is maintained independent of the processor on which the action is being executed.",9942179
9946970,2018-04-17,8,B2,"Embodiments described herein are directed to methods and systems for performing neural network computations on encrypted data. Encrypted data is received from a user. The encrypted data is encrypted with an encryption scheme that allows for computations on the ciphertext to generate encrypted results data. Neural network computations are performed on the encrypted data, using approximations of neural network functions to generate encrypted neural network results data from encrypted data. The approximations of neural network functions can approximate activation functions, where the activation functions are approximated using polynomial expressions. The encrypted neural network results data are communicated to the user associated with the encrypted data such that the user decrypts the encrypted data based on the encryption scheme. The functionality of the neural network system can be provided using a cloud computing platform that supports restricted access to particular neural networks.",9946970
9950431,2018-04-24,16,B2,"Initial interaction between a mobile robot and at least one user is described herein. The mobile robot captures several images of its surroundings, and identifies existence of a user in at least one of the several images. The robot then orients itself to face the user, and outputs an instruction to the user with regard to the orientation of the user with respect to the mobile robot. The mobile robot captures images of the face of the user responsive to detecting that the user has followed the instruction. Information captured by the robot is uploaded to a cloud-storage system, where information is included in a profile of the user and is shareable with others.",9950431
9953038,2018-04-24,13,B2,"The efficient backing up of a hierarchical system in cloud blob storage. The hierarchical structure of the system as it existed at a prior instance in time is reconstructed. A change journal that represents changes in the file system that prior instant in time is then used to formulate an updated file system hierarchy as it exists at a second instant in time. An updated injected representation of the file system, and updated file system reversal information is then formulated and provided to cloud blob storage. The injected representation of the file system is a one-to-one function of the content of the file system, in that the reversal information can be used to recover the content of the file system. Injected representations of various nodes in the system hierarchy may also be remotely stored.",9953038
9953086,2018-04-24,18,B2,"Media files may be prioritized based on user behavior data and social data associated with individual media files. A process of prioritizing media files may include accessing user behavior data associated with individual media files in a set of media files that are stored on a client device of a user or in a cloud-based storage location associated with the user, accessing social data associated with one or more media files of the set of media files that are determined to have been shared on a media file sharing service, and ranking the set of media files based at least in part on the user behavior data and the social data.",9953086
9953426,2018-04-24,211,B2,"Digitizing objects in a picture is discussed herein. A user presents the object to a camera, which captures the image comprising color and depth data for the front and back of the object. For both front and back images, the closest point to the camera is determined by analyzing the depth data. From the closest points, edges of the object are found by noting large differences in depth data. The depth data is also used to construct point cloud constructions of the front and back of the object. Various techniques are applied to extrapolate edges, remove seams, extend color intelligently, filter noise, apply skeletal structure to the object, and optimize the digitization further. Eventually, a digital representation is presented to the user and potentially used in different applications (e.g., games, Web, etc.).",9953426
9961114,2018-05-01,9,B2,"A method includes acts for establishing a subscription for an entity. The method includes receiving, at a cloud service provider, a request from an entity to establish a subscription. The request includes credentials for the entity that are not proper credentials for an organization associated with the entity that the entity should use to access services for the organization. The method further includes performing a corrective action based on detecting one or more factors to determine that the entity is associated with the organization. The method further includes providing services based on the corrective action.",9961114
9965312,2018-05-08,30,B2,"Debugging capabilities for software running in a cloud-computing environment are disclosed. A controller identifies which machines in the cloud are running instances of software to be debugged. An agent is deployed onto the machines in the cloud to facilitate communication with the developer's machine. When the developer wants to debug software on the agent's machine, the agent downloads and installs a monitor onto the machine. The agent configures the machine for remote debugging via the monitor. A security mechanism ensures that only authenticated developers can access the monitor and the remote machine for debugging. A controller automatically determines which machines can be debugged, updates a list of processes available for debugging on the machines, and identifies how to connect a developer's debugging client to the machines. The controller permits remote debugging only upon request from an authenticated developer and only for those processes that the developer is permitted to debug.",9965312
9986016,2018-05-29,23,B2,"Download manager integration with a cloud storage platform is described. In one or more implementations, a web page is navigated to using a web platform. User input to the web page to download content referenced in the web page is detected. For example, the web page may include a download link that is selected by the user to download content such as a media file, word processing file, and so forth. In response to detecting the user input to download the content, a download manager automatically, and without any additional user input, initiates a download of the content to a cloud storage database that is remote from the computing device.",9986016
