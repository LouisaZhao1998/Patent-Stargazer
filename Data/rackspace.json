{"assignees": [{"assignee_organization": "Rackspace US, Inc.", "assignee_id": "a73a49e7-138a-4ec1-b24b-d446db7b9027", "assignee_lastknown_city": "San Antonio", "assignee_total_num_inventors": "58", "assignee_total_num_patents": "87", "patents": [{"patent_number": "10061786", "patent_date": "2018-08-28", "patent_num_combined_citations": "16", "patent_kind": "B2", "patent_title": "Providing a database as a service in a multi-tenant environment", "patent_abstract": "In one embodiment, the present invention is directed to a system with multiple computing hosts each having a hypervisor to provide a virtual environment for the host and one or more containers each including a database instance and at least one database. These databases, and the database instance can be provided as a service to a user of a multi-tenant environment.", "patent_id": "10061786"}, {"patent_number": "10069690", "patent_date": "2018-09-04", "patent_num_combined_citations": "110", "patent_kind": "B2", "patent_title": "Methods and systems of tracking and verifying records of system change events in a distributed network system", "patent_abstract": "This disclosure has reference to verifying records of system change events in a distributed network system providing cloud services. In one embodiment, the methods and systems observe system update messages sent and received among components of the distributed network system, generate a record of the state of the object in response to the update messages, and compare the record of the state of the object with information from a periodic system status message to verify the accuracy of the periodic system status message. Advantageously, the present embodiments provide increased reliability for system status tracking, resource management, and billing for consumption of resources in distributed network systems. Additional benefits and advantages of the present embodiments will become evident in the following description.", "patent_id": "10069690"}, {"patent_number": "10078529", "patent_date": "2018-09-18", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Wake-on-LAN and instantiate-on-LAN in a cloud computing system", "patent_abstract": "Several different embodiments of a flexible virtual machine management system are described. The virtual machine management system is used to instantiate, wake, move, sleep, and destroy individual operating environments in a cloud or cluster. In various embodiments, the virtual machine management system uses single messages to perform complex operations, allowing for flexible and scalable use of virtual resources in a cluster while still reducing energy consumption to the minimum possible level. In one preferred embodiment, Wake-on-LAN packets are used as the messages.", "patent_id": "10078529"}, {"patent_number": "10104175", "patent_date": "2018-10-16", "patent_num_combined_citations": "52", "patent_kind": "B2", "patent_title": "Massively scalable object storage system", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "10104175"}, {"patent_number": "10108208", "patent_date": "2018-10-23", "patent_num_combined_citations": "9", "patent_kind": "B2", "patent_title": "System and method of rack management", "patent_abstract": "A rack management method and system is disclosed. The method includes detecting the presence of a computing device releasably mounted in a frame, the detecting based on an electrical connection established between a configuration bar disposed in a rear portion of the frame and the computing device, and determining a physical location of the computing device within the frame based on the electrical connection. The method also includes retrieving management information about the computing device from a profile storage disposed within the computing device via the electrical connection and storing the management information in a management table, the management table associating the computing device with the physical location within the frame.", "patent_id": "10108208"}, {"patent_number": "10157077", "patent_date": "2018-12-18", "patent_num_combined_citations": "35", "patent_kind": "B2", "patent_title": "Method and system for transferring a virtual machine", "patent_abstract": "A virtual machine management system is used to instantiate, wake, move, sleep, and destroy individual operating environments in a cloud or cluster. In various embodiments, there is a method and system for transferring an operating environment from a first host to a second host. The first host contains an active environment, with a disk and memory. The disk is snapshotted while the operating environment on the first host is still live, and the snapshot is transferred to the second host. After the initial snapshot is transferred, a differential update using rsync or a similar mechanism can be used to transfer just the changes from the snapshot from the first to the second host. In a further embodiment, the contents of the memory are also transferred. This memory can be transferred as a snapshot after pausing the active environment, or by synchronizing the memory spaces between the two hosts.", "patent_id": "10157077"}, {"patent_number": "10177996", "patent_date": "2019-01-08", "patent_num_combined_citations": "2", "patent_kind": "B2", "patent_title": "System and method for validating documentation of representational state transfer (REST) services", "patent_abstract": "A validation tool is provided for a representational state transfer (REST) service. In one embodiment, a method for validating documentation of a REST service includes including detecting one or more messages for a REST service by a validator, wherein the one or more messages are intercepted for the REST service, translating documentation of the REST service, by the validator, into a representation of an automaton, and validating the one or more messages by the validator based on the automaton, wherein validation of the messages determines conformance of the REST service to the documentation of the REST service.", "patent_id": "10177996"}, {"patent_number": "10185497", "patent_date": "2019-01-22", "patent_num_combined_citations": "3", "patent_kind": "B2", "patent_title": "Cluster federation and trust in a cloud environment", "patent_abstract": "An improved scalable object storage system allows multiple clusters to work together. In one embodiment, a trust and federation relationship is established between a first cluster and a second cluster. This is done by designating a first cluster as a trust root. The trust root receives contact from another cluster, and the two clusters exchange cryptographic credentials. The two clusters mutually authenticate each other based upon the credentials, and optionally relative to a third information service, and establish a service connection. Services from the remote cluster are registered as being available to the cluster designated as the trust root. Multi-cluster gateways can also be designated as the trust root, and joined clusters can be mutually untrusting. Two one-way trust and federation relationships can be set up to form a trusted bidirectional channel.", "patent_id": "10185497"}, {"patent_number": "10191756", "patent_date": "2019-01-29", "patent_num_combined_citations": "40", "patent_kind": "B2", "patent_title": "Hypervisor-agnostic method of configuring a virtual machine", "patent_abstract": "In one embodiment, there is a method for configuring a virtual machine where there are two storage mechanisms available to the virtual machine: a first storage containing virtual machine operating information, and a second storage including virtual machine configuration information. The configuration information in the second storage is used to configure the virtual machine, including changing the information in the operating storage. The configuration information can pertain to the hypervisor, any logical container within the hypervisor, and any operating environment within one of the logical containers. In a further embodiment, the configuration information from the second storage can be saved and provided to another virtual machine, and used to configure the second virtual machine in a similar fashion. Each virtual machine can have an independent copy of the second storage, or the storage can be mounted in the first machine, unmounted, and then mounted in the second machine.", "patent_id": "10191756"}, {"patent_number": "10209893", "patent_date": "2019-02-19", "patent_num_combined_citations": "44", "patent_kind": "B2", "patent_title": "Massively scalable object storage for storing object replicas", "patent_abstract": "An example method for storing data includes providing a plurality of physical storage pools, each storage pool including a plurality of storage nodes coupled to a network. The method also includes mapping a partition of a plurality of partitions to a set of physical storage pools, where each physical storage pool of the set of physical storage pools is located in a different availability zone, and the storage nodes within an availability zone are subject to a correlated loss of access to stored data. The method further includes receiving a data management request over the network, the data management request being associated with a data object. The method also includes identifying a first partition of the plurality of partitions corresponding to the received data management request and manipulating the data object in the physical storage pools mapped to the first partition in accordance with the data management request.", "patent_id": "10209893"}, {"patent_number": "10210567", "patent_date": "2019-02-19", "patent_num_combined_citations": "64", "patent_kind": "B2", "patent_title": "Market-based virtual machine allocation", "patent_abstract": "A cloud computing system management system including a plurality of computing devices configured to host virtual machine instances, each computing device in the plurality of computing devices including a local agent that continuously evaluates the observed load relative to a utility maximization function. If observed load is higher than a calculated optimal level, individual loading processes are offered for \u201csale\u201d via a market scheduler. If observed load is lower than a calculated optimal level, then available capacity is offered as a bid via the market scheduler. The market scheduler matches bids with available processes and coordinates the transfer of load from the selling device to the buying device. The offered prices and utility maximization functions can be employed to optimize the performance of the cloud system as a whole.", "patent_id": "10210567"}, {"patent_number": "10223506", "patent_date": "2019-03-05", "patent_num_combined_citations": "11", "patent_kind": "B2", "patent_title": "Self-destructing files in an object storage system", "patent_abstract": "An object storage system providing a secure object destruction and deletion service is provided. The destruction and deletion of files can be handled through secure overwriting of files on a storage medium or through cryptographic scrambling of file contents followed by subsequent deletion from a file table. The triggering of secure deletion can be periodically scheduled or dependent upon some particular event, making files self-destructing. Methods and systems for periodic re-authorization of files are also provided, allowing self-destructing files to be persisted in an available state.", "patent_id": "10223506"}, {"patent_number": "10516623", "patent_date": "2019-12-24", "patent_num_combined_citations": "36", "patent_kind": "B2", "patent_title": "Pluggable allocation in a cloud computing system", "patent_abstract": "In one embodiment, a cloud computing system provides user extensibility by providing a plugin interface for major systems. Plugin interfaces for a compute service, object service, network service, authentication and authorization service, message service, and image service are disclosed. One or more of the plugin interfaces can be used to alter the allocation of virtual to physical resources across multiple services. Compound services and smart allocation facilities are possible with user-directed modification.", "patent_id": "10516623"}, {"patent_number": "8411839", "patent_date": "2013-04-02", "patent_num_combined_citations": "1", "patent_kind": "B1", "patent_title": "System and method for providing enhanced client satisfaction during phone interactions by intelligent automatic call routing", "patent_abstract": "A system and method for providing enhanced client satisfaction during phone interactions by intelligent automatic call routings to a relevant client support agent. The invention includes methods to automatically determine and anticipate client needs based on the information the host has about the client.", "patent_id": "8411839"}, {"patent_number": "8510267", "patent_date": "2013-08-13", "patent_num_combined_citations": "35", "patent_kind": "B2", "patent_title": "Synchronization of structured information repositories", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "8510267"}, {"patent_number": "8538926", "patent_date": "2013-09-17", "patent_num_combined_citations": "37", "patent_kind": "B2", "patent_title": "Massively scalable object storage system for storing object replicas", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "8538926"}, {"patent_number": "8554951", "patent_date": "2013-10-08", "patent_num_combined_citations": "37", "patent_kind": "B2", "patent_title": "Synchronization and ordering of multiple accessess in a distributed system", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "8554951"}, {"patent_number": "8661287", "patent_date": "2014-02-25", "patent_num_combined_citations": "3", "patent_kind": "B2", "patent_title": "Automatically performing failover operations with a load balancer", "patent_abstract": "A load balancer includes a failover logic unit to identify servers to execute services, generate and store in the load balancer a failover rule and a service rule, and to determine a failure in a first server that executes a first service responsive to a lack of response by the first server to a keepalive message sent by the load balancer to the first server. The load balancer can then perform an operation to cause an automatic failover of the first service to another server based on the failover and service rules.", "patent_id": "8661287"}, {"patent_number": "8712975", "patent_date": "2014-04-29", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Modification of an object replica", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "8712975"}, {"patent_number": "8712982", "patent_date": "2014-04-29", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Virtual multi-cluster clouds", "patent_abstract": "An improved scalable object storage system allows multiple clusters to work together. Users working with a first cluster, or with a multi-cluster gateway, can ask for services and have the request or data transparently proxied to a second cluster. This gives transparent cross-cluster replication, as well as multi-cluster compute or storage farms based upon spot availability or various provisioning policies. Vendors providing a cloud storage \u201cfrontend\u201d can provide multiple backends simultaneously. In one embodiment, a multi-cluster gateway can have a two, three, or higher-level ring that transparently matches an incoming request with the correct cluster. In the ring, a request is first mapped to an abstract \u201cpartition\u201d based on a consistent hash function, and then one or more constrained mappings map the partition number to an actual resource. In another embodiment, the multi-cluster gateway is a dumb gateway, and the rings are located only at the cluster level.", "patent_id": "8712982"}, {"patent_number": "8724322", "patent_date": "2014-05-13", "patent_num_combined_citations": "9", "patent_kind": "B2", "patent_title": "Targeted liquid cooling for a system", "patent_abstract": "A cooling system for computer systems is disclosed. In one aspect, a method includes providing a flow of liquid coolant through conduits positioned within a server system, and spraying the liquid coolant via at least one outlet mechanism of each of the conduits. The outlet mechanisms are adapted to be placed in close proximity to a corresponding target component of one of the servers, to cool the target component.", "patent_id": "8724322"}, {"patent_number": "8751639", "patent_date": "2014-06-10", "patent_num_combined_citations": "26", "patent_kind": "B2", "patent_title": "Event queuing and distribution system", "patent_abstract": "A REST-based event distribution system is described, with particular applicability to the distribution of distributed filesystem notifications over a high-latency best-effort network such as the Internet. In one embodiment, event channels are mapped to URL spaces and created and distributed through the use of HTTP POST and GET requests. The system is optimized for short polling by clients; an event history is maintained to buffer messages and maintain the idempotence of requests. In another embodiment, the events are registered as a SIP event pack allowing for the distribution of filesystem events.", "patent_id": "8751639"}, {"patent_number": "8775375", "patent_date": "2014-07-08", "patent_num_combined_citations": "46", "patent_kind": "B2", "patent_title": "Higher efficiency storage replication using compression", "patent_abstract": "An improved scalable object storage system includes methods and systems allowing multiple clusters to work together. In one embodiment, there is a multi-cluster synchronization system between two or more clusters. The multi-cluster synchronization system uses variable compression to optimize the transfer of information between the clusters. Compression is used not only to minimize the total number of bytes sent between the two clusters, but to dynamically vary the size of the objects sent across the wire to optimize for higher throughput after considering packet loss, TCP windows, and block sizes. This includes both the packaging of multiple small files together into one larger compressed file, saving on TCP and header overhead, but also the chunking of large files into multiple smaller files that are less likely to have difficulties due to intermittent network congestion or errors.", "patent_id": "8775375"}, {"patent_number": "8800011", "patent_date": "2014-08-05", "patent_num_combined_citations": "14", "patent_kind": "B2", "patent_title": "Validating pointer records in a domain name system (DNS) service", "patent_abstract": "In one embodiment a method for receiving a request from a user to update a pointer record of a domain name system (DNS) in a DNS service includes issuing a query from the DNS service to a resource of a first service of the data center from the DNS service using a uniform resource indicator (URI) of the request corresponding to the resource, receiving a list of Internet protocol (IP) addresses in the DNS service from the first service, determining whether an IP address received in the request corresponds to one of the IP addresses of the list, and if so, enabling the user to update the pointer record.", "patent_id": "8800011"}, {"patent_number": "8812911", "patent_date": "2014-08-19", "patent_num_combined_citations": "8", "patent_kind": "B2", "patent_title": "Distributed testing of a software platform", "patent_abstract": "A system includes a platform server with a software platform on which platform targeting applications (PTAs) execute. An update server may be coupled to the platform server to provide an update to this software platform. Responsive to notification to independent software vendors of the PTAs, results of regression testing performed on at least some of the PTAs can be received in a test server, which may enable commitment of the update based on at least some of the results.", "patent_id": "8812911"}, {"patent_number": "8832818", "patent_date": "2014-09-09", "patent_num_combined_citations": "6", "patent_kind": "B2", "patent_title": "Automated hybrid connections between multiple environments in a data center", "patent_abstract": "A multi-tenant data center environment includes a dedicated domain having at least one dedicated server associated with a client and a cloud domain having at least one cloud server associated with the client. The cloud server may have a public interface to a public network and a private interface to a private network. In turn, a network device is coupled between the dedicated domain and the public network, and is further coupled to the cloud server via the private network. A controller of the data center may be used to determine presence of the cloud server, and configure the network device to allow certain traffic to pass directly to the dedicated domain, while preventing other traffic from this direct path, based on access controls of the network device.", "patent_id": "8832818"}, {"patent_number": "8839249", "patent_date": "2014-09-16", "patent_num_combined_citations": "8", "patent_kind": "B2", "patent_title": "Customizing automated process management", "patent_abstract": "Embodiments of an event-driven process management and automation system are disclosed. Such system may be particularly appropriate for a multi-tenant environment so that a single process handling flow may be generated for a given process. Because in a multi-tenant environment many different entities may desire to customize or optimize this process handling flow for their particular usage, modifications to the process flow may be easily handled by a non-technical user to realize process modification without incurring additional development costs. Using a multi-level hierarchical inheritance model in accordance with an embodiment of the present invention, a process may be standardized, with focused customization available on a macro and/or micro level.", "patent_id": "8839249"}, {"patent_number": "8930693", "patent_date": "2015-01-06", "patent_num_combined_citations": "36", "patent_kind": "B2", "patent_title": "Cluster federation and trust", "patent_abstract": "An improved scalable object storage system allows multiple clusters to work together. In one embodiment, a trust and federation relationship is established between a first cluster and a second cluster. This is done by designating a first cluster as a trust root. The trust root receives contact from another cluster, and the two clusters exchange cryptographic credentials. The two clusters mutually authenticate each other based upon the credentials, and optionally relative to a third information service, and establish a service connection. Services from the remote cluster are registered as being available to the cluster designated as the trust root. Multi-cluster gateways can also be designated as the trust root, and joined clusters can be mutually untrusting. Two one-way trust and federation relationships can be set up to form a trusted bidirectional channel.", "patent_id": "8930693"}, {"patent_number": "8964735", "patent_date": "2015-02-24", "patent_num_combined_citations": "10", "patent_kind": "B2", "patent_title": "Translating media access control (MAC) addresses in a network hierarchy", "patent_abstract": "In one embodiment a method includes receiving a packet including a destination media access control (MAC) address field having a MAC address of a hypervisor and a destination Internet protocol (IP) address field having an IP address of a virtual machine (VM) coupled to the hypervisor. The method further determines a MAC address of the VM using the IP address of the VM and applies the VM MAC address to the destination MAC address field of the packet to forward the packet to the VM.", "patent_id": "8964735"}, {"patent_number": "8965921", "patent_date": "2015-02-24", "patent_num_combined_citations": "90", "patent_kind": "B2", "patent_title": "Data management and indexing across a distributed database", "patent_abstract": "In one embodiment, a distributed database system supporting flexible configuration of data clusters is disclosed. The system includes a cluster manager, an index, and a dataset distributed over one or more database clusters. Where the nodes of the clusters may report ownership of a particular range, the index contains an alternate range. The cluster manager receives requests to access a range of data within database and queries the index to determine the appropriate nodes and/or clusters with which to connect. The cluster manager then directs the requestor to connect to the specified nodes and/or clusters.", "patent_id": "8965921"}, {"patent_number": "8977735", "patent_date": "2015-03-10", "patent_num_combined_citations": "26", "patent_kind": "B2", "patent_title": "Providing a database as a service in a multi-tenant environment", "patent_abstract": "In one embodiment, the present invention is directed to a system with multiple computing hosts each having a hypervisor to provide a virtual environment for the host and one or more containers each including a database instance and at least one database. These databases, and the database instance can be provided as a service to a user of a multi-tenant environment.", "patent_id": "8977735"}, {"patent_number": "8990257", "patent_date": "2015-03-24", "patent_num_combined_citations": "51", "patent_kind": "B2", "patent_title": "Method for handling large object files in an object storage system", "patent_abstract": "Several different embodiments of a segmented object storage system are described. The object storage system divides files into a number of object segments, each segment corresponding to a portion of the object, and stores each segment individually in the cloud storage system. The system also generates and stores a manifest file describing the relationship of the various segments to the original data file. Requests to retrieve the segmented file are fulfilled by consulting the manifest file and using the information from the manifest to reconstitute the original data file from the constituent segments. Modifying, appending to, or truncating the object is accomplished by manipulating individual segments and the manifest file. In further embodiments, manipulation of the individual object segments and/or the manifest is used to implement copy-on-write, snapshotting, software transactional memory, and peer-to-peer transmission of the large file.", "patent_id": "8990257"}, {"patent_number": "9009319", "patent_date": "2015-04-14", "patent_num_combined_citations": "14", "patent_kind": "B2", "patent_title": "Optimizing allocation of on-demand resources using performance", "patent_abstract": "In one embodiment, the present invention can be used to efficiently allocate on-demand resources to a customer of a data center such as a multi-tenant data center having resources dedicated to given customers, as well as on-demand resources that can be flexibly provisioned to customers using a performance zone concept realized via logical switches to present a single logical network to the customer.", "patent_id": "9009319"}, {"patent_number": "9015212", "patent_date": "2015-04-21", "patent_num_combined_citations": "20", "patent_kind": "B2", "patent_title": "System and method for exposing cloud stored data to a content delivery network", "patent_abstract": "A system for exposing data stored in a cloud computing system to a content delivery network provider includes a database configured to receive and store metadata about the data, the database being implemented in the cloud computing system to store configuration metadata for the data related to the content delivery network, and an origin server configured to receive requests for the data from the content delivery network provider, and configured to provide the data to the content delivery network provider based on the metadata.", "patent_id": "9015212"}, {"patent_number": "9015709", "patent_date": "2015-04-21", "patent_num_combined_citations": "34", "patent_kind": "B2", "patent_title": "Hypervisor-agnostic method of configuring a virtual machine", "patent_abstract": "In one embodiment, there is a method for configuring a virtual machine where there are two storage mechanisms available to the virtual machine: a first storage containing virtual machine operating information, and a second storage including virtual machine configuration information. The configuration information in the second storage is used to configure the virtual machine, including changing the information in the operating storage. The configuration information can pertain to the hypervisor, any logical container within the hypervisor, and any operating environment within on of the logical containers. In a further embodiment, the configuration information from the second storage can be saved and provided to another virtual machine, and used to configure the second virtual machine in a similar fashion. Each virtual machine can have an independent copy of the second storage, or the storage can be mounted in the first machine, unmounted, and then mounted in the second machine.", "patent_id": "9015709"}, {"patent_number": "9021137", "patent_date": "2015-04-28", "patent_num_combined_citations": "44", "patent_kind": "B2", "patent_title": "Massively scalable object storage system", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "9021137"}, {"patent_number": "9027024", "patent_date": "2015-05-05", "patent_num_combined_citations": "51", "patent_kind": "B2", "patent_title": "Market-based virtual machine allocation", "patent_abstract": "A cloud computing system management system including a plurality of computing devices configured to host virtual machine instances, each computing device in the plurality of computing devices including a local agent that continuously evaluates the observed load relative to a utility maximization function. If observed load is higher than a calculated optimal level, individual loading processes are offered for \u201csale\u201d via a market scheduler. If observed load is lower than a calculated optimal level, then available capacity is offered as a bid via the market scheduler. The market scheduler matches bids with available processes and coordinates the transfer of load from the selling device to the buying device. The offered prices and utility maximization functions can be employed to optimize the performance of the cloud system as a whole.", "patent_id": "9027024"}, {"patent_number": "9027087", "patent_date": "2015-05-05", "patent_num_combined_citations": "1", "patent_kind": "B2", "patent_title": "Method and system for identity-based authentication of virtual machines", "patent_abstract": "A cloud computing system configured to run virtual machine instances is disclosed. The cloud computing system assigns an identity to each virtual machine instance. When the virtual machine instance accesses initial configuration resources, it provides this identity to the resources to authenticate itself. This allows for flexible and extensible initial configuration of virtual machine instances.", "patent_id": "9027087"}, {"patent_number": "9116629", "patent_date": "2015-08-25", "patent_num_combined_citations": "40", "patent_kind": "B2", "patent_title": "Massively scalable object storage for storing object replicas", "patent_abstract": "An example method for storing data includes providing a plurality of physical storage pools, each storage pool including a plurality of storage nodes coupled to a network. The method also includes mapping a partition of a plurality of partitions to a set of physical storage pools, where each physical storage pool of the set of physical storage pools is located in a different availability zone, and the storage nodes within an availability zone are subject to a correlated loss of access to stored data. The method further includes receiving a data management request over the network, the data management request being associated with a data object. The method also includes identifying a first partition of the plurality of partitions corresponding to the received data management request and manipulating the data object in the physical storage pools mapped to the first partition in accordance with the data management request.", "patent_id": "9116629"}, {"patent_number": "9130902", "patent_date": "2015-09-08", "patent_num_combined_citations": "6", "patent_kind": "B2", "patent_title": "Automated hybrid connections between multiple environments in a data center", "patent_abstract": "A multi-tenant data center environment includes a dedicated domain having at least one dedicated server associated with a client and a cloud domain having at least one cloud server associated with the client. The cloud server may have a public interface to a public network and a private interface to a private network. In turn, a network device is coupled between the dedicated domain and the public network, and is further coupled to the cloud server via the private network. A controller of the data center may be used to determine presence of the cloud server, and configure the network device to allow certain traffic to pass directly to the dedicated domain, while preventing other traffic from this direct path, based on access controls of the network device.", "patent_id": "9130902"}, {"patent_number": "9135145", "patent_date": "2015-09-15", "patent_num_combined_citations": "37", "patent_kind": "B2", "patent_title": "Methods and systems of distributed tracing", "patent_abstract": "A system and methods are provided for distributed tracing in a distributed application. In one embodiment, a method includes observing a plurality of messages sent and received among components of the distributed application, generating a probabilistic model of a call flow from observed messages of the distributed system, and constructing a call flow graph based on the probabilistic model for the distributed application. Distributed tracing may include observing messages by performing the subscription-based observation techniques and operations to receive, message traces describing messages being communicated among components of the distributed application. In this regard, the tracing service may merge message traces from different instrumentation points with message traces obtained by observing message queues to generate a probabilistic model and call flow graph. A distributed application developer or other relevant user may benefit in efficiently and effectively tracking down a cause of an abnormal behavior or analyzing performance profiles.", "patent_id": "9135145"}, {"patent_number": "9141410", "patent_date": "2015-09-22", "patent_num_combined_citations": "32", "patent_kind": "B2", "patent_title": "Pluggable allocation in a cloud computing system", "patent_abstract": "In one embodiment, a cloud computing system provides user extensibility by providing a plugin interface for major systems. Plugin interfaces for a compute service, object service, network service, authentication and authorization service, message service, and image service are disclosed. One or more of the plugin interfaces can be used to alter the allocation of virtual to physical resources across multiple services. Compound services and smart allocation facilities are possible with user-directed modification.", "patent_id": "9141410"}, {"patent_number": "9183213", "patent_date": "2015-11-10", "patent_num_combined_citations": "8", "patent_kind": "B2", "patent_title": "Indirection objects in a cloud storage system", "patent_abstract": "Several embodiments using indirection objects to organize data in a cloud storage system are disclosed. An indirection object stores associations to different variants or segments of an object. The indirection object receives requests for the objects and responds with the appropriate variant, segment, or segments of the object. The variant, segment, or segments returned may vary from request to request.", "patent_id": "9183213"}, {"patent_number": "9197483", "patent_date": "2015-11-24", "patent_num_combined_citations": "42", "patent_kind": "B2", "patent_title": "Massively scalable object storage", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "9197483"}, {"patent_number": "9207961", "patent_date": "2015-12-08", "patent_num_combined_citations": "12", "patent_kind": "B2", "patent_title": "Cloud defragmentation", "patent_abstract": "In an embodiment, a method includes identifying, in a defragmentation scheduling logic of a first system of a data center, a first virtual machine (VM) of a first server of the data center to select for migration based on a cost determined according to a source algorithm, identifying a second server of the data center to select for receipt of the first VM based on a cost determined according to a destination algorithm, where the second server has available free space to receive the first VM and the available free space has been scrubbed prior to the identification, and migrating a substantial plurality of VMs between servers of the data center based on cost according to the source and destination algorithms, to defragment the data center.", "patent_id": "9207961"}, {"patent_number": "9231988", "patent_date": "2016-01-05", "patent_num_combined_citations": "42", "patent_kind": "B2", "patent_title": "Intercluster repository synchronizer and method of synchronizing objects using a synchronization indicator and shared metadata", "patent_abstract": "An intercluster repository synchronizer and method for synchronizing objects are disclosed. An example intercluster repository synchronizer includes an information processing system, including a processor, computer-readable medium, and network device. The intercluster repository synchronizer includes a structured information repository on the computer-readable medium. The structured information repository contains a plurality of records corresponding to a selected group of stored information objects. The intercluster repository synchronizer further includes a synchronization indicator that stores an address associated with a remote replication target. The intercluster repository synchronizer also includes a replicator, operable to send a message using the network device to the replication target responsive to changes in the structured information repository, and further operable to receive a message that a plurality of stored information objects have been duplicated at the remote replication target. The duplicated stored information objects are selected based on a shared metadata indicator stored in the structured information repository.", "patent_id": "9231988"}, {"patent_number": "9237193", "patent_date": "2016-01-12", "patent_num_combined_citations": "42", "patent_kind": "B2", "patent_title": "Modification of an object replica", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "9237193"}, {"patent_number": "9251451", "patent_date": "2016-02-02", "patent_num_combined_citations": "5", "patent_kind": "B2", "patent_title": "Providing locality information via light sources", "patent_abstract": "In an embodiment, an apparatus includes a rack having a plurality of rack-mounted devices and a strip coupled to a portion of the rack and including a plurality of segments, each with a light source. The rack-mounted devices may each include or be associated with a photosensor to be in communication with the light source.", "patent_id": "9251451"}, {"patent_number": "9268586", "patent_date": "2016-02-23", "patent_num_combined_citations": "39", "patent_kind": "B2", "patent_title": "Wake-on-LAN and instantiate-on-LAN in a cloud computing system", "patent_abstract": "Several different embodiments of a flexible virtual machine management system are described. The virtual machine management system is used to instantiate, wake, move, sleep, and destroy individual operating environments in a cloud or cluster. In various embodiments, the virtual machine management system uses single messages to perform complex operations, allowing for flexible and scalable use of virtual resources in a cluster while still reducing energy consumption to the minimum possible level. In one preferred embodiment, Wake-on-LAN packets are used as the messages.", "patent_id": "9268586"}, {"patent_number": "9306988", "patent_date": "2016-04-05", "patent_num_combined_citations": "9", "patent_kind": "B2", "patent_title": "Appending to files via server-side chunking and manifest manipulation", "patent_abstract": "A segmented object storage system is an object storage system that divides files into a number of object segments, each segment corresponding to a portion of an object, and stores each segment individually in the storage system. The system also generates and stores a manifest file describing the relationship of the various segments to the original data file. Requests to retrieve the segmented file are fulfilled by consulting the manifest file and using the information from the manifest to reconstitute the original data file from the constituent segments. Modifying, appending to, or truncating the object is accomplished by manipulating individual segments and the manifest file. Manipulation of the individual object segments and/or the manifest can be used to implement copy-on-write, snapshotting, software transactional memory, and peer-to-peer transmission of the large file.", "patent_id": "9306988"}, {"patent_number": "9338922", "patent_date": "2016-05-10", "patent_num_combined_citations": "14", "patent_kind": "B2", "patent_title": "Rack adapter apparatus and method", "patent_abstract": "Embodiments of the present disclosure disclose a rack adapter apparatus. The rack adapter apparatus includes a shelf configured to be mounted in a rack frame having a front opening of a first width and a rear opening of the first width, the shelf being further configured to support a computing device thereon, the computing device having a second width less than then first width and having a back-side port disposed thereon, the back-side port facing the rear opening when the computing device is supported by the shelf and the shelf is mounted in the rack frame. The rack adapter apparatus also includes a pass-through jack having a front port facing the front opening and a rear port facing the rear opening, the front and rear ports being electrically coupled, and the rear port being configured to be communicatively coupled to the back-side port of the computing device.", "patent_id": "9338922"}, {"patent_number": "9374395", "patent_date": "2016-06-21", "patent_num_combined_citations": "29", "patent_kind": "B2", "patent_title": "Parallel upload and download of large files using bittorrent", "patent_abstract": "Several different embodiments of a segmented object storage system are described. The object storage system divides files into a number of object segments, each segment corresponding to a portion of the object, and stores each segment individually in the cloud storage system. The system also generates and stores a manifest file describing the relationship of the various segments to the original data file. Requests to retrieve the segmented file are fulfilled by consulting the manifest file and using the information from the manifest to reconstitute the original data file from the constituent segments. Modifying, appending to, or truncating the object is accomplished by manipulating individual segments and the manifest file. In further embodiments, manipulation of the individual object segments and/or the manifest is used to implement copy-on-write, snapshotting, software transactional memory, and peer-to-peer transmission of the large file.", "patent_id": "9374395"}, {"patent_number": "9397902", "patent_date": "2016-07-19", "patent_num_combined_citations": "83", "patent_kind": "B2", "patent_title": "Methods and systems of tracking and verifying records of system change events in a distributed network system", "patent_abstract": "This disclosure has reference to verifying records of system change events in a distributed network system providing cloud services. In one embodiment, the methods and systems observe system update messages sent and received among components of the distributed network system, generate a record of the state of the object in response to the update messages, and compare the record of the state of the object with information from a periodic system status message to verify the accuracy of the periodic system status message. Advantageously, the present embodiments provide increased reliability for system status tracking, resource management, and billing for consumption of resources in distributed network systems. Additional benefits and advantages of the present embodiments will become evident in the following description.", "patent_id": "9397902"}, {"patent_number": "9405781", "patent_date": "2016-08-02", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Virtual multi-cluster clouds", "patent_abstract": "An improved scalable object storage system includes methods and systems allowing multiple clusters to work together. Users working with a first cluster, or with a multi-cluster gateway, can ask for services and have the request or data transparently proxied to a second cluster. This gives transparent cross-cluster replication, as well as multi-cluster compute or storage farms based upon spot availability or various provisioning policies. Vendors providing a cloud storage \u201cfrontend\u201d can provide multiple backends simultaneously. In one embodiment, a multi-cluster gateway can have a two, three, or higher-level ring that transparently matches an incoming request with the correct cluster. In the ring, a request is first mapped to an abstract \u201cpartition\u201d based on a consistent hash function, and then one or more constrained mappings map the partition number to an actual resource. In another embodiment, the multi-cluster gateway is a dumb gateway, and the rings are located only at the cluster level.", "patent_id": "9405781"}, {"patent_number": "9411648", "patent_date": "2016-08-09", "patent_num_combined_citations": "5", "patent_kind": "B2", "patent_title": "Flexible resource configuration management for computing clusters", "patent_abstract": "In an embodiment, a method includes maintaining a pool of server resources, maintaining a pool of storage resources, maintaining a pool of network resources, and initializing, via a meta-cluster software manager, a multi-function cluster associated with a first customer of a datacenter including the pools. This multi-function cluster may include first servers of the pool of server resources, first storage devices of the pool of storage resources, and first network devices of the pool of network resources, and may be managed by the meta-cluster manager.", "patent_id": "9411648"}, {"patent_number": "9471384", "patent_date": "2016-10-18", "patent_num_combined_citations": "20", "patent_kind": "B2", "patent_title": "Method and system for utilizing spare cloud resources", "patent_abstract": "A cloud computing system including a computing device configured to run virtual machine instances is disclosed. The computing device includes a hypervisor program for managing the virtual machine instances. A customer virtual machine instance is run by the hypervisor program on the computing device, and a grid virtual machine instance is run by the hypervisor program on the computing device. The grid virtual machine instance is configured to run only when a resource of the computing device is not being utilized by the customer virtual machine instance.", "patent_id": "9471384"}, {"patent_number": "9483334", "patent_date": "2016-11-01", "patent_num_combined_citations": "94", "patent_kind": "B2", "patent_title": "Methods and systems of predictive monitoring of objects in a distributed network system", "patent_abstract": "Predictive monitoring of objects in a distributed network system providing cloud services is disclosed. In one embodiment, the methods and systems observing one or more update messages sent and received among components of the distributed network system, the update messages comprising information associated with a state of an object on the distributed network system, determine the state of the object in response to the one or more update messages, and reference a predictive object state model to predict occurrence of an artifact in response to the state of the object. Advantageously, the present embodiments provide advanced warning of potential failures in a distributed network systems, which may enable a system administrator or dynamic process to resolve the failure before it ever occurs. Additional benefits and advantages of the present embodiments will become evident in the following description.", "patent_id": "9483334"}, {"patent_number": "9489395", "patent_date": "2016-11-08", "patent_num_combined_citations": "50", "patent_kind": "B2", "patent_title": "System and method for exposing cloud stored data to a content delivery network", "patent_abstract": "A system for exposing data stored in a cloud computing system to a content delivery network provider includes a database configured to receive and store metadata about the data, the database being implemented in the cloud computing system to store configuration metadata for the data related to the content delivery network, and an origin server configured to receive requests for the data from the content delivery network provider, and configured to provide the data to the content delivery network provider based on the metadata.", "patent_id": "9489395"}, {"patent_number": "9501329", "patent_date": "2016-11-22", "patent_num_combined_citations": "89", "patent_kind": "B2", "patent_title": "Methods and systems for cloud computing management", "patent_abstract": "Disclosed is a management service that enables a user to establish, monitor, and control cloud computing sessions offered via third-party service providers. In some instances, the management service establishes a market space that allows a user to establish a customized cloud computing session based on computing resources offered by third-party service providers. In some instances, the management service instantiates monitoring mechanisms within the virtual servers of the cloud computing sessions to be able to monitor, assess, and provide reports and alerts pertaining to performance metrics of the various virtual servers. In some instances, the management service also allows a user to remotely transfer services from a first cloud computing session to a second cloud computing session.", "patent_id": "9501329"}, {"patent_number": "9521004", "patent_date": "2016-12-13", "patent_num_combined_citations": "19", "patent_kind": "B2", "patent_title": "Methods and systems of generating a billing feed of a distributed network", "patent_abstract": "A system and methods are provided for generating a billing feed for a distributed network system and reselling resources of the distributed network system. In one embodiment, a method includes observing a plurality of messages sent and received among components of the distributed network system, generating a call flow graph based on the plurality of messages of the distributed network system, and outputting a billing feed for the distributed network based on the call flow graph, to provide a billing feed including one or more billable events. billable events may be are based on one or more of received requests, underlying resource usage, time of usage, scope of usage. In this regard, the system may provide for one or more models of reselling resources of a distributed network system.", "patent_id": "9521004"}, {"patent_number": "9544289", "patent_date": "2017-01-10", "patent_num_combined_citations": "7", "patent_kind": "B2", "patent_title": "Method and system for identity-based authentication of virtual machines", "patent_abstract": "A cloud computing system configured to run virtual machine instances is disclosed. The cloud computing system assigns an identity to each virtual machine instance. When the virtual machine instance accesses initial configuration resources, it provides this identity to the resources to authenticate itself. This allows for flexible and extensible initial configuration of virtual machine instances.", "patent_id": "9544289"}, {"patent_number": "9552215", "patent_date": "2017-01-24", "patent_num_combined_citations": "36", "patent_kind": "B2", "patent_title": "Method and system for transferring a virtual machine", "patent_abstract": "A virtual machine management system is used to instantiate, wake, move, sleep, and destroy individual operating environments in a cloud or cluster. In various embodiments, there is a method and system for transferring an operating environment from a first host to a second host. The first host contains an active environment, with a disk and memory. The disk is snapshotted while the operating environment on the first host is still live, and the snapshot is transferred to the second host. After the initial snapshot is transferred, a differential update using rsync or a similar mechanism can be used to transfer just the changes from the snapshot from the first to the second host. In a further embodiment, the contents of the memory are also transferred. This memory can be transferred as a snapshot after pausing the active environment, or by synchronizing the memory spaces between the two hosts.", "patent_id": "9552215"}, {"patent_number": "9557807", "patent_date": "2017-01-31", "patent_num_combined_citations": "8", "patent_kind": "B2", "patent_title": "Using augmented reality to create an interface for datacenter and systems management", "patent_abstract": "In one embodiment, a method includes obtaining information to determine a location of a data center device, communicating the information and an identity of a user of a portable device to an augmented reality manager, and receiving in the portable device overlay information responsive to the communication and a type of the user. This information can then be displayed over a view of the data center device on a display of the portable device.", "patent_id": "9557807"}, {"patent_number": "9560093", "patent_date": "2017-01-31", "patent_num_combined_citations": "58", "patent_kind": "B2", "patent_title": "Higher efficiency storage replication using compression", "patent_abstract": "In one embodiment, there is a multi-cluster synchronization system between two or more clusters. The multi-cluster synchronization system uses variable compression to optimize the transfer of information between the clusters. Compression is used not only to minimize the total number of bytes sent between the two clusters, but to dynamically vary the size of the objects sent across the wire to optimize for higher throughput after considering packet loss, TCP windows, and block sizes. This includes both the packaging of multiple small files together into one larger compressed file, saving on TCP and header overhead, but also the chunking of large files into multiple smaller files that are less likely to have difficulties due to intermittent network congestion or errors. A further embodiment uses forward error correction to maximize the chances that the remote end will be able to correctly reconstitute the transmission.", "patent_id": "9560093"}, {"patent_number": "9563480", "patent_date": "2017-02-07", "patent_num_combined_citations": "11", "patent_kind": "B2", "patent_title": "Multi-level cloud computing system", "patent_abstract": "A cloud computing system includes a physical resource pool that includes a number of information processing devices. Each information processing device includes a processor, a computer-readable medium, and a network interface. The system further includes a first cloud controller to manage a first cloud infrastructure, the first cloud infrastructure operating a first set of virtualized resources, the first set of virtualized resources having access to the physical resource pool through the first cloud controller. The system further includes a second cloud controller to manage a second cloud infrastructure, the second cloud infrastructure utilizing the first set of virtual resources to operate a second set of virtual resources, the second set of virtual resources being provided access to the physical resource pool through the second cloud controller and the first cloud controller.", "patent_id": "9563480"}, {"patent_number": "9582010", "patent_date": "2017-02-28", "patent_num_combined_citations": "6", "patent_kind": "B2", "patent_title": "System and method of rack management", "patent_abstract": "A rack management method and system is disclosed. The method includes detecting the presence of a computing device releasably mounted in a frame, the detecting based on an electrical connection established between a configuration bar disposed in a rear portion of the frame and the computing device, and determining a physical location of the computing device within the frame based on the electrical connection. The method also includes retrieving management information about the computing device from a profile storage disposed within the computing device via the electrical connection and storing the management information in a management table, the management table associating the computing device with the physical location within the frame.", "patent_id": "9582010"}, {"patent_number": "9584439", "patent_date": "2017-02-28", "patent_num_combined_citations": "32", "patent_kind": "B2", "patent_title": "Pluggable allocation in a cloud computing system", "patent_abstract": "In one embodiment, a cloud computing system provides user extensibility by providing a plugin interface for major systems. Plugin interfaces for a compute service, object service, network service, authentication and authorization service, message service, and image service are disclosed. One or more of the plugin interfaces can be used to alter the allocation of virtual to physical resources across multiple services. Compound services and smart allocation facilities are possible with user-directed modification.", "patent_id": "9584439"}, {"patent_number": "9594385", "patent_date": "2017-03-14", "patent_num_combined_citations": "4", "patent_kind": "B2", "patent_title": "System and method of rack management", "patent_abstract": "A rack management method and system is disclosed. The method includes detecting the presence of a computing device releasably mounted in a frame, the detecting based on an electrical connection established between a configuration bar disposed in a rear portion of the frame and the computing device, and determining a physical location of the computing device within the frame based on the electrical connection. The method also includes retrieving management information about the computing device from a profile storage disposed within the computing device via the electrical connection and storing the management information in a management table, the management table associating the computing device with the physical location within the frame.", "patent_id": "9594385"}, {"patent_number": "9621440", "patent_date": "2017-04-11", "patent_num_combined_citations": "10", "patent_kind": "B2", "patent_title": "System and method for validating documentation of representational state transfer (REST) services", "patent_abstract": "A validation tool is provided for a representational state transfer (REST) service. In one embodiment, a method for validating documentation of a REST service includes including detecting one or more messages for a REST service by a validator, wherein the one or more messages are intercepted for the REST service, translating documentation of the REST service, by the validator, into a representation of an automaton, and validating the one or more messages by the validator based on the automaton, wherein validation of the messages determines conformance of the REST service to the documentation of the REST service.", "patent_id": "9621440"}, {"patent_number": "9626420", "patent_date": "2017-04-18", "patent_num_combined_citations": "44", "patent_kind": "B2", "patent_title": "Massively scalable object storage system", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "9626420"}, {"patent_number": "9628328", "patent_date": "2017-04-18", "patent_num_combined_citations": "13", "patent_kind": "B2", "patent_title": "Network controller with integrated resource management capability", "patent_abstract": "A system for providing network control and resource management includes a database storing a plurality of network resources. The system also includes a network controller that receives a request for a network resource. The network controller may include an resource manager that determines, based on the request, a set of available network resources from the plurality of network resources. The resource manager may provide the set of available network resources to a client and update the database based on providing the set of available network resources.", "patent_id": "9628328"}, {"patent_number": "9633054", "patent_date": "2017-04-25", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Providing a database as a service in a multi-tenant environment", "patent_abstract": "In one embodiment, the present invention is directed to a system with multiple computing hosts each having a hypervisor to provide a virtual environment for the host and one or more containers each including a database instance and at least one database. These databases, and the database instance can be provided as a service to a user of a multi-tenant environment.", "patent_id": "9633054"}, {"patent_number": "9654566", "patent_date": "2017-05-16", "patent_num_combined_citations": "27", "patent_kind": "B2", "patent_title": "Event queuing and distribution system", "patent_abstract": "A REST-based event distribution system is described, with particular applicability to the distribution of distributed filesystem notifications over a high-latency best-effort network such as the Internet. In one embodiment, event channels are mapped to URL spaces and created and distributed through the use of HTTP POST and GET requests. The system is optimized for short polling by clients; an event history is maintained to buffer messages and maintain the idempotence of requests. In another embodiment, the events are registered as a SIP event pack allowing for the distribution of filesystem events.", "patent_id": "9654566"}, {"patent_number": "9658941", "patent_date": "2017-05-23", "patent_num_combined_citations": "16", "patent_kind": "B2", "patent_title": "Methods and systems of function-specific tracing", "patent_abstract": "A system and methods are provided for function-specific tracing of a program. In one embodiment, a method includes generating a trace profile identifying one or more functions of a target program, wherein the trace profile identifies one or more functions to trace and depth of tracing for each function to be traced, loading the trace profile and the target program, identifying traced functions in the target program based on the trace profile, patching the target program to call a trace parameter for one or more functions, wherein traced functions are declared at runtime, and observing function calls for traced functions of the application. In this regard, individual functions are traced and debugged on a function-by-function basis without modifying the code or pre-arranging functions so they are traceable. As such, the scope of tracing may be dynamically limited to yield only information that is desired.", "patent_id": "9658941"}, {"patent_number": "9684453", "patent_date": "2017-06-20", "patent_num_combined_citations": "38", "patent_kind": "B2", "patent_title": "Cluster federation and trust in a cloud environment", "patent_abstract": "An improved scalable object storage system allows multiple clusters to work together. In one embodiment, a trust and federation relationship is established between a first cluster and a second cluster. This is done by designating a first cluster as a trust root. The trust root receives contact from another cluster, and the two clusters exchange cryptographic credentials. The two clusters mutually authenticate each other based upon the credentials, and optionally relative to a third information service, and establish a service connection. Services from the remote cluster are registered as being available to the cluster designated as the trust root. Multi-cluster gateways can also be designated as the trust root, and joined clusters can be mutually untrusting. Two one-way trust and federation relationships can be set up to form a trusted bidirectional channel.", "patent_id": "9684453"}, {"patent_number": "9727590", "patent_date": "2017-08-08", "patent_num_combined_citations": "137", "patent_kind": "B2", "patent_title": "Data management and indexing across a distributed database", "patent_abstract": "In one embodiment, a distributed database system supporting flexible configuration of data clusters is disclosed. The system includes a cluster manager, an index, and a dataset distributed over one or more database clusters. Where the nodes of the clusters may report ownership of a particular range, the index contains an alternate range. The cluster manager receives requests to access a range of data within database and queries the index to determine the appropriate nodes and/or clusters with which to connect. The cluster manager then directs the requestor to connect to the specified nodes and/or clusters.", "patent_id": "9727590"}, {"patent_number": "9747314", "patent_date": "2017-08-29", "patent_num_combined_citations": "11", "patent_kind": "B2", "patent_title": "Normalized searchable cloud layer", "patent_abstract": "An example system for indexing heterogeneous resources includes a data module that invokes one or more APIs, and responsive to the invoked one or more APIs, receives a first set of attributes of one or more cloud resources of a first subset of the set of cloud resources and a second set of attributes of one or more cloud resources of a second subset of the set of cloud resources. The system also includes a normalization module that for at least one attribute of the first and second sets of attributes, searches a database for a normalized attribute corresponding to the respective one attribute, normalizes based on the uniform schema the respective attribute, and places the normalized attribute in a data structure. The system further includes an indexing module that indexes the normalized attributes in the data structure.", "patent_id": "9747314"}, {"patent_number": "9760289", "patent_date": "2017-09-12", "patent_num_combined_citations": "60", "patent_kind": "B2", "patent_title": "Massively scalable object storage for storing object replicas", "patent_abstract": "An example method for storing data includes providing a plurality of physical storage pools, each storage pool including a plurality of storage nodes coupled to a network. The method also includes mapping a partition of a plurality of partitions to a set of physical storage pools, where each physical storage pool of the set of physical storage pools is located in a different availability zone, and the storage nodes within an availability zone are subject to a correlated loss of access to stored data. The method further includes receiving a data management request over the network, the data management request being associated with a data object. The method also includes identifying a first partition of the plurality of partitions corresponding to the received data management request and manipulating the data object in the physical storage pools mapped to the first partition in accordance with the data management request.", "patent_id": "9760289"}, {"patent_number": "9813307", "patent_date": "2017-11-07", "patent_num_combined_citations": "103", "patent_kind": "B2", "patent_title": "Methods and systems of monitoring failures in a distributed network system", "patent_abstract": "In one embodiment, the methods and systems may include receiving an Application Program Interface (API) request, assigning a unique identifier to the API request, recording, in association with the unique identifier, receipt time corresponding to a time at which the API request is received, and associating one or more system state changes with the unique identifier. Advantageously, the present embodiments provide a more accurate failure monitoring and associated metrics. Additional benefits and advantages of the present embodiments will become evident in the following description.", "patent_id": "9813307"}, {"patent_number": "9830182", "patent_date": "2017-11-28", "patent_num_combined_citations": "11", "patent_kind": "B2", "patent_title": "Translating media access control (MAC) addresses in a network hierarchy", "patent_abstract": "In one embodiment a method includes receiving a packet including a destination media access control (MAC) address field having a MAC address of a hypervisor and a destination Internet protocol (IP) address field having an IP address of a virtual machine (VM) coupled to the hypervisor. The method further determines a MAC address of the VM using the IP address of the VM and applies the VM MAC address to the destination MAC address field of the packet to forward the packet to the VM.", "patent_id": "9830182"}, {"patent_number": "9898521", "patent_date": "2018-02-20", "patent_num_combined_citations": "13", "patent_kind": "B2", "patent_title": "Massively scalable object storage system", "patent_abstract": "Several different embodiments of a massively scalable object storage system are described. The object storage system is particularly useful for storage in a cloud computing installation whereby shared servers provide resources, software, and data to computers and other devices on demand. In several embodiments, the object storage system includes a ring implementation used to associate object storage commands with particular physical servers such that certain guarantees of consistency, availability, and performance can be met. In other embodiments, the object storage system includes a synchronization protocol used to order operations across a distributed system. In a third set of embodiments, the object storage system includes a metadata management system. In a fourth set of embodiments, the object storage system uses a structured information synchronization system. Features from each set of embodiments can be used to improve the performance and scalability of a cloud computing object storage system.", "patent_id": "9898521"}, {"patent_number": "9916232", "patent_date": "2018-03-13", "patent_num_combined_citations": "55", "patent_kind": "B2", "patent_title": "Methods and systems of distributed tracing", "patent_abstract": "A system and methods are provided for distributed tracing in a distributed application. In one embodiment, a method includes observing a plurality of messages sent and received among components of the distributed application, generating a probabilistic model of a call flow from observed messages of the distributed system, and constructing a call flow graph based on the probabilistic model for the distributed application. Distributed tracing may include observing messages by performing the subscription-based observation techniques and operations to receive, message traces describing messages being communicated among components of the distributed application. In this regard, the tracing service may merge message traces from different instrumentation points with message traces obtained by observing message queues to generate a probabilistic model and call flow graph. A distributed application developer or other relevant user may benefit in efficiently and effectively tracking down a cause of an abnormal behavior or analyzing performance profiles.", "patent_id": "9916232"}, {"patent_number": "9918411", "patent_date": "2018-03-13", "patent_num_combined_citations": "22", "patent_kind": "B2", "patent_title": "Flap-based forced air cooling of datacenter equipment", "patent_abstract": "In one embodiment, a rack enclosure for housing rack-mounted equipment includes a deflection member adapted to a piece of the rack-mounted equipment and an actuator coupled to the deflection member to control a position of the deflection member between a fully closed position and a fully opened position. A variable amount of cooling airflow is to be provided to the equipment piece based on the deflection member position.", "patent_id": "9918411"}, {"patent_number": "9967111", "patent_date": "2018-05-08", "patent_num_combined_citations": "24", "patent_kind": "B2", "patent_title": "Software-defined multinetwork bridge", "patent_abstract": "An example system for bridging between networks includes a first server that launches a first virtual machine in a first network. The system includes a first network controller that is coupled to the first network and sends a request for a bridge between the first network and a second network. The system also includes a second server that launches a second virtual machine in the second network. The system further includes a second network controller that is coupled to the second network, receives the request for the bridge, and in response to the request, creates the bridge between the first and second networks. The bridge enables the first virtual machine in the first network to communicate with the second virtual machine in the second network.", "patent_id": "9967111"}, {"patent_number": "9967298", "patent_date": "2018-05-08", "patent_num_combined_citations": "10", "patent_kind": "B2", "patent_title": "Appending to files via server-side chunking and manifest manipulation", "patent_abstract": "The object storage system divides files into a number of object segments, each segment corresponding to a portion of the object, and stores each segment individually in the cloud storage system. The system also generates and stores a manifest file describing the relationship of the various segments to the original data file. Requests to retrieve the segmented file are fulfilled by consulting the manifest file and using the information from the manifest to reconstitute the original data file from the constituent segments. Modifying, appending to, or truncating the object is accomplished by manipulating individual segments and the manifest file. Manipulation of the individual object segments and/or the manifest is also used to implement copy-on-write, snapshotting, software transactional memory, and peer-to-peer transmission of the large file.", "patent_id": "9967298"}, {"patent_number": "9983601", "patent_date": "2018-05-29", "patent_num_combined_citations": "6", "patent_kind": "B2", "patent_title": "System and method of rack management", "patent_abstract": "A rack management method and system is disclosed. The method includes detecting the presence of a computing device releasably mounted in a frame, the detecting based on an electrical connection established between a configuration bar disposed in a rear portion of the frame and the computing device, and determining a physical location of the computing device within the frame based on the electrical connection. The method also includes retrieving management information about the computing device from a profile storage disposed within the computing device via the electrical connection and storing the management information in a management table, the management table associating the computing device with the physical location within the frame.", "patent_id": "9983601"}, {"patent_number": "9992077", "patent_date": "2018-06-05", "patent_num_combined_citations": "22", "patent_kind": "B2", "patent_title": "Optimizing allocation of on-demand resources using performance zones", "patent_abstract": "In one embodiment, the present invention can be used to efficiently allocate on-demand resources to a customer of a data center such as a multi-tenant data center having resources dedicated to given customers, as well as on-demand resources that can be flexibly provisioned to customers using a performance zone concept realized via logical switches to present a single logical network to the customer.", "patent_id": "9992077"}], "inventors": [{"inventor_first_name": "Daniel", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "744312"}, {"inventor_first_name": "Daniel", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "773006"}, {"inventor_first_name": "Edward", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "860639"}, {"inventor_first_name": "Michael", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "1947581"}, {"inventor_first_name": "Alexander", "inventor_location_id": null, "inventor_key_id": "333085"}, {"inventor_first_name": "Daniel Joseph", "inventor_location_id": "29.6372|-98.3083", "inventor_key_id": "786631"}, {"inventor_first_name": "Monsyne Michael", "inventor_location_id": "28.389|-98.1316", "inventor_key_id": "1988276"}, {"inventor_first_name": "Antony Joel", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "256325"}, {"inventor_first_name": "Alexander", "inventor_location_id": "44.8419|-62.9706", "inventor_key_id": "333085"}, {"inventor_first_name": "Jason", "inventor_location_id": "29.5107|-98.3046", "inventor_key_id": "1509278"}, {"inventor_first_name": "Paul", "inventor_location_id": "29.5119|-98.3819", "inventor_key_id": "2434705"}, {"inventor_first_name": "Charles B.", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "602768"}, {"inventor_first_name": "Gregory", "inventor_location_id": "29.5976|-98.4864", "inventor_key_id": "1025667"}, {"inventor_first_name": "John A.", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "1371286"}, {"inventor_first_name": "Jay B.", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1537762"}, {"inventor_first_name": "Michael", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1947373"}, {"inventor_first_name": "Will", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "3249508"}, {"inventor_first_name": "Dale Lee", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "644028"}, {"inventor_first_name": "David", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "660216"}, {"inventor_first_name": "Jorge Luis", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1631520"}, {"inventor_first_name": "Clay", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "505423"}, {"inventor_first_name": "David", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "686186"}, {"inventor_first_name": "John A.", "inventor_location_id": "29.5637|-98.2674", "inventor_key_id": "1371286"}, {"inventor_first_name": "Van", "inventor_location_id": "33.0138|-96.6142", "inventor_key_id": "3166158"}, {"inventor_first_name": "Christopher James", "inventor_location_id": "37.9288|-121.717", "inventor_key_id": "462120"}, {"inventor_first_name": "Edward", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "863812"}, {"inventor_first_name": "Jason LuVern", "inventor_location_id": "28.389|-98.1316", "inventor_key_id": "1462814"}, {"inventor_first_name": "Matthew Charles", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1985633"}, {"inventor_first_name": "Trey Eugene", "inventor_location_id": "32.2371|-101.478", "inventor_key_id": "3049678"}, {"inventor_first_name": "Vishvananda", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "3160757"}, {"inventor_first_name": "William Randolph", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "3237614"}, {"inventor_first_name": "Yogeshwar", "inventor_location_id": "29.5881|-98.3148", "inventor_key_id": "3380585"}, {"inventor_first_name": "Ziad", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "3419754"}, {"inventor_first_name": "Michael", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "2212915"}, {"inventor_first_name": "Thomas D.", "inventor_location_id": "30.0497|-95.1846", "inventor_key_id": "3096641"}, {"inventor_first_name": "Clay", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "505423"}, {"inventor_first_name": "Jordan", "inventor_location_id": "28.389|-98.1316", "inventor_key_id": "1558160"}, {"inventor_first_name": "Kurt Evan", "inventor_location_id": "33.9845|-83.8971", "inventor_key_id": "1688742"}, {"inventor_first_name": "Keith", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "1661373"}, {"inventor_first_name": "Randall", "inventor_location_id": "30.5229|-97.6776", "inventor_key_id": "2474653"}, {"inventor_first_name": "James Lee", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "1544172"}, {"inventor_first_name": "Christopher", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "536552"}, {"inventor_first_name": "Christopher", "inventor_location_id": "29.5811|-98.2376", "inventor_key_id": "468831"}, {"inventor_first_name": "Clayton", "inventor_location_id": "29.7037|-98.1205", "inventor_key_id": "589314"}, {"inventor_first_name": "David E.", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "741686"}, {"inventor_first_name": "Jason", "inventor_location_id": "29.5811|-98.2376", "inventor_key_id": "1301103"}, {"inventor_first_name": "Natasha", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "2245398"}, {"inventor_first_name": "Brad K.", "inventor_location_id": "29.5811|-98.2376", "inventor_key_id": "409026"}, {"inventor_first_name": "Erik V.", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "828442"}, {"inventor_first_name": "Goetz", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1000355"}, {"inventor_first_name": "Will", "inventor_location_id": "35.8434|-120.959", "inventor_key_id": "3249508"}, {"inventor_first_name": "Gregory Scott", "inventor_location_id": "30.3076|-97.7126", "inventor_key_id": "1034745"}, {"inventor_first_name": "Jeffrey Keating", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1356743"}, {"inventor_first_name": "James", "inventor_location_id": "51.4893|-0.14406", "inventor_key_id": "1425126"}, {"inventor_first_name": "Paul David", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "2421712"}, {"inventor_first_name": "Alex", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "281916"}, {"inventor_first_name": "Dan Di", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "786039"}, {"inventor_first_name": "Logan", "inventor_location_id": "37.7292|-123.047", "inventor_key_id": "1925758"}, {"inventor_first_name": "Joel", "inventor_location_id": "29.6372|-98.3083", "inventor_key_id": "1632731"}, {"inventor_first_name": "John Carlisle", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "1426759"}, {"inventor_first_name": "Yogeshwar", "inventor_location_id": "29.5881|-98.3148", "inventor_key_id": "3380584"}, {"inventor_first_name": "Egle", "inventor_location_id": "29.4587|-98.5576", "inventor_key_id": "892869"}]}], "count": 1, "total_assignee_count": 1}