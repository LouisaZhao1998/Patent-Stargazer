patent_number,patent_date,patent_num_combined_citations,patent_kind,patent_title,patent_abstract,patent_id
10007515,2018-06-26,26,B2,System and method for automatic porting of software applications into a cloud computing environment,"In accordance with an embodiment, described herein is a system and method for automatic porting of software applications into a cloud computing environment (cloud environment, cloud). A cloud service enables software developers to deploy user applications to run within the cloud environment. When a user application is deployed to the environment, a deployment logic determines those aspects of the application, such as certain service usages, that may be incompatible with features provided by the environment, or that should use a particular cloud service, and automatically ports the application, including the use of one or more handlers or extensions, for use within the environment. For example, a user application may have been originally developed to use JAVAMAIL™, which presents a security risk in a cloud environment. To minimize such risk, the application can instead be ported to use, for example, a REST-based e-mail service supported by the cloud environment.",10007515
10038698,2018-07-31,54,B2,External platform extensions in a multi-tenant environment,"Methods and systems are described for allowing third party developers to add extensions to a cloud service provider's software as a service (SaaS) services by editing an ‘empty’ config file according to a schema provided by the cloud service provider to form a delta file and then merging the delta file with an internal, full version of the config file. The full config file is then used to initialize and instantiate objects upon a restart of the cloud provider's services.",10038698
10049370,2018-08-14,2,B2,Transforming cloud service measurements into anonymized extramural business rankings,"A method, system, and computer program product for computing cloud services. A method commences upon invocation of instrumentation configured to monitor a plurality of applications running in a cloud environment. The instruments are configured to capture a first set of metrics and a second set of metrics of respective cloud service tenants. The captured metrics are compared and the comparisons are used to perform a ranking. The rankings of the compared metrics are then used to compare cloud service tenants (e.g., a respective first cloud service tenant is compared with respect to a second cloud service tenant). The ranking is based at least in part on the compared metrics. The rankings can be fairly compared by selecting the first set of metrics with respect to the second set of metrics where both sets of metrics pertain to a common domain, and/or a common application, and/or a common application feature.",10049370
10055423,2018-08-21,61,B2,Infrastructure for synchronization of mobile device with mobile cloud service,"Techniques are described for implementing a cloud computer system (e.g., “a cloud service”) for facilitating the synchronization of enterprise data between mobile computing devices and enterprise computing systems (e.g., human resource management systems, business management systems, or the like). The cloud service may convert enterprise data received from different enterprise computing systems to a format that can be managed and updated easily by mobile computing devices. The converted format may enable distinct information to be easily identified. The enterprise data may be associated with policy information and version information to manage synchronization of the enterprise data. In some embodiments, the cloud service may manage synchronization with mobile computing devices based on classification of a communication connection the mobile computing devices have to a wireless network. The communication connection may be used to determine a manner for synchronizing enterprise data between the mobile computing devices and the cloud computer system.",10055423
10061602,2018-08-28,8,B2,System and method for providing a virtual assembly builder for use with a cloud computing environment,"A system and method for providing a virtual assembly builder for use with a cloud computing environment. In accordance with an embodiment, the system can include a virtual assembly builder component which maintains a repository of virtual assembly archives, wherein each virtual assembly can include a metadata and one or more virtual machine templates that can be used to instantiate an instance of the assembly; and a virtual assembly builder deployer provided as a web service or other interface, which enables operations for uploading virtual assemblies to the repository, registering virtual assemblies with cloud components, and/or managing deployment instances defined by an assembly.",10061602
10063654,2018-08-28,31,B2,Systems and methods for contextual and cross application threat detection and prediction in cloud applications,"Systems and methods for contextual and cross application threat detection in cloud applications in accordance with embodiments of the invention are disclosed. In one embodiment, a method for detecting threat activity in a cloud application using past activity data from cloud applications includes receiving activity data concerning actions performed by a user account associated with a user within a monitored cloud application, receiving external contextual data about the user that does not concern actions performed using the user account within the monitored cloud application, where the external contextual data is retrieved from outside of the monitored cloud application, deriving a baseline user profile using the activity data and external contextual data and associating the baseline user profile with the user account, and determining the likelihood of anomalous activity using the baseline user profile.",10063654
10063661,2018-08-28,56,B2,Multi-tenant cloud-based queuing systems,"Techniques are disclosed for multi-tenant cloud-based queuing. Certain techniques are disclosed herein that provide for interactions and observability between tenant queues within a multi-tenant cloud-based queuing database. In some embodiments, the queues may be utilized by both users and merchants for both online and point-of-service interactions. Multiple queues for multiple tenants are hosted by a cloud computing system. Each queue may include one more queue entries, each of which includes a ticket value, and may further include a ticket alias. The ticket values and/or ticket aliases may be decoupled from a queue position for the entry. In some embodiments, the queue entries may be swapped within a queue or between queues, and the system may enable searching in or automated actions between queues and/or tenants based in part upon queue conditions.",10063661
10070251,2018-09-04,30,B1,"Methods, systems, and computer readable media for validating user equipment (UE) location","A method for validating UE location includes receiving, at a network gateway, a signaling message for updating a location of a UE with a mobile communications network. A first indication of user equipment location is extracted from the signaling message. One of: a cloud-based UE location database containing UE location information obtained from a UE location reporting application resident on the UE, a cloud-based loyalty card transaction database containing loyalty card transaction records indexed by UE identifiers, and a mobile location center (MLC) that obtains UE location information by requesting or receiving the UE location information from a mobility management entity (MME) is queried to obtain a second indication of location of the UE. It is determined from a relationship between the first and second indications of location of the UE that the signaling message is suspicious. In response to determining that the signaling message is suspicious, a policy rule is applied to processing of the signaling message.",10070251
10110506,2018-10-23,22,B2,System and method for quota management in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for management of quota in a cloud computing environment. In accordance with an embodiment, a tenant manager component enables configuration and management of tenants within the cloud environment, wherein the tenants can utilize services and resources within the cloud environment. The tenant manager enables quotas to be associated with one or more tenants restricting their provisioning or usages of the services and resources. An elasticity manager component determines usage of the cloud environment services and resources by the one or more tenants, and provides usage information to the tenant manager, for use in managing the one or more tenants in accordance with their quotas.",10110506
10122596,2018-11-06,10,B2,System and method for providing a service management engine for use with a cloud computing environment,"A system and method for providing a service management engine for use with a cloud computing environment. In accordance with an embodiment, enterprise software applications (e.g., Fusion Middleware applications) can be instantiated as services within a cloud platform, where they are then made accessible by other (e.g., customer) applications. In an embodiment, a service management engine (SME), in communication with an orchestration engine, can be used to provision services as one or more different service types, according to a service definition package (SDP). Service types can be instantiated according to the configuration of the cloud platform itself, and the contents of the SDP, including discovering, provisioning, and associating service types with system resources, to address different customer requirements.",10122596
10122650,2018-11-06,22,B2,System and method for tenant management in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing tenant management in a cloud computing environment. In accordance with an embodiment, a tenant manager component enables configuration and management of tenants that utilize services and resources within the cloud environment, including accessing information in a tenant store repository describing a plurality of tenants, and providing administrative isolation between the plurality of tenants. The tenant manager enables receiving administrative commands to configure or manage particular ones of the plurality of tenants, and applying the administrative commands to the particular tenants associated with the received administrative commands, for use in configuring or managing use by those tenants of the services and resources within the cloud environment.",10122650
10142174,2018-11-27,164,B2,Service deployment infrastructure request provisioning,"In certain embodiments, a Service Deployment Infrastructure (SDI) request engine is disclosed. The SDI request engine performs the tracking, management and provisioning of services subscribed to by customers of the cloud infrastructure system. The SDI request engine is deployed to process large volumes of provisioning requests and deliver time critical applications for customers. The SDI request engine translates each request into a list of tasks of various sizes based on the requirement and configuration of the request. In some embodiments, the SDI request engine imposes control and management on both request and task levels in order to execute, rollback, retry or fail a task automatically and accurately.",10142174
10142188,2018-11-27,14,B2,System and method for providing guiding messages in creating an integration flow in a cloud-based integration platform,"In accordance with an embodiment, described herein is a system and method for generating messages guiding a user in creating an integration flow in a cloud-based integration service. The cloud-based integration service can include a web interface application for a current integration flow, and a runtime for executing the current integration flow. A plurality of complete integration flow definitions can be provided, each defining a plurality of integration components for a particular type of integration flow. The system can select a complete integration flow definition based on the type of the current integration flow, dynamically update the complete integration flow definition, and compare the current integration flow against the selected complete integration flow definition. Based on the comparison, the system can generate one or more messages for graphical display in the web interface application, to guide the user in creating the current integration flow.",10142188
10142371,2018-11-27,37,B2,Authorization policy customization and authorization policy lockdown,"Application customization enables many different types of customers, from small companies to large multinational enterprises, to use various applications provided by a cloud service provider. To accommodate these customizations, previous systems generally require manual human intervention to identify custom, customized, and cloud service provider authorization policies (also referred to herein as “seed” authorization policies) and to decide how each type of authorization policy should be upgraded. When applications are customized, artifacts that represent those customizations can be created. In some embodiments, the customizations can include new resources or entitlements, and grants to new roles. In addition to new resources, entitlements, and grants, existing resources, entitlements, and grants can be modified and artifacts corresponding to those modifications can be generated. Embodiments of the present invention provide improved techniques for tracking and managing customizations to simplify and automate upgrade processes.",10142371
10148530,2018-12-04,376,B2,Rule based subscription cloning,"Aspects of the present invention relate to techniques for providing a user with access to a service provided by a cloud infrastructure system based on an existing service. A user may be provided with a clone subscription based on a base subscription to an existing service provided by the cloud infrastructure system. A clone subscription can provide the user with an environment (e.g., a service) that is designated for one use (e.g., development and testing) different from another use (e.g., production) designed for a base subscription. Changes made to a base subscription may be propagated to the clone subscription based on rules. A clone subscription can be modified to vary the clone configuration independently from the base configuration.",10148530
10154037,2018-12-11,15,B2,Techniques for implementing a data storage device as a security device for managing access to resources,"Techniques are disclosed for implementation of a data storage device as a security device for managing access to resources. These techniques can be implemented for multi-factor authentication (MFA) to provide multiple layers of security for managing access to resources in an enterprise and/or a cloud computing environments. As a security device, a storage device can be used a portable device to provide a point of trust for multi-factor authentication across any client application or device operated to access resources. A storage device may be configured with security data for authentication with an access management system. After configuration, a portable storage device may be used for authentication of a user without credential information at any client device based on accessibility of the device to the portable storage device. A storage device configured as a security device can ensure that legitimate users have an easy way to authenticate and access the resources.",10154037
10164901,2018-12-25,275,B2,Intelligent data center selection,"In embodiments, a data center selection system can select a chosen data center (DC) for an order submitted to a cloud computing system using a preprocessing layer and a rules engine that incorporates action/algorithm-based selection using data center metrics to determine the chosen DC. In various embodiments, the data center selection system retrieves order information, objectives, rules, algorithms, and other data defined by an administrator. The data center selection system can then retrieve data center information aggregated from various data centers. Using order information received from an order management system, the data center selection system can utilizes the preprocessing layer, the rules engine, and the algorithm-based selection to select the chosen DC. The data center selection system can send an order request to the chosen DC in which to provision services for the order request.",10164901
10182107,2019-01-15,32,B2,Multi-tenant application using hierarchical bean factory container,Various embodiments provide on premise and cloud deployment support for components that may not be multi-tenant enabled. A single application in a highly non-intrusive way without effecting application functional logic. On premise deployments can run with fixed default tenant and no tenant information needs to be captured anywhere anytime. The application code accesses the hierarchical bean factory to get any tenant specific or shared resources seamlessly without knowledge of multi-tenancy in functional code anywhere.,10182107
10191802,2019-01-29,12,B2,Extract-transform-load diagnostics,"A cloud-based ETL system provides error detection, error correction and reporting of data integration flows hosted by cloud services. Categories of errors are identified using one or more checks at different points of a data integration flow and one or more actions selected based at least in part on the error category. A determination can be made whether the error category is fault tolerant and one or more actions can be selected based at least in part on the error fault tolerance to correct the error, restart a flow, or generate a notification assisting a user to correct the error.",10191802
10193877,2019-01-29,13,B2,On-premises agent for mobile cloud service,"Systems, devices, and methods are disclosed for an agent device within a company's network firewall to initiate an HTTP connection with a cloud-based gateway and then upgrade the connection to a WebSockets protocol in order to have an interactive session. Over this interactive session, a mobile device, which connects to the cloud-based intermediary, can request data from servers inside the company's firewalls. Because the firewall is traversed using HTTP protocols (with WebSockets), it can be as safe as letting employees browse the web from inside the company's network.",10193877
10193953,2019-01-29,18,B2,Self describing configuration,Systems and methods are provided for self-describing configurations of cloud-based applications for data security providers monitoring communications between a client device and the applications. An application programming interface (API) can be provided that allows the data security provider to inspect entity objects used by the cloud-based application. Data entities can be marked to have protected fields. A token identifier can be generated by the data security provider and sent to the cloud-based application. The cloud-based application can insert the token identifier in communications between the application and a client device allowing the data security provider to protect sensitive data associated with the protected fields.,10193953
10198288,2019-02-05,15,B2,System and method for providing a dynamic cloud with subnet administration (SA) query caching,"A system and method support can subnet management in a cloud environment. During a virtual machine migration in a cloud environment, a subnet manager can become a bottleneck point that delays efficient service. A system and method can alleviate this bottleneck point by ensuring a virtual machine retains a plurality of addresses after migration. The system and method can further allow for each host node within the cloud environment to be associated with a local cache that virtual machines can utilize when re-establishing communication with a migrated virtual machine.",10198288
10200358,2019-02-05,110,B2,Microservices based multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request for performing an identity management service, where the request includes a call to an application programming interface (“API”) that identifies the identity management service and a microservice configured to perform the identity management service. The system authenticates the request, accesses the microservice, and performs the identity management service by the microservice.",10200358
10212053,2019-02-19,389,B2,Declarative and extensible model for provisioning of cloud based services,"A method for offering a set of services is disclosed. The method may comprise storing, by a cloud infrastructure system, subscription order information identifying a service from a set of services provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices. A computing device from the one or more computing devices may determine a service declaration for the service, the service declaration comprising information indicative of procedures for provisioning resources for enabling the service. A computing device from the one or more computing devices may cause the service to be provisioned based on the service declaration.",10212053
10212169,2019-02-19,47,B2,Enforcing data security in a cleanroom data processing environment,"Techniques for enforcing data security in a cleanroom data processing environment are described herein. In one or more embodiments, a virtual private cloud environment stores a first set of data provided by a first user account and a second set of data provided by a second user account, where the first user account is associated with a first set of one or more security credentials and the second user account is associated with a second set of security credentials and where the first user account is prevented from accessing at least the second set of data and the second user account is prevented from accessing at least the first set of data. In response to receiving, from the first user account or the second user account, a request to destroy the virtual private cloud environment, at least the first set of data and the second set of data are deleted.",10212169
10212538,2019-02-19,35,B2,"Methods, systems, and computer readable media for validating user equipment (UE) location","A method for validating UE location includes receiving, at a network gateway, a signaling message for updating a location of a UE with a mobile communications network. A first indication of user equipment location is extracted from the signaling message. One of: a cloud-based UE location database containing UE location information obtained from a UE location reporting application resident on the UE, a cloud-based loyalty card transaction database containing loyalty card transaction records indexed by UE identifiers, and a mobile location center (MLC) that obtains UE location information by requesting or receiving the UE location information from a mobility management entity (MME) is queried to obtain a second indication of location of the UE. It is determined from a relationship between the first and second indications of location of the UE that the signaling message is suspicious. In response to determining that the signaling message is suspicious, a policy rule is applied to processing of the signaling message.",10212538
10216491,2019-02-26,26,B2,Controlled availability of objects in a visual design tool for integration development,"Techniques are described for controlling availability of objects in a visual design tool for integration development. An integration developer may select a node to add to an integration and, in response, the integration cloud system can analyze the structure of the integration flow, query other nodes within the structure of the integration flow for configuration data, and generate available configuration options for the selected node. The integration cloud system can use the available configuration options to control the availability of objects by only providing the available configuration options for selection by the developer.",10216491
10218705,2019-02-26,114,B2,Multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request from a client for an identity management service, authenticates the request, and accesses a microservice based on the request. The system determines, based on the request, a tenancy of the client, a tenancy of a user, and a tenancy of a resource. The system retrieves data from the determined tenancies as required to process the request, where the data is retrieved by the microservice using a connection pool that provides connections to the database. The system then performs the identity management service by the appropriate microservice responsible for processing the received request.",10218705
10225140,2019-03-05,20,B2,Portable instance provisioning framework for cloud services,"Techniques are described for automated provisioning of cloud service instances. In one or more embodiments, a service definition defines a set of resource dependencies for a plurality of versions of a cloud service including a first set of resource dependencies for a first version of the cloud service and a second set of one or more resource dependencies for a second version of the cloud service, wherein the second set of one or more resource dependencies modifies the first set of resource dependencies. In response to the request to perform a service operation for an instance of the second version of the cloud service, a provisioning engine generates and executes a set of instructions for provisioning a set of resources for the instance of the second version of the cloud service based on the target set of resource dependencies determined based on the first and second set of resource dependencies.",10225140
10225164,2019-03-05,60,B2,System and method for providing a cloud computing environment,"A system and method for enabling a cloud computing environment. In accordance with an embodiment, the system can include a variety of hardware and/or software components and features, which can be used in delivering an infrastructure, platform, and/or applications to support public and private clouds.",10225164
10225259,2019-03-05,47,B2,Establishing a cleanroom data processing environment,"Techniques for providing a virtual cleanroom data processing environment are described herein. In one or more embodiments, a virtual private cloud environment is configured to prevent data from being sent to network locations external to the virtual private cloud environment. One or more computing resources deployed within the virtual private cloud environment receives, from a first source external to the virtual private cloud environment, a first set of data that is associated with a first user account. A set of one or more software components, received from a second source, are also deployed within the virtual private cloud environment. Once deployed, the set of software components generates, based at least in part on the first set of data, a set of output data. The first set of data is continuously prevented from being sent to network locations external to the virtual private cloud environment.",10225259
10225323,2019-03-05,10,B2,System and method for providing java cloud services for use with a cloud computing environment,"A system and method for providing Java cloud services for use with a cloud computing environment. In accordance with an embodiment, a cloud environment, such as Oracle Public Cloud (OPC), can include a Java cloud services (JCS) infrastructure, which allows a suite of software applications, middleware, and database offerings to be delivered to customers in a self-service, elastically scalable manner. In accordance with an embodiment, the JCS infrastructure can orchestrate, in combination with other cloud environment components, the creating and/or updating of a platform instance of a Java cloud service, including provisioning and deployment of the platform instance and/or deployment of software applications, and one or more personality injection or application deployment processing. Additional resources and/or services, such as a database service, can be wired to or otherwise associated with the Java cloud service, for use by customer applications that are deployed to the cloud.",10225323
10255061,2019-04-09,274,B2,Zero down time upgrade for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request for performing an identity management service. The request identifies the service and a current version of a microservice. The current version of the microservice is in a first stateless middle tier in a first topology that includes a first web tier. The system performs the identity management service by the current version of the microservice using tenant data stored in a database. The system then determines an upgrade to be applied to the microservice, and deploys a second topology that implements the upgrade. The second topology includes a second web tier and a second stateless middle tier including a new version of the microservice. The system tests the new version of the microservice in the second topology using test data stored in the database, promotes the second topology, and drains and shuts down the first topology.",10255061
10261836,2019-04-16,294,B2,Dynamic dispatching of workloads spanning heterogeneous services,"A system for executing a workload that includes a plurality of transactions for a first time slot determines whether a metered cloud service has a sufficient quota of operations available to execute respective metered transactions. For the first time slot, the system determines whether a non-metered cloud service has a sufficient processing load to execute respective non-metered transactions. The system executes the plurality of transactions during the first time slot when each metered cloud service has the sufficient quota and each non-metered cloud service has the sufficient processing load. Further, the system waits to execute the plurality of transactions of the workload during a time slot subsequent to the first time slot when any of the metered cloud services does not have the sufficient quota or any of the non-metered cloud services does not have a sufficient processing load.",10261836
10270706,2019-04-23,298,B2,Customizable model for throttling and prioritizing orders in a cloud environment,"A method for controlling the provisioning of a service associated with a customer order is disclosed. The method may comprise receiving, by a cloud infrastructure system, an order for a service from a plurality of service provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices. Additionally, the method may comprise determining, by a computing device from the one or more computing devices, based upon a set of rules and system-related information, whether the order is to be forwarded for provisioning one or more resources for enabling the order. Then, based upon the determining, the method may forward the order for provisioning of the one or more resources or not forwarding the order for provisioning.",10270706
10282187,2019-05-07,24,B2,Efficient application patching in heterogeneous computing environments,"Techniques are disclosed for efficiently updating multiple computing systems in potentially heterogeneous computing environments. Embodiments provide for efficient patching of multiple software applications executing in multiple execution environments. For example, a custom installation tool can be provided to each of the computing devices in the cloud infrastructure system. The computing devices can execute the custom installation tool and identify, retrieve, and apply the necessary patches to applications on the computing devices. The patch-related processing across the multiple computing devices may occur in parallel such that at least a portion of the processing is performed concurrently from one another.",10282187
10282764,2019-05-07,220,B2,Organizing data in a virtual computing infrastructure,"Organizing data in a cloud computing environment having a plurality of computing nodes is described. An authorization to service a request is received. The request may be from a user for launching an instance. In response to receiving the authorization and based on the request, an image list is determined. The image list includes information corresponding to a plurality of machine images. At least one machine image is identified from the image list associated with a functional requirement of the request. The instance is launched at the at least one computing node. The at least one machine image is updated after the instance has been launched.",10282764
10284685,2019-05-07,15,B2,Monitoring cloud resource objects during deployment of a blueprint,"Tools are provided to assist users of cloud computing systems to create, monitor, and debug the resource instances they need. Specifically, resource instances are created in a cloud computing system based on a blueprint that is provided to a blueprint processor. The blueprint declaratively defines the resources that the user needs to have created in the cloud. Based on the information contained in blueprint, the blueprint processor causes the cloud to orchestrate the creation of resource instances, doing so in parallel when possible, and to configure those resource instances as specified in blueprint. Techniques are described for generating a timeline to convey status during the deployment process, and for performing debugging operations.",10284685
10290133,2019-05-14,121,B2,High fidelity interactive screenshots for mobile applications,"The present disclosure relates to mobile application development system providing high fidelity interactive screenshots for mobile applications developed using a cloud-based service. Particular aspects of the present disclosure are directed to a method for showing a sample screenshot of a user interface that closely resembles what users would see on a mobile device. The method may include determining a static layer of the user interface, determining an image representative of the static layer, determining a dynamic layer of the user interface, determining an image representative of the dynamic layer, and rendering the screenshot of the user interface based on a combination of the image representative of the static layer and the one or more images representative of the dynamic layer.",10290133
10296163,2019-05-21,8,B2,Electronic presentation repository and interface,"Embodiments of the invention include techniques for storing and managing repositories of electronic presentation documents. Presentation storage repositories may be implemented in various storage systems including individual computer servers, distributed storage networks, cloud-based storage systems, and the like. Presentation search interfaces may support various searching and customization capabilities. Search interface and search engine components may be implemented to receive search requests from client devices, retrieve electronic presentation data from one or more storage repositories, and generate customized search results based on the retrieved electronic presentation data. Search and presentation capabilities may include storing user-specific selections of presentation cover slides, and then retrieving and/or generating user-specific thumbnails for search results interfaces. Additionally, presentation access and usage statistics may be tracked and stored within the storage repository and may be incorporated into the customized searching and presentation capabilities.",10296163
10298514,2019-05-21,21,B2,System and method for cloud connection pool,"Today's cloud software, especially cloud management software, faces a complex, distributed, cross platform environment with extremely diversified software components. Cloud Connection Pool (CCP) is a technique to obtain a connection in such an environment and is more complex than a traditional connection pool. CCP allows requesting components to establish connections to target components. CCP uses cloud mapping data that associates cloud components with each other and stores pool data that identifies connection pools for components (or “managing components”) that manage target components. In response to a request for a connection from a requesting component, the CCP determines a managing component that is associated with the requested target component and identifies (or creates) a connection pool that is associated with the managing component. The CCP then retrieves a connection from the connection pool and returns the connection to the requesting component.",10298514
10304222,2019-05-28,26,B2,System and method for graphically displaying recommended mappings in an integration cloud service design time,"In accordance with an embodiment, described herein is a system and method for graphically displaying recommended mappings between a source data object and a target data object in a design time of a cloud-based integration service. The system can include a recommendation engine that provides recommended mappings between the source and target data objects, so that the recommended mappings can be graphically displayed in a mapping interface. The recommended mappings can be filtered based one or more filtering criteria. Each recommended mapping can be displayed differently from an actual mapping, and can be associated with a reliability/quality indicator. A particular recommended mapping can be accepted to become an actual mapping, or to be rejected. The system allows a user to toggle between actual mappings and recommended mappings between the source and target data objects.",10304222
10305731,2019-05-28,5,B2,System and method for provisioning cloud services across heterogeneous environments using partitioned provisioning instructions stored on a configuration management server,"In accordance with an embodiment, described herein is a system and method for provisioning cloud services across heterogeneous computing environments. A plurality of provisioning instructions stored on a configuration management server can be partitioned into a plurality of ranges. A plurality of client nodes connected to the configuration management server can be configured into a plurality of groups, each group providing one or more computing environments on one or more virtual machines for hosting a cloud service. Each computing environment in a particular group can be associated with a provisioning instruction launcher that specifies a particular range of provisioning instructions. When a virtual machine in a particular group reboots, the computing environment on the virtual machine searches for the latest provisioning instruction in the range corresponding to the particular group.",10305731
10306023,2019-05-28,122,B2,Pre-formed instructions for a mobile cloud service,"Methods, systems, and computer readable mediums are disclosed for introducing pre-formed instruction sets to a mobile cloud service. In some examples, an archive file, such as a .zip file, can include two sets of files: 1) logic for creating an application programming interface (API) and connecting the API with backend service behind a corporate enterprise network's firewall, and 2) custom user-code. In such examples, the API can connect through defined channels to the back end service. In some examples, the custom user code can execute in a secure virtual machine (VM) on the cloud service. In such examples, the custom user code can perform error checks on data, recalculate or reformat data, or otherwise modify it before sending to a user's mobile device or receiving from a user's device.",10306023
10320887,2019-06-11,2,B2,Integrating cloud service functionality by using document metadata,"An example system and method for facilitating integrating functionality of different cloud computing environments. A particular example embodiment includes mechanisms for integrating a document cloud service with a process cloud service, such that components, e.g., documents, of software processes developed and/or implemented via the process cloud service can leverage the document cloud service and be maintained thereby. End users and/or software developers may now define folder structures governed by a document cloud service, where the folder structures and accompanying folders and documents may be automatically generated, maintained, and accessed via the process cloud service.",10320887
10324585,2019-06-18,22,B2,System and method for providing completeness indicators for an integration flow in a cloud-based integration platform,"In accordance with an embodiment, described herein is a system and method for graphically displaying a completeness indicator for a current integration flow being defined in a cloud-based integration service. The cloud-based integration service includes a web user interface for designing the current integration flow and a runtime for executing the integration flow. A plurality of integration flow definitions can be provided, each defining a plurality of integration components for a particular type of integration flow. The system can compare one or more integration components in the current integration flow, against a plurality of integration components in a definition for a particular type of integration flow, taking into account the relative weighting of each integration component. A value reflecting the level of completeness of the current integration flow can be generated based on the comparison, and graphically displayed as a completeness indicator in the web interface application.",10324585
10324697,2019-06-18,23,B2,System and method for importing and extorting an integration flow in a cloud-based integration platform,"In accordance with an embodiment, described herein is a system and method for exporting and importing integration flows in a cloud-based integration service. The cloud-based integration service includes a web interface application for creating an integration flow, and a runtime for executing the integration flow. The web interface application can provide an import interface and an import logic component, and an export interface and an export logic component. The export logic component can be configured to export an integration flow and its dependent resources, regardless of their lock states, and with secured information removed from the dependent resources. The import logic component can be configured to import an integration flow and its dependent resources; and perform a plurality of checks and validations for each dependent resource being imported, to determine whether to create the dependent resource in the system, or keep an existing dependent resource in the system.",10324697
10325089,2019-06-18,102,B2,"Mobile application, resource management advice","Techniques for a resource management advice service are provided. In some examples, resource management advice and/or instructions may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more resource management operations associated with a service provider. Based at least in part on the requested operation and/or the particular service provider, advice and/or instructions for managing the resource may be provided.",10325089
10326670,2019-06-18,12,B2,System and method for enterprise data distribution,"In accordance with accordance, described herein is a system and method for providing a cloud service for distributing enterprise data to data consumers for reuse. The cloud service can include a generic connector interface configured to retrieve enterprise data from a PaaS service, and a plurality of services used for categorizing the enterprise data, managing identities of the data consumers, configuring data access rules, and masking the enterprise data. A plurality of representational state transfer (REST) application programming interfaces (APIs) can be exposed by the cloud service for a tenant to manage the enterprise data and data consumers, and for data consumers to subscribe to the enterprise data. The system allows a PaaS tenant to distribute enterprise data from a PaaS service to a plurality of data consumers securely and scalably.",10326670
10326708,2019-06-18,212,B2,Cloud computing services framework,"Methods and systems of managing computer resources in a cloud environment. Receiving, via at least one server, cloud management instructions via an API, coordinating, via the at least one server, with at least one cloud services manager via a distributed coordination and messaging service. The coordination includes instructions regarding the cloud services manager managing at least one cloud resource, and communicating with at least one database to store and retrieve the management instructions.",10326708
10327175,2019-06-18,13,B2,"Methods, systems, and computer readable media for operating a telecommunications network using an on-premises computing system and an off-premises cloud computing system","Methods, systems, and computer readable media for operating a telecommunications network using an on-premises computing system and an off-premises cloud computing system. In some examples, a method includes executing, at an on-premises computing system including at least one processor, one or more network-impacting telecommunications functions for the telecommunications network. The method includes offloading, at the on-premises computing system using an on-premises network, one or more other telecommunications functions for the telecommunications network to an off-premises cloud computing system remote from the on-premises network.",10327175
10341354,2019-07-02,320,B2,Distributed high availability agent architecture,"A high availability (HA) Identity Bridge (IDBridge) between an on-premises Active Directory (AD) and a cloud-based Identity Cloud Service (IDCS) is provided. A connection to an AD, coupled to a first network, is established. A connection to an IDCS, coupled to a second network, is established, the IDCS including a System for Cross-domain Identity Management (SCIM) directory. A plurality of selectable AD OUs are displayed in a GUI, and a selection of one or more OUs is then received. Each member group of the selected OUs is displayed in the GUI, and a selection of one or more member groups of the selected OUs is then received. The users of the selected OUs and the selected member groups of the selected OUs are monitored to identify users and groups that have been added, modified or deleted. The identified users and groups are then synchronized to the SCIM directory.",10341354
10341410,2019-07-02,296,B2,Security tokens for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request from a client for obtaining an access token for a user to access a resource. The system determines, based on the request, a tenancy of the client, a tenancy of the user, and a tenancy of the resource. The system accesses a microservice based on the request, and performs an identity management service by the microservice based on the request, where the identity management service includes generating the access token that identifies the tenancy of the resource and the tenancy of the user.",10341410
10348858,2019-07-09,313,B2,Dynamic message queues for a microservice based cloud service,A cloud based identity management system that handles a plurality of published events that are published and consumed by microservices provides a dynamic queue that includes one or more active queues and one or more inactive queues. Embodiments create selectors for all of the active queues and the inactive queues and binds subscribers to each active queue. Embodiments dynamically cause at least one of the inactive queues to become one of the active queues when a number of published events increases.,10348858
10361968,2019-07-23,30,B2,System and method for service expiration in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing service expiration in a cloud computing environment. In accordance with an embodiment, the system includes a plurality of services which can be used by applications within the cloud environment, wherein the services can be associated with and utilize resources within the cloud environment. A service expiration component associates reservations with the services, periodically determines a status of the reservations and of any expired services associated therewith, and instructs the system to release the resources of expired services, for use by other services.",10361968
10372728,2019-08-06,2,B2,System and method providing a scalable and efficient space filling curve approach to point cloud feature generation,"Systems, methods, and other embodiments are disclosed for identifying features within point cloud data. In one embodiment, point cloud data is read which represents multiple points of at least one point cloud in a multi-dimensional space. Each point in the point cloud data is defined by an attribute value quantifying an attribute of the point and a set of coordinates specifying a location of the point in the multi-dimensional space. The set of coordinates for each point is transformed into a space-filling distance value representing a distance along a space-filling curve. The points are sorted according to the space-filling distance values to generate a sorted order of the points. The points are traversed in the sorted order and output data points are derived, while traversing the points, based on a specified feature criterion. The output data points identify a feature within the at least one point cloud.",10372728
10372760,2019-08-06,15,B2,Building queries directed to objects hosted on clouds,"According to an aspect of the present disclosure, a query builder sends to a node in a cloud, a request for meta-data related to objects, and in response receives from the node, the meta-data specifying information related to objects exposed by the node. Upon receiving from a user a partial query and a current edit location during building of a corresponding complete query, the query builder determines, based on the received meta-data, the current edit location, and the partial query, a list of identifiers which are potential candidates for insertion at the current edit location. The query builder then displays the list of identifiers to the user, and receives a selection of an identifier from the displayed list. The query builder incorporates the selected identifier in the partial query at the current edit location to form a further developed query.",10372760
10372773,2019-08-06,26,B2,System and method for providing recommended mappings for use by a mapper in an integration cloud service design time,"In accordance with an embodiment, described herein is a system and method for providing recommended mappings to a mapper for use in designing an integration flow in a design time of a cloud-based integration service. A database can store mapping records from a plurality of sources, and mapping records inferred from the extracted mapping records. Each mapping record in the database can be associated with a rating generated by a ranking engine. A recommendation engine can be invoked to retrieve one or more mapping records from the database and an auto suggestion engine, for graphical display in the mapper. The integration flow can be published, and mapping information therein can be parsed by the recommendation engine into one or more mapping records, which are persisted into the database to update the mapping records in the database.",10372773
10373079,2019-08-06,15,B2,Method and apparatus for generating recommendations from descriptive information,"Meaningful words or phrases may be extracted from the information and used as tags. Weights may be determined for the tags, and tag clouds may be generated for the items. The tag clouds may be stored to a data store. Information specifying a tag cloud may be received. Recommended items for which the tag clouds most closely match the specified tag cloud may be identified. Standard vector space distance calculations, for example the cosine distance between the tag clouds, may be used to determine cloud similarity. The results may be filtered to optimize relevance, novelty and familiarity in accordance with preferences of the user. The recommended items may be displayed to a user interface. Users may interact with the user interface to steer the recommendations towards more relevant content.",10373079
10374905,2019-08-06,23,B2,System and method for intelligently mapping a source element to a target element in an integration cloud service design time,"In accordance with an embodiment, described herein is a system and method for creating advanced mappings between a source application and a target application in a design time of a cloud-based integration service. The web interface application in the design time can display a source data object including one or more source elements, a target data object including one or more target elements, and a plurality of mapping components. A mapping area for a particular target element can include a mapping expression between a source element and the particular target element. When a mapping component is dragged and dropped onto the mapping area, an application programming interface defining one or more actions in accordance with a plurality of rules can be triggered, to generate one or more mapping statements to modify the mapping expression to create an advanced mapping between the source element and the target element.",10374905
10375189,2019-08-06,23,B2,System and method for decoupling a source application from a target application in an integration cloud service,"In accordance with an embodiment, described herein is a system and method for decoupling a source application and a target application using a messaging service associated with a cloud-based integration service. A first integration flow can be provided to enable the source application or producer to publish messages to the messaging service. A second integration flow can be provided to enable the target application or consumer to subscribe to the messaging service to receive messages. The source application and the target application can be agnostic of each other's implementation details, and those of the messaging service, which effectively decouples the source and target applications. The system enables objects between the source and target applications to be sychronized, multiple applications to subscribe to the integration cloud service and register for updates, and one or more applications to be added or removed as subscribers without affecting other subscribers or producers.",10375189
10379934,2019-08-13,27,B2,System and method of providing post error analysis for instances of applications in cloud service environments on a per user basis,Instances of the applications executing in the cloud service environments that users interact with. Each of the cloud service environments includes a respective set of instances of the applications. Each of the cloud service environments and the respective set of instances is associated with a different one of the users. Errors are detected during the execution of the instances of the applications. Sets of log file information describing the errors are created. Each of the sets of log file information describes one of the errors. Log files are created. Each of the log files include one of the sets of log file information and an identification of a cloud service environment where an associated error occurred. The log files are categorized based on identifications of the cloud service environments. A post error analysis report including information from the categorized log files is provided for a particular cloud service environment.,10379934
10382291,2019-08-13,25,B2,Provisioning framework for binding related cloud services,"Techniques are described for binding secondary services with a cloud service instance. In one or more embodiments, a service definition defines a set of secondary services that are compatible with a primary service. In response to receiving a request to perform a provisioning operation for the instance of the primary service, a provisioning engine identifies, from the set of secondary services that are compatible with the primary service, a subset of one or more secondary services that are available. The provisioning engine binds the subset of one or more secondary services to the primary service to generate a deployment configuration for the instance of the primary service. Based on the deployment configuration, the provisioning engine provisions a set of components for the instance of the primary service.",10382291
10395042,2019-08-27,56,B2,Data encryption service,"A centralized framework for managing the data encryption of resources is disclosed. A data encryption service is disclosed that provides various services related to the management of the data encryption of resources. The services may include managing application policies, cryptographic policies, and encryption objects related to applications. The encryption objects may include encryption keys and certificates used to secure the resources. In an embodiment, the data encryption service may be included or implemented in a cloud computing environment and may provide a centralized framework for effectively managing the data encryption requirements of various applications hosted or provided by different customer systems. The disclosed data encryption service may provide monitoring and alert services related to encryption objects managed by the data encryption service and transmit the alerts related to the encryption objects via various communication channels.",10395042
10397375,2019-08-27,58,B2,Multi-tenant cloud-based queuing systems,"Techniques are disclosed for multi-tenant cloud-based queuing. Certain techniques are disclosed herein that provide for interactions and observability between tenant queues within a multi-tenant cloud-based queuing database. In some embodiments, the queues may be utilized by both users and merchants for both online and point-of-service interactions. Multiple queues for multiple tenants are hosted by a cloud computing system. Each queue may include one more queue entries, each of which includes a ticket value, and may further include a ticket alias. The ticket values and/or ticket aliases may be decoupled from a queue position for the entry. In some embodiments, the queue entries may be swapped within a queue or between queues, and the system may enable searching in or automated actions between queues and/or tenants based in part upon queue conditions.",10397375
10417435,2019-09-17,31,B2,Replacing a token with a mask value for display at an interface,"Techniques for replacing a token with a mask value are disclosed. In an embodiment, a masking engine is implemented by a cloud application. The cloud application receives, from a client device, a request for a data value associated with a data field. The masking engine determines that a set of data stored in association with the data field corresponds to a token format. The cloud application transmits a mask value, rather than the set of data, towards the client device. In an embodiment, a masking engine is implemented by a client device and/or a data residency proxy. The masking engine receives a set of data for display at an interface of the client device. The masking engine determines that the set of data corresponds to a token format. The masking engine causes a mask value, rather than the set of data, to be displayed at the interface.",10417435
10419301,2019-09-17,15,B2,System and method for multitenant service management engine in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing multitenancy support in a platform as a service or cloud computing environment. A platform component enables a service runtime to be shared by multiple tenants, by providing each tenant with a dedicated share or slice of a runtime instance. Each share/slice can be isolated from other shares/slices with respect to factors such as, for example, configuration, or quality of service. In accordance with an embodiment, during provisioning of a particular service runtime, a runtime definition associated with the service runtime can be utilized, for example by a service management engine, to configure the platform component to install one or more services within the service runtime. A particular service and its service runtimes can also be provisioned, within one or more runtime pools, according to a service runtime definition and placement configuration.",10419301
10419514,2019-09-17,238,B2,Discovery of federated logins,"A system includes download location information in an unprotected Uniform Resource Locator (“URL”), where the download location information identifies a download location for downloading an application provided by a cloud system. The system further includes login server information in the unprotected URL, where the login server information identifies a login server that is configured to be logged in before downloading the application from the download location. Based on the unprotected URL, the application is configured to be downloaded on a mobile device from the download location and after logging into the login server. The application may be developed by accessing a web-based application development server in the cloud system, and after the application is developed, the web-based application development server generates the unprotected URL.",10419514
10419524,2019-09-17,23,B2,System and method for workflow orchestration for use with a cloud computing environment,"A system and method for workflow orchestration for use with a cloud computing environment. Cloud environments, such as Oracle Public Cloud (OPC), provide a suite of applications, middleware, and database offerings that can be delivered to tenants in a self-service, elastically scalable, and secure manner. In accordance with an embodiment, the cloud environment can include a Platform as a Service (PaaS) environment, which provides a variety of services such as virtual assembly creation. A workflow orchestrator can be used to orchestrate operations between the cloud environment and the PaaS environment, e.g., by receiving a request from a tenant automation system, and coordinating the provisioning and deployment of virtual assemblies or applications. A customer can interact with the PaaS environment, e.g., to request a service, deploy to the service, or monitor the service.",10419524
10425386,2019-09-24,336,B2,Policy enforcement point for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request by a web gate for an identity management service for reaching an application, and determines a tenancy from a header value of the request. The system looks up a policy configured to be applied for the tenancy, and applies the policy to the request. The system then sends the request to a microservice based on a result of the applying of the policy to the request, where the microservice performs the identity management service for reaching the application.",10425386
10432631,2019-10-01,5,B2,System and method for providing a universal security handler for a cloud-based integration platform,"In accordance with an embodiment, described herein is a system and method for providing a universal security handler for use with a cloud-based integration platform. A universal security configuration interface can be provided to capture custom values, syntaxes, and/or grammars for a common set of security properties for different implementations of a particular authorization flow. The captured information can be used by a plurality of software components to create a custom security provider, which includes information needed for obtaining an access token from a specified cloud service provider. The security provider, which also includes methods for performing each step of the authorization flow, can be provided to a security processor configured to handle exchanges between the universal security configuration interface and the specified cloud service provider. The system enables the cloud-based integration platform to integrate with a plurality of third-party cloud services without writing additional code.",10432631
10445395,2019-10-15,339,B2,Cookie based state propagation for a multi-tenant identity cloud service,"A system that provides cloud based identity management, at a first microservice, saves a current state on a cookie that is stored on a browser, where the current state is saved in a format specific to the first microservice. The system performs an operation on the first microservice that generates a first portion of information and a second portion of information. The system stores the first portion of information related to the operation on the cookie, the first portion including the current state. The system provides a second portion of information related to the operation to a second microservice as a query parameter on a redirect Uniform Resource Locator (“URL”), where the second portion is removed from the cookie.",10445395
10452373,2019-10-22,14,B2,System and method for service import/export in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for exporting and importing a PaaS service and associated configurations across service domains are provided. The system comprises a cloud platform component provided as an installable software suite within a cloud environment; a test to production (T2P) framework module that includes a PaaS plugin and a plurality of T2P plugins and tools; and a user interface where the plugins and tools can be invoked to export domain configurations from a source service domain, and import the domain configurations to a target domain. In accordance with an embodiment, the system further includes a service provider interface (SPI) that can be implemented by an SME of each service housed in a service domain, to provide service backup and restore functionalities for exporting and importing that service.",10452373
10452374,2019-10-22,13,B2,System and method for providing a clone service for use with a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing a clone a service in a cloud platform environment. The system can clone a source service within a service domain or across service domains, by creating a new service from a same service definition package used for creating the source service, extracting post-provision changes from the source service, e.g., user applications and post-provision configurations, and applying the changes to the new service.",10452374
10454788,2019-10-22,15,B2,System and method for supporting multitenancy in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing multitenancy support in a platform as a service or cloud computing environment. A platform component enables a service runtime to be shared by multiple tenants, by providing each tenant with a dedicated share or slice of a runtime instance. Each share/slice can be isolated from other shares/slices with respect to factors such as, for example, configuration, or quality of service. In accordance with an embodiment, during provisioning of a particular service runtime, a runtime definition associated with the service runtime can be utilized, for example by a service management engine, to configure the platform component to install one or more services within the service runtime. A particular service and its service runtimes can also be provisioned, within one or more runtime pools, according to a service runtime definition and placement configuration.",10454788
10462142,2019-10-29,23,B2,Techniques for implementing a data storage device as a security device for managing access to resources,"Techniques are disclosed for implementation of a data storage device as a security device for managing access to resources. These techniques can be implemented for multi-factor authentication (MFA) to provide multiple layers of security for managing access to resources in an enterprise and/or a cloud computing environments. As a security device, a storage device can be used a portable device to provide a point of trust for multi-factor authentication across any client application or device operated to access resources. A storage device may be configured with security data for authentication with an access management system. After configuration, a portable storage device may be used for authentication of a user without credential information at any client device based on accessibility of the device to the portable storage device. A storage device configured as a security device can ensure that legitimate users have an easy way to authenticate and access the resources.",10462142
10462210,2019-10-29,52,B2,"Techniques for automated installation, packing, and configuration of cloud storage services","In some embodiments, a method of automatically configuring nodes in a storage service can include receiving, from an administrative computer, a configuration script at an installation framework executing in a cloud-based storage service. The configuration script can define a plurality of nodes to be deployed in the cloud-based storage service. The method can further include parsing the configuration script to identify configuration data for the plurality of nodes, and automatically installing each node in the plurality of nodes based on the configuration data, and, in response to a deployment instruction, deploying the plurality of nodes in the cloud-based storage service.",10462210
10467070,2019-11-05,3,B2,Processing cloud services and intelligence cloud services integration,"Various embodiments provide for integrating process cloud services (PCS) with intelligence cloud service (ICS). PCS analytics data is obtained using one or more PCS analytics data export application programming interfaces (APIs). A semantic model is provided to a predefined ICS system. The PCS analytics data is transferred to an ICS integration service. The PCS analytics data is converted into a format for a target intelligence system. The converted PCS analytics data is transferred to a service for later distribution as star schema data, for use by Representational State Transfer (REST) Application Programming Interfaces (APIs). The PCS analytics data is transferred from the ICS integration service to the predefined ICS system, for use by the ICS integration service to integrate PCS with the ICS system.",10467070
10476760,2019-11-12,15,B2,System and method for placement logic in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing multitenancy support in a platform as a service or cloud computing environment. A platform component enables a service runtime to be shared by multiple tenants, by providing each tenant with a dedicated share or slice of a runtime instance. Each share/slice can be isolated from other shares/slices with respect to factors such as, for example, configuration, or quality of service. In accordance with an embodiment, during provisioning of a particular service runtime, a runtime definition associated with the service runtime can be utilized, for example by a service management engine, to configure the platform component to install one or more services within the service runtime. A particular service and its service runtimes can also be provisioned, within one or more runtime pools, according to a service runtime definition and placement configuration.",10476760
10484243,2019-11-19,360,B2,Application management for a multi-tenant identity cloud service,"Embodiments provide application management functionality in a multi-tenant identity cloud service. Embodiments define a plurality of facets for the application, each facet describing a behavior of the application. Embodiments define an application template for the application that includes metadata to generate default values for the application. Embodiments generate a user interface (“UI”) that includes functionality to configure all of the defined facets.",10484243
10489599,2019-11-26,79,B2,Data encryption service and customized encryption management,"A centralized framework for managing the data encryption of resources is disclosed. A data encryption service is disclosed that provides various services related to the management of the data encryption of resources. The services may include managing application policies, cryptographic policies, and encryption objects related to applications. The encryption objects may include encryption keys and certificates used to secure the resources. In an embodiment, the data encryption service may be included or implemented in a cloud computing environment and may provide a centralized framework for effectively managing the data encryption requirements of various applications hosted or provided by different customer systems. The disclosed data encryption service may provide monitoring and alert services related to encryption objects managed by the data encryption service and transmit the alerts related to the encryption objects via various communication channels.",10489599
10491597,2019-11-26,67,B2,Enforcing data security in a cleanroom data processing environment,"Techniques for enforcing data security in a cleanroom data processing environment are described herein. In one or more embodiments, a virtual private cloud environment stores a first set of data provided by a first user account and a second set of data provided by a second user account, where the first user account is associated with a first set of one or more security credentials and the second user account is associated with a second set of security credentials and where the first user account is prevented from accessing at least the second set of data and the second user account is prevented from accessing at least the first set of data. In response to receiving, from the first user account or the second user account, a request to destroy the virtual private cloud environment, at least the first set of data and the second set of data are deleted.",10491597
10491689,2019-11-26,24,B2,Centralized monitoring of cloud operations,"In one or more embodiments, a system comprises logic for aggregating and analyzing cloud targets based on a variety of attributes. Responsive at least to receiving a selection of one or more attributes, the system: (a) aggregates, from a plurality of cloud targets, a set of cloud targets that includes a first cloud target supporting at least a first cloud service for a first tenant and a second cloud target supporting at least a second cloud service for a second tenant; (b) presents, through a display interface, the set of cloud targets that includes the first cloud target and the second cloud target; and (c) receiving, through the display interface, a second selection of an action to perform on at least one cloud target in the set of cloud targets. Responsive at least to the second selection, the system performs the action on at least one cloud target.",10491689
10503493,2019-12-10,23,B2,Distributed versioning of applications using cloud-based systems,"The present disclosure relates to exporting local applications to cloud systems and provisioning the exported application on the cloud systems. Additionally, templates can be generated for the provisioned application, and each template can be individually customized and deployed to a destination as an application environment with a defined topology. Rapidly and dynamically generating deployable templates of provisioned applications enables cloud-based distributed versioning of the applications.",10503493
10503771,2019-12-10,52,B2,Efficient incremental backup and restoration of file system hierarchies with cloud object storage,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10503771
10505826,2019-12-10,14,B2,Statistical pattern correlation of events in cloud deployments using codebook approach,"Correlations between patterns of events generated by various separate components within a cloud deployment are statistically determined. The determinations of the correlations can be based on dependencies between the components as indicated by a system topology graph including the components. The patterns correlated can be patterns of events from event streams generated by monitoring systems that monitor the components. The events in the event streams can represent changes over time in component state, behavior, or problem occurrence. Because the quantity of components within such a cloud deployment can be enormous, the quantity of events generated by the monitoring systems over a significant period of time can be voluminous.",10505826
10506025,2019-12-10,4,B2,Modifying document metadata with integrated cloud services,"An example system and method for facilitating integrating functionality of different cloud computing environments. A particular example embodiment includes mechanisms for integrating a document cloud service with a process cloud service, such that components, e.g., documents, of software processes developed and/or implemented via the process cloud service can leverage the document cloud service and be maintained thereby. End users and/or software developers may now define folder structures governed by a document cloud service, where the folder structures and accompanying folders and documents may be automatically generated, maintained, and accessed via the process cloud service.",10506025
10511589,2019-12-17,357,B2,Single logout functionality for a multi-tenant identity and data security management cloud service,"A cloud-based identity and access management system that implements single sign-on (“SSO”) receives a first request for an identity management service configured to allow for accessing applications. Embodiments send the first request to a first microservice, where the first microservice performs the identity management service by generating a token. The first microservice generates the token at least in part by sending a second request to a SSO. The SSO microservice implements an SSO and generates a cookie that includes a global state and is used for communicating with different microservices. Embodiments receive a single log-out (SLO) of the SSO and use the cookie to iteratively log-out of the applications, where, after each log-out of an application of a first protocol, a redirect is performed to the SSO microservice to trigger log-out of applications of a different protocol.",10511589
10514910,2019-12-24,4,B2,Automatically mapping data while designing process flows,"An example method facilitates associating data objects with elements of a process to be implemented via a process-based software application. The example method includes determining that a developer has added a particular software element to a software application being developed by the developer; accessing metadata describing the software element; and using the metadata to automatically associate the software element to one or more data objects to be used by the software element during running of the software application. A process cloud may facilitate implementing the method by automatically performing data mapping for software elements, such as approval tasks, forms, and so on, by determining appropriate task outcome data objects with reference to data characterizing a software flow of the software application, and by similarly automatically selecting and/or creating data objects for forms, which may be associated with or used by a task.",10514910
10516672,2019-12-24,348,B2,Service discovery for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request for an identity management service, authenticates the request, and forwards the request to a microservice configured to perform the identity management service, where the microservice is implemented by a microservice virtual machine provisioned by a provisioning framework, and the forwarding is according to routing information configured based on metadata information stored in a registry by the provisioning framework. The system then performs the identity management service by the microservice.",10516672
10523493,2019-12-31,7,B2,Cross-cloud operation management,"Operations include executing operations across different third-party computing clouds provided by different vendors. A cloud discovery process allows for a virtual machine, executing on a computing cloud, to discover resources on a different computing cloud provided by a different vendor. The cloud discovery process is implemented by one or more cloud agents executing within third-party clouds. A cloud agent, corresponding to a third-party computing cloud, may use a cross-cloud repository that is maintained by a tenant to discover resources in other third-party computing clouds provided by different vendors. An Application Programming Interface (API) for accessing a particular third-party computing cloud may be exposed to a cloud agent of another third-party computing cloud provided by a different vendor. The cloud agent may trigger operations on the particular third-party computing cloud based on events detected by the cloud agent in the third-party computing cloud corresponding to the cloud agent.",10523493
10528551,2020-01-07,19,B2,System and method for providing a representational state transfer proxy service for a blockchain cloud service,"Systems and methods for implementing a distributed ledger as a blockchain cloud service are provided. The blockchain cloud service can include nodes of the distributed ledger and a REST proxy service component. The REST proxy service uses a service development kit for the distributed ledger to communicate with the distributed ledger, and can provide REST APIs for use by client applications to query through chaincodes, synchronously or asynchronously invoke transactions through the chaincodes, get transaction statuses, and get BCS proxy versions. The REST proxy service component can authenticate REST calls, and translate the REST calls into remote procedural calls, for use in interfacing with the distributed ledger. The REST proxy service component can further provide REST APIs that support the same functions which are provided by the BCS management console component, and provide a user interface for client applications to consume the BCS instance.",10528551
10530578,2020-01-07,393,B2,Key store service,"A key store microservice is provided for a cloud based identity management system. The key store microservice receives, over a network, a request from a client application to retrieve a key, the request including a tenancy identifier, and determines whether the key is present in a tenant specific memory cache associated with the tenancy identifier. When the key is determined to be present in the tenant specific memory cache, the key store microservice retrieves the key from the tenant specific memory cache, retrieves a decryption key from a key wallet, decrypts the key retrieved from the tenant specific memory cache using the decryption key retrieved from the key wallet, and sends, over the network, the key to the client.",10530578
10530599,2020-01-07,58,B2,"Methods, systems and computer readable media for providing service capability exposure function (SCEF) as a cloud service","A system for providing a cloud-based service capability exposure function (SCEF) includes a cloud computing platform having at least one processor. A cellular device connectivity (CDC) service module implemented by the processor for provides SCEF services, including determining whether to invoke Internet of things (IoT) service handling based on content of received messages and forwarding messages requiring IoT service to a service capability server (SCS) or an application server (AS) for receiving the IoT service handling. At least one cloud access interface allows IoT devices and network equipment external to the CDC service module to access the first CDC service module. The cloud computing platform, the CDC service module, and the cloud access interface are hosted by a cloud service provider separate from a mobile network operator hosting the network equipment external to the CDC service module that access the CDC service module via the cloud access interface.",10530599
10536545,2020-01-14,33,B2,Cloud database connection multiplexing,"Techniques are described herein for routing requests for database cloud services. In an embodiment, a different Uniform Resource Identifier (URI) is assigned to each respective database schema of a plurality of database schemas in one or more databases. For each respective database schema, mapping data is stored that maps at least a portion of the URI to the respective database schema. In response to receiving a first request that includes a URI and a set of one or more database commands, a target database schema in a target database is identified based on the mapping data and the URI. A connection is established for accessing the target database schema in the target database. The set of one or more database commands is sent over the connection to access the target database schema in the target database.",10536545
10540384,2020-01-21,59,B2,"Compression and secure, end-to-end encrypted, ZFS cloud storage","Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10540384
10542100,2020-01-21,24,B2,Systems and methodologies for defining and scheduling custom actions as cloud operations,"In one or more embodiments, a system defines a plurality of waves for performing a set of scheduled operations on a set of cloud targets within a particular time window, where the plurality of waves includes a first wave for performing scheduled operations on a first subset of cloud target and a second wave for performing scheduled operations on a second subset of cloud targets. During the first wave, a first subset of scheduled operations within the particular time window are performed on two or more target resources from the first subset of target resources. The system determines a rate of success for performing the first subset of scheduled operations on the two or more target resources from the first subset of target resources. If the rate of success does not satisfy the threshold, then the system delays or cancels operations from subsequent waves including the second subset of operations.",10542100
10545853,2020-01-28,10,B2,Stateless debugging of a script injected into a web application that is located in a mult-node cloud system,A debug session identifier representing a debug session for the web application is stored in local storage. The web application is located in multi-node cloud storage. The local storage resides on a developer computer system that executes outside of the multi-node cloud system. A stateless debugger node and a stateless target tester node are selected from at least one node pool in the multi-node cloud system. The stateless debugger node and the stateless target tester node are separate from each other. An internal connection is provided between the stateless debugger node and the stateless target tester node within the multi-node cloud system based on the debug session identifier during the debug session. The script that is injected into the web application is debugged while the web application executes on the stateless target tester node.,10545853
10552469,2020-02-04,56,B2,File system hierarchy mirroring across cloud data stores,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10552469
10554751,2020-02-04,48,B2,Initial resource provisioning in cloud systems,"A method of provisioning cloud-based applications includes receiving requests from computer systems to provision applications available in a cloud computing environment, assigning each of the computer systems to a first resource instance in the cloud computing environment such that the applications are executed for each of the plurality of computer systems on the first resource instance, monitoring usage of resources for each of the computer systems, grouping each of the computer systems into groups based on the usage of the resources, allocating a second resource instance, and reassigning computer systems in a first group from the first resource instance to the second resource instance.",10554751
10558699,2020-02-11,38,B2,Cloud migration of file system data hierarchies,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10558699
10560518,2020-02-11,2,B2,Cloud infrastructure optimization through client request classification,"In accordance with an embodiment, described herein is a system and method for optimizing cloud infrastructure through client request classification in a cloud computing environment. The cloud infrastructure can include one or more high-compute infrastructure instances, and one or more standard-compute infrastructure instances. Each request received at a load balancer can be checked against a request classification cache, to determine whether the request has been classified, and if it has been classified, whether the request can be routed to a high-compute infrastructure instance or a standard-compute infrastructure instance based on a classification of the request. An unclassified request can be classified based on a plurality of request parameters, and threshold values derived from the cloud infrastructure; and can be stored in the request classification cache. Classified requests in the classification cache can be provided to a cloud vendor for use in optimizing the cloud infrastructure.",10560518
10579367,2020-03-03,414,B2,Zero down time upgrade for a multi-tenant identity and data security management cloud service,"Embodiments implement data versioning in a cloud-based identity management system. Embodiments provide a first microservice for performing an identity management service and having a corresponding first version application programming interface (“API”) that identifies the first microservice. Embodiments provide a second microservice for performing the identity management service, the second microservice comprising a new version of the first microservice and having a corresponding second version API that identifies the second microservice. Embodiments receive a request for performing the identity management service from a client of the identity management system, the request including a uniform resource locator (“URL”), where the first version API or the second version API are identified in the URL. Embodiments then perform the identity management service using either the first microservice or the second microservice based on the request and using tenant data stored in a database.",10579367
10581820,2020-03-03,337,B2,Key generation and rollover,"Key generation and roll over is provided for a cloud based identity management system. A key set is generated that includes a previous key and expiration time, a current key and expiration time, and a next key and expiration time, and stores the key set in a database table and a memory cache associated with the database table. At the current key expiration time, the key set is rolled over, including retrieving the key set from the database table, updating the previous key and expiration time with the current key and expiration time, updating the current key and expiration time with the next key and expiration time, generating a new key and expiration time, updating the next key and expiration time with the new key and expiration time, and updating the key set in the database table and the memory cache.",10581820
10581867,2020-03-03,194,B2,Multi-tenancy identity management system,"A multi-tenant identity management (IDM) system enables IDM functions to be performed relative to various different customers' domains within a shared cloud computing environment and without replicating a separate IDM system for each separate domain. The IDM system can provide IDM functionality to service instances located within various different customers' domains while enforcing isolation between those domains. A cloud-wide identity store can contain identity information for multiple customers' domains, and a cloud-wide policy store can contain security policy information for multiple customers' domains. The multi-tenant IDM system can provide a delegation model in which a domain administrator can be appointed for each domain, and in which each domain administrator can delegate certain roles to other user identities belong to his domain. Service instance-specific administrators can be appointed by a domain administrator to administer to specific service instances within a domain.",10581867
10585682,2020-03-10,380,B2,Tenant self-service troubleshooting for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system provides a user interface (“UI”) to a tenant of an identity-management service. The system enables diagnostics functionality for the tenant based on a user input received via the UI, where the diagnostics functionality allows for a user in the tenant to configure and receive diagnostics reports related to the identity-management service. The system then receives a request for the identity-management service, accesses a microservice based on the request, performs the identity-management service by the microservice, collects and records diagnostics information during the performing of the identity-management service, and displays the diagnostics information to the user via the UI.",10585682
10586061,2020-03-10,23,B2,Federated search,Systems and methods are provided for federated search. Search results can be federated across cloud-based data stores having data accessible to applications hosted in the cloud and private data stores protected by a data security provider that manages communications between a private network and the cloud. A search query invoked by a client of a cloud-based application can be partitioned into search criteria applicable to the cloud-based data stores and search criteria applicable to the private data store. The cloud-based application can perform a search using the search criteria applicable to the cloud-based data stores and use results of a search against the private data store to federate the results.,10586061
10587700,2020-03-10,24,B2,Cloud operation reservation system,"In one or more embodiments, a cloud operation reservation system is provided through which cloud operations may be scheduled and managed. The cloud operation reservation system includes logic for defining a set of time windows that are available to perform one or more cloud operations on cloud targets and presenting the set of time windows to one or more tenants of a cloud service. Tenants may browse the presented set of time windows and submit reservation requests to update and/or perform other operations on cloud targets. In response to receiving, a request to reserve one or more slots in a particular time window, the cloud operation reservation system schedules one or more cloud operations to be performed on a cloud target that is available to at least one tenant.",10587700
10592521,2020-03-17,54,B2,Method and system for implementing target model configuration metadata for a log analytics system,"Disclosed is a system, method, and computer program product for implementing a log analytics method and system that can configure, collect, and analyze log records in an efficient manner. The log analytics system, method, and computer program product provide target-based configuration of log monitoring metadata. The log analytics system, method, and computer program product can be implemented in a cloud-based/SaaS-based architecture.",10592521
10592684,2020-03-17,23,B2,Automatic operation detection on protected field,"Systems and methods are provided for automatic operation detection on protected fields. A data model configuration can be used to specify which attributes of a data model used by a cloud-based application are protected by a data security provider monitoring communications between the application and a client device. A determination can be made automatically which operations of the cloud-based application are supported for protected fields. The cloud-based application can be configured to enable/disable certain features, such as validators, auto complete, search operators, etc. according to whether the attributes are protected fields.",10592684
10594684,2020-03-17,385,B2,Generating derived credentials for a multi-tenant identity cloud service,"A multi-tenant system that provides cloud-based identity management receives a request to execute a job, where the job has a scheduled start time, or a timeframe to complete, that exceeds the validity time of a request access token. The system generates the request access token corresponding to the job, where the request access token has access privileges. The system schedules the job and persists the request access token. The system triggers the job at the scheduled start time and generates a derived access token based on the request access token, where the derived access token includes the access privileges. The system then injects the derived access token during runtime of the job and calls a microservice using the derived access token to execute the job.",10594684
10621005,2020-04-14,65,B2,Systems and methods for providing zero down time and scalability in orchestration cloud services,"Techniques are described herein for providing highly available and scalable cloud services. In one or more embodiments, a network service receives from a first client of a plurality of clients, a request to lease a first slice of a plurality of slices of a workload. In response, the network services assigning, to the first client, a lease for the first slice, wherein the lease expires after a lease duration. The network service then receives, from a second client of the plurality of clients, a request to lease the first slice. Based on a state associated with the first client after the lease duration, the network service reassigns the lease for the first slice to the second client. The second client processes a subset of workflow executions associated with the first slice that have not previously been processed by the first client.",10621005
10621329,2020-04-14,141,B2,"Mobile application, resource management advice","Techniques for a resource management advice service are provided. In some examples, resource management advice and/or instructions may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more resource management operations associated with a service provider. Based at least in part on the requested operation and/or the particular service provider, advice and/or instructions for managing the resource may be provided.",10621329
10642878,2020-05-05,58,B2,File system hierarchies and functionality with cloud object storage,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10642878
10642879,2020-05-05,59,B2,Guaranteed file system hierarchy data integrity in cloud object stores,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10642879
10650035,2020-05-12,59,B2,"Hybrid cloud mirroring to facilitate performance, migration, and availability","Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10650035
10657167,2020-05-19,64,B2,Cloud gateway for ZFS snapshot generation and storage,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10657167
10657239,2020-05-19,82,B2,Limiting access to application features in cloud applications,"Techniques are provided for limiting access to a feature in an application. Certain application features, such as access controlled features, are not generally accessible to all users of an integration cloud service system. When a user makes a request to access an access controlled feature, the system can determine whether user information satisfies the requirements to access a requested access controlled feature. If the user satisfies the requirements for the requested access controlled feature, an access key can be dynamically generated based on the user information.",10657239
10678632,2020-06-09,14,B2,Extract-transform-load diagnostics,"A cloud-based ETL system provides error detection, error correction and reporting of data integration flows hosted by cloud services. Categories of errors are identified using one or more checks at different points of a data integration flow and one or more actions selected based at least in part on the error category. A determination can be made whether the error category is fault tolerant and one or more actions can be selected based at least in part on the error fault tolerance to correct the error, restart a flow, or generate a notification assisting a user to correct the error.",10678632
10693861,2020-06-23,417,B2,Task segregation in a multi-tenant identity and data security management cloud service,Embodiments provide cloud-based identity management by receiving a request to perform an identity management service that includes real-time tasks and near-real-time tasks. Embodiments synchronously execute the real-time tasks by accessing at least one microservice using a corresponding application programming interface (“API”). Embodiments asynchronously execute the near-real-time tasks by offloading the near-real-time tasks to one or more message queues.,10693861
10698941,2020-06-30,59,B2,ZFS block-level deduplication at cloud scale,"Techniques described herein relate to systems and methods of data storage, and more particularly to providing layering of file system functionality on an object interface. In certain embodiments, file system functionality may be layered on cloud object interfaces to provide cloud-based storage while allowing for functionality expected from a legacy applications. For instance, POSIX interfaces and semantics may be layered on cloud-based storage, while providing access to data in a manner consistent with file-based access with data organization in name hierarchies. Various embodiments also may provide for memory mapping of data so that memory map changes are reflected in persistent storage while ensuring consistency between memory map changes and writes. For example, by transforming a ZFS file system disk-based storage into ZFS cloud-based storage, the ZFS file system gains the elastic nature of cloud storage.",10698941
10699020,2020-06-30,86,B2,Monitoring and alert services and data encryption management,"A centralized framework for managing the data encryption of resources is disclosed. A data encryption service is disclosed that provides various services related to the management of the data encryption of resources. The services may include managing application policies, cryptographic policies, and encryption objects related to applications. The encryption objects may include encryption keys and certificates used to secure the resources. In an embodiment, the data encryption service may be included or implemented in a cloud computing environment and may provide a centralized framework for effectively managing the data encryption requirements of various applications hosted or provided by different customer systems. The disclosed data encryption service may provide monitoring and alert services related to encryption objects managed by the data encryption service and transmit the alerts related to the encryption objects via various communication channels.",10699020
10701094,2020-06-30,13,B2,Techniques for monitoring privileged users and detecting anomalous activities in a computing environment,"In various implementations, a security management and control system for monitoring and management of security for cloud services can include automated techniques for identifying the privileged users of a given cloud service. In various examples, the security management and control system can obtain activity logs from the cloud service, where the activity logs record actions performed by users of an organization in using the cloud service. In various examples, the security management and control system can identify actions in the activity logs that are privileged with respect to the cloud service. In these and other examples, the security management and control system can use the actions in the activity log to identify privileged users. Once the privileged users are identified, the security management and control system can monitor the privileged users with a higher degree of scrutiny.",10701094
10705823,2020-07-07,391,B2,Application templates and upgrade framework for a multi-tenant identity cloud service,"A system manages tenant application updates in a multi-tenant cloud-based identity and access management (IAM) system by defining one or more application templates; creating one or more applications for one or more tenants of the multi-tenant cloud-based IAM system using the one or more application templates; applying a change to at least one of the one or more application templates; determining whether the one or more applications need to be updated in an automatic mode, a semi-automatic mode, or a manual mode, to incorporate the change; and updating at least one of the one or more applications in an applicable one of the automatic mode, the semi-automatic mode, or the manual mode, based on the outcome of the determining.",10705823
10713365,2020-07-14,8,B2,"Testing cloud application integrations, data, and protocols","Provided are systems, methods, and computer-readable medium for a simulation platform that can generate simulated activity data for testing a security monitoring and control system. In various examples, the simulation platform can parse the activity data from a cloud service to determine the fields associated with each action in the activity data. The simulation platform can then generate a template, where each entry in the template describes an action and the fields associated with the action. The simulation platform can further generate a configuration that describes a test scenario. The simulation platform can use the configuration and the template to generate the particular action, including randomizing some or all of the fields of the action. When input into the security monitoring and control system, the system can operate on the simulated activity data in the same way as when the system ingests live activity data.",10713365
10715457,2020-07-14,220,B2,Coordination of processes in cloud computing environments,"Methods and systems of managing computer cloud resources, including at least one database, at least one server configured to, act as an orchestration site, wherein the orchestration site is configured to receive at least one cloud resource management plan from at least one user and store the at least one plan in the at least one database and act as an orchestration manager. The orchestration manager is configured to retrieve the at least one plan from the at least one database and execute the plan with at least one site controller.",10715457
10719964,2020-07-21,26,B2,System and method for graphically displaying recommended mappings in an integration cloud service design time,"In accordance with an embodiment, described herein is a system and method for graphically displaying recommended mappings between a source data object and a target data object in a design time of a cloud-based integration service. The system can include a recommendation engine that provides recommended mappings between the source and target data objects, so that the recommended mappings can be graphically displayed in a mapping interface. The recommended mappings can be filtered based one or more filtering criteria. Each recommended mapping can be displayed differently from an actual mapping, and can be associated with a reliability/quality indicator. A particular recommended mapping can be accepted to become an actual mapping, or to be rejected. The system allows a user to toggle between actual mappings and recommended mappings between the source and target data objects.",10719964
10732964,2020-08-04,17,B2,Systems and methods for updating multi-tier cloud-based application stacks,"The present disclosure relates to automatically and periodically updating a multi-tier application stack in a cloud environment. More particularly, the present disclosure relates to systems and methods that access a central server to determine if new updates have been released, and when new updates have been released, automatically apply the new updates to an application environment with minimal network burden and service interruption.",10732964
10735394,2020-08-04,395,B2,Caching framework for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request from a client for a resource, authenticates the request, and accesses a microservice based on the request. The system determines, by the microservice, whether the resource is cached in a near cache or in a remote cache, retrieves the resource from the near cache or from the remote cache when the resource is cached, and calls an administration microservice to obtain the resource when the resource is not cached. The system then provides the resource to the client.",10735394
10740090,2020-08-11,35,B2,Efficient application patching in heterogeneous computing environments,"Techniques are disclosed for efficiently updating multiple computing systems in potentially heterogeneous computing environments. Embodiments provide for efficient patching of multiple software applications executing in multiple execution environments. For example, a custom installation tool can be provided to each of the computing devices in the cloud infrastructure system. The computing devices can execute the custom installation tool and identify, retrieve, and apply the necessary patches to applications on the computing devices. The patch-related processing across the multiple computing devices may occur in parallel such that at least a portion of the processing is performed concurrently from one another.",10740090
10742568,2020-08-11,432,B2,"System and method for supporting multi-tenancy in an application server, cloud, or other environment","In accordance with an embodiment, described herein is a system and method for supporting multi-tenancy in an application server, cloud, on-premise, or other environment, which enables categories of components and configurations to be associated with particular application instances or partitions. Resource group templates define, at a domain level, collections of deployable resources that can be referenced from resource groups. Each resource group is a named, fully-qualified collection of deployable resources that can reference a resource group template. A partition provides an administrative and runtime subdivision of the domain, and contains one or more resource groups. Each resource group can reference a resource group template, to bind deployable resources to partition-specific values, for use by the referencing partition. A tenant of the application server or cloud environment can be associated with a partition, or applications deployed therein, for use by that tenant.",10742568
10747575,2020-08-18,23,B2,System and method for providing a dynamic cloud with subnet administration (SA) query caching,"A system and method support can subnet management in a cloud environment. During a virtual machine migration in a cloud environment, a subnet manager can become a bottleneck point that delays efficient service. A system and method can alleviate this bottleneck point by ensuring a virtual machine retains a plurality of addresses after migration. The system and method can further allow for each host node within the cloud environment to be associated with a local cache that virtual machines can utilize when re-establishing communication with a migrated virtual machine.",10747575
10761682,2020-09-01,9,B2,Electronic presentation repository and interface,"Embodiments of the invention include techniques for storing and managing repositories of electronic presentation documents. Presentation storage repositories may be implemented in various storage systems including individual computer servers, distributed storage networks, cloud-based storage systems, and the like. Presentation search interfaces may support various searching and customization capabilities. Search interface and search engine components may be implemented to receive search requests from client devices, retrieve electronic presentation data from one or more storage repositories, and generate customized search results based on the retrieved electronic presentation data. Search and presentation capabilities may include storing user-specific selections of presentation cover slides, and then retrieving and/or generating user-specific thumbnails for search results interfaces. Additionally, presentation access and usage statistics may be tracked and stored within the storage repository and may be incorporated into the customized searching and presentation capabilities.",10761682
10762079,2020-09-01,25,B2,System and method for managing a blockchain cloud service,"In accordance with an embodiment, described herein is a system and method for implementing a distributed ledger a blockchain cloud service. The blockchain cloud service can include nodes of the distributed ledger and a management console component. The management console component can include a web application running in a script runtime environment, a plurality of backend of APIs for communicating with various nodes of the blockchain cloud service, and a plurality of client APIs configured to be invoked by a client application. The plurality of client APIs uses one or more of the plurality of backend APIs in provisioning the distributed ledger as a blockchain cloud service, and in managing the managing the blockchain cloud service.",10762079
10764273,2020-09-01,305,B2,Session synchronization across multiple devices in an identity cloud service,"Embodiments provide session synchronization across multiple user devices in a cloud-based identity and access management (IAM) system by authenticating the user into an application on a first device; receiving a first request by a single-sign-on (SSO) service of the IAM system from the first device to enroll the first device in a circle of trust (CoT) device group associated with the user, where a second device of the user is already enrolled in CoT; sending a push notification to the second device to obtain user consent to enroll the first device in CoT, where the second device obtains user consent and sends a consent token to the first device; receiving a second request including the consent token from the first device; verifying the consent token; enrolling the first device in CoT; and performing SSO session synchronization across devices enrolled in CoT.",10764273
10778542,2020-09-15,73,B2,Rule based subscription cloning,"Aspects of the present invention relate to techniques for providing a user with access to a service provided by a cloud infrastructure system based on an existing service. A user may be provided with a clone subscription based on a base subscription to an existing service provided by the cloud infrastructure system. A clone subscription can provide the user with an environment (e.g., a service) that is designated for one use (e.g., development and testing) different from another use (e.g., production) designed for a base subscription. Changes made to a base subscription may be propagated to the clone subscription based on rules. A clone subscription can be modified to vary the clone configuration independently from the base configuration.",10778542
10789050,2020-09-29,34,B2,Stage file objects in a visual design tool for integration development,"Described herein are systems and methods for providing stage file objects in a visual design tool for integration development. The integration can be developed on a cloud based integration service that can receive, via a visual development tool interface, selection of a stage file object for insertion into an integration flow. The cloud based integration service can also receive a selection of a type value for the stage file object. The scope for the stage file object can be determined, and the stage file object can be displayed in the integration flow based on the type value and the scope.",10789050
10798165,2020-10-06,306,B2,Tenant data comparison for a multi-tenant identity cloud service,"Embodiments replicate resources in a multi-tenant cloud system. Embodiments receive a master resource, associated with a master account of the cloud system to be replicated, where the master resource includes a master JavaScript Object Notation (“JSON”) object and includes a plurality of master attributes. Embodiments generate a master resource metadata JSON by calculating hash values for each of the master attributes to generate master attribute level hashes and by calculating an aggregate of all of the hash values to generate a master resource level hash. Embodiments store each master attribute of the master JSON object in a separate column of a master database table associated with the master account and store the master resource metadata JSON is in a separate hash column of the master database table. Embodiments replicate the master JSON object to create a replicated JSON object including a plurality of replicated attributes.",10798165
10805350,2020-10-13,2,B2,System and method for providing security services using a configuration template in a multi-tenant environment,"In accordance with an embodiment, described herein is a system and method for providing security services using a security configuration template in a multi-tenant environment. The system can load a security configuration template in memory when the multi-tenant environment starts, and can use the security configuration template to create a multi-headed tree to represent tenant-specific security configurations. Each head of the multi-headed tree can represent a root node of either the security configuration template or a tenant-specific security configuration. Each tenant-specific security configuration can reuse one or more nodes in the security configuration template by referencing those nodes, and can include one or more new nodes created from the security configuration template by replacing each placeholder therein with tenant-specific values. By creating tenant-specific security configurations on the fly in memory, the system can simplify the tenant onboarding process and save precious computing and storage resources, e.g., in a cloud environment.",10805350
10810229,2020-10-20,11,B2,Database replication based on data access scores,"Techniques described herein relate to data replication processes, data migration, and other data transfers between physical storage devices. Embodiments include calculating data access metrics for particular database objects, and initiating data replication processes and/or other data transfers for determined subset of the database objects based on the access metrics for the subsets of database objects. Data access metrics may be determined for particular database objects stored within a database, cloud-based storage, or other physical storage device, or across multiple storage devices. Based on the data access scores of various database objects, a replication engine or other data transfer system may determine particular subsets of database objects to be replicated, and then may initiate a replication process or other data transfer process.",10810229
10817803,2020-10-27,169,B2,Data driven methods and systems for what if analysis,"Techniques are described for applying what-f analytics to simulate performance of computing resources in cloud and other computing environments. In one or more embodiments, a plurality of time-series datasets are received including time-series datasets representing a plurality of demands on a resource and datasets representing performance metrics for a resource. Based on the datasets at least one demand propagation model and at least one resource prediction model are trained. Responsive to receiving an adjustment to a first set of one or more values associated with a first demand: (a) a second adjustment is generated for a second set of one or more values associated with a second demand; and (b) a third adjustment is generated for a third set of one or more values that is associated with the resource performance metric.",10817803
10826975,2020-11-03,11,B2,System and method for providing java cloud services for use with a cloud computing environment,"A system and method for providing JAVA cloud services for use with a cloud computing environment. In accordance with an embodiment, a cloud environment, such as ORACLE Public Cloud (OPC), can include a JAVA cloud services (JCS) infrastructure, which allows a suite of software applications, middleware, and database offerings to be delivered to customers in a self-service, elastically scalable manner. In accordance with an embodiment, the JCS infrastructure can orchestrate, in combination with other cloud environment components, the creating and/or updating of a platform instance of a JAVA cloud service, including provisioning and deployment of the platform instance and/or deployment of software applications, and one or more personality injection or application deployment processing. Additional resources and/or services, such as a database service, can be wired to or otherwise associated with the JAVA cloud service, for use by customer applications that are deployed to the cloud.",10826975
10831789,2020-11-10,399,B2,Reference attribute query processing for a multi-tenant cloud service,"A system performs reference attribute query processing in a multi-tenant cloud-based identity and access management (IAM) system by: receiving a request from a client of the multi-tenant cloud-based IAM system, where the request indicates one or more reference attributes associated with a resource that is persisted in a database of the multi-tenant cloud-based IAM system, and the request indicates one or more filter conditions configured to be applied on the one or more reference attributes; building a query based on the one or more reference attributes and the one or more filter conditions; retrieving resource data by executing the query on a database of the multi-tenant cloud-based IAM system, where the retrieved resource data is associated with the one or more reference attributes and satisfies the one or more filter conditions; and returning the retrieved data to the client of the multi-tenant cloud-based IAM system.",10831789
10834137,2020-11-10,342,B2,Rest-based declarative policy management,"One embodiment performs policy evaluation in a multi-tenant cloud-based identity and access management (“IAM”) system. The embodiment receives a request for an IAM service for a tenant of the multi-tenant cloud-based IAM system, and determines an applicable policy associated with the IAM service. The embodiment determines a policy expression of the applicable policy, where the policy expression includes a reference to an attribute value, and where the reference either includes a function or includes an application programming interface (“API”) of an attribute retriever class. The embodiment obtains the attribute value by invoking the function or by invoking the API of the attribute retriever class. The embodiment evaluates the applicable policy at run-time using at least the obtained attribute value, and performs the IAM service based on the result of the evaluating of the policy.",10834137
10846390,2020-11-24,400,B2,Single sign-on functionality for a multi-tenant identity and data security management cloud service,"A cloud-based identity and access management system that implements single sign-on (“SSO”) receives a first request for an identity management service configured to allow for accessing an application. Embodiments send the first request to a first microservice which performs the identity management service by generating a token. The first microservice generates the token at least in part by sending a second request to a SSO microservice that is configured to provide SSO functionality across different microservices that are based on different protocols. Embodiments then receive the token from the first microservice and provide the token to the application, where the token allows for accessing the application.",10846390
10848543,2020-11-24,445,B2,Security tokens for a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request from a client for obtaining an access token for a user to access a resource. The system determines, based on the request, a tenancy of the client, a tenancy of the user, and a tenancy of the resource. The system accesses a microservice based on the request, and performs an identity management service by the microservice based on the request, where the identity management service includes generating the access token that identifies the tenancy of the resource and the tenancy of the user.",10848543
10862816,2020-12-08,8,B2,Cloud computing cluster isolation with authentication and automatic configuration deployment,"Systems, methods, and other embodiments associated with cloud computing cluster isolation with strong authentication and automatic configuration deployment are described. In one embodiment, a method includes, in response to receiving an authentication frame through the uncontrolled port, (i) extracting data from the authentication frame for performing authentication, and (ii) parsing the authentication frame to identify a piggybacked virtual network identifier that functions as an instruction to create an isolated connection. If the authentication was successful and the piggybacked virtual network identifier was identified, creating the isolated connection between the controlled port and a virtual network that is identified by the piggybacked virtual network identifier.",10862816
10866884,2020-12-15,13,B2,Stateless injected script debugging,"Debugger requests are for debugging a script injected into a web application during a debug session are received. Each of the debugger requests include the same debug session identifier. A different one of the debugger requests is associated with each of the break points set for debugging the script. For each of the debugger requests: a new stateless debugger node is connected with a single stateless target tester node. Stateless debugger nodes and stateless target tester nodes reside inside of the multi-node cloud system. The script is debugged on the same stateless target tester node while the debugging is controlled from a developer computer system that is outside of the multi-node cloud system. After completion of each of the debugger requests: a current stateless debugger node is disconnected, and state stored in the multi-node cloud system used for servicing a current debugger request is destroyed.",10866884
10868721,2020-12-15,17,B2,System and method for supporting a situational configuration in an application server environment,"In accordance with an embodiment, described herein is a system and method for supporting a situational configuration in an application server environment includes at least one computer having an application server, enterprise, cloud computing, or other computing environment executing thereon, together with one or more managed server instances that operate as part of a domain and a situational configuration file defining server configuration setting changes and an expiration. The server configuration changes are loaded if the one or more managed server instances detect an addition of the situational configuration file or a change in the situational configuration file. The server configuration changes are unloaded if the one or more managed server instances detect deletion of the situational configuration or expiration of the situational configuration.",10868721
10873628,2020-12-22,56,B2,System and method for non-intrusive context correlation across cloud services,"In accordance with an accordance, described herein is a system and method for providing non-intrusive context correlation across a plurality of cloud services in different cloud environments. A cloud service context correlator can be configured with each cloud service, and can pass a common identifier through the cloud services. The cloud service context correlator can identify one or more loggers in a cloud service and their types, and create a log formatter for each logger based on its type to inject the common identifier into log messages generated by the logger. The injected common identifier can correlate log messages from the cloud services, and can be used to search for the correlated log messages in a dashboard of a data visualization tool. The cloud service context correlator does not require code changes for each cloud service, and can be applied to a synchronous or asynchronous representational state transfer (REST) flow.",10873628
8224851,2012-07-17,25,B2,Tag creation system,"A system to create tags for tag cloud displays includes an authentication service to authenticate a user. The system includes a set of valid resources stored in a database system. A tag creation tool permits the authenticated user to create at least one tag that serves to identify a selected resource within the set of valid resources. Each tag includes a weighted value. Each tag may include a public attribute that indicates that the tag is accessible to authenticated users and non-authenticated users. Alternatively, each tag may include a private attribute that indicates that the tag is only accessible to the authenticated user. A user interface displays tags in a tag cloud in accordance with attributes of the tags and weighted values of the tags.",8224851
8261269,2012-09-04,7,B2,System and method for synchronizing transient resource usage between virtual machines in a hypervisor environment,"A system and method for synchronizing transient resource usage between virtual machines, e.g. Java Virtual Machines (JVMs), running within a hypervisor. In accordance with an embodiment, the system allows for synchronizing garbage collection and code optimization to reduce transient processor (cpu) and memory usage. In accordance with an embodiment, the system comprises a computer; a hypervisor for executing virtual servers running JVMs; a communication channel between the virtual servers; wherein each virtual server further comprises non-transient and transient memory and a synchronization module. In accordance with an embodiment the synchronization modules schedule garbage collects and code optimizations to minimize overlaps, thereby reducing the peak transient memory and cpu usage and the resulting volatility of transient resource usage within a computer. In accordance with another embodiment, a cloud manager can move virtual servers between computers to optimize computer volatility within a cloud.",8261269
8266153,2012-09-11,15,B2,Determining and displaying application server object relevance,"In embodiments, the number of references to an object which is deployed into an application server framework may be determined by examining metadata extracted from configuration data sources within a multi-tier application framework. In embodiments, an object relevance value based on the extracted number of references to an object may be associated with the object. In embodiments, the number of references extracted from a data source may be weighted using a weight factor that is associated with the data source. In embodiments, the number of references to a source object may be extracted by traversing a source inheritance hierarchy and parsing the objects within the hierarchy. In embodiments, an object relevance display of a set of objects may be generated based in part on object relevance values of the set of objects. In embodiments, an object relevance display may be a molecular display, a flash tag cloud, and/or a source tree hierarchy.",8266153
8566826,2013-10-22,7,B2,System and method for synchronizing transient resource usage between virtual machines in a hypervisor environment,"A system and method for synchronizing transient resource usage between virtual machines, e.g. Java Virtual Machines (JVMs), running within a hypervisor. In accordance with an embodiment, the system allows for synchronizing garbage collection and code optimization to reduce transient processor (cpu) and memory usage. In accordance with an embodiment, the system comprises a computer; a hypervisor for executing virtual servers running JVMs; a communication channel between the virtual servers; wherein each virtual server further comprises non-transient and transient memory and a synchronization module. In accordance with an embodiment the synchronization modules schedule garbage collects and code optimizations to minimize overlaps, thereby reducing the peak transient memory and cpu usage and the resulting volatility of transient resource usage within a computer. In accordance with another embodiment, a cloud manager can move virtual servers between computers to optimize computer volatility within a cloud.",8566826
8583799,2013-11-12,27,B2,Dynamic cost model based resource scheduling in distributed compute farms,"Systems, methods and apparatuses (i.e., utilities) for use in performing dynamic cost model (DCM)-based scheduling of resources of a distributed computing system (e.g., server farms, computing clouds, and the like). In one arrangement, cost for consumption of a resource or type of resource of the system may be dynamically determined as a function of both a demand for and an availability of the resource. In this regard, changing demand for and/or availability of the resource over time can also adjust a cost for consumption of the resource. For instance, assigning a lower consumption cost to utilizing of a resource in low demand can benefit system operators by realizing increased use on little-used resources as well as users by allowing the users to take advantage of lower usage costs.",8583799
8639787,2014-01-28,20,B2,System and method for creating or reconfiguring a virtual server image for cloud deployment,"A system and method to convert a software application, such as a Java application into a virtual server image that is suitable for cloud deployment. In accordance with an embodiment, the system and method allows for building a hypervisor appliance containing a virtual machine running an application. In particular, the hypervisor appliance can be compatible with any hypervisor for server virtualization and the application virtual machine can be a Java Virtual Machine (JVM).",8639787
8776053,2014-07-08,32,B2,System and method to reconfigure a virtual machine image suitable for cloud deployment,"A system and method for reconfiguring a virtual server image suitable for cloud deployment. In accordance with an embodiment, the system comprises providing a virtual server image, which can be executed on one or a plurality of hypervisors, and which contains a bootable part of a virtual machine, a non-bootable part of the virtual machine, a software application code for a software application, and a software application data for the software application. Information in a virtual server image patch can be used to reconfigure the contents of the virtual server image from its original content to a reconfigured content, to create a reconfigured virtual server image. In a particular embodiment, the virtual machine can be a Java Virtual Machine.",8776053
8850528,2014-09-30,100,B2,Organizing permission associated with a cloud customer in a virtual computing infrastructure,Organizing permissions to authorize a subject to perform an action on an object in a cloud computing environment is described. A plurality of permissions associated with a cloud customer is created. A first set of permissions from the plurality of permissions is associated with one or more objects. Each of the first set of permissions describes an action performed on an object. A second set of permissions from the plurality of permissions is associated with one or more users. Each of the second set of permissions describes an action to be performed by one or more users.,8850528
8856294,2014-10-07,37,B2,System and method for converting a Java application into a virtual server image for cloud deployment,"A system and method to convert a software application, such as a Java application into a virtual server image that is suitable for cloud deployment. In accordance with an embodiment, the system and method allows for building a hypervisor appliance containing a virtual machine running an application. In particular, the hypervisor appliance can be compatible with any hypervisor for server virtualization and the application virtual machine can be a Java Virtual Machine (JVM).",8856294
8938540,2015-01-20,110,B2,Networking in a virtual computing infrastructure,"A cloud computing environment having a plurality of computing nodes is described. Upon receiving authorization, a plurality of virtual machines may be communicated to provide at least one virtual network to service to the plurality virtual machines. Each of the plurality of virtual machines communicates with a virtual network layer at a virtual interface via at least one virtual Ethernet (vEthernet), An IP gateway to a network is provided to the plurality of virtual machines. Communications between the fP gateway and the network are facilitated. Communications between a network control layer and at least one network are routed.",8938540
8972725,2015-03-03,97,B2,Security infrastructure for cloud services,"A framework for handling a secure interaction between components in a cloud infrastructure system that wish to transfer information between each other during processing of a customer's subscription order is described. The framework orders the security zones of components based on security levels and protects the transfer of information between components in security zones with different security levels. The assignment of a component to a security zone is based upon the sensitivity of the data handled by the components, the sensitivity of functions performed by the component, and the like.",8972725
8977679,2015-03-10,110,B2,Launching an instance in a virtual computing infrastructure,"Launching an instance in cloud computing environment having a plurality of computing nodes is described. At a user's home cloud system, a request is received from the user to launch an instance of an object. At the home cloud system, a designated remote cloud system is determined from a federated plurality of remote cloud systems based on the request. The request is translated into a format suitable for the designated remote cloud system. The translated request is communicated to the designated remote cloud system. The instance of the object is launched at the designated remote cloud.",8977679
9015114,2015-04-21,98,B2,Data synchronization in a cloud infrastructure,A synchronization infrastructure that synchronizes data stored between components in a cloud infrastructure system is described. A first component in the cloud infrastructure system may store subscription information related to a subscription order which may in turn be utilized by a second component in the cloud infrastructure system to orchestrate the provisioning of services and resources for the order placed by the customer. The synchronization architecture utilizes transactionally consistent checkpoints that describe the state of the data stored in the components to synchronize the data between these components.,9015114
9021009,2015-04-28,119,B2,Building a cloud computing environment using a seed device in a virtual computing infrastructure,"A cloud computing environment having a plurality of computing nodes is described. A seed device is connected to a network. From the seed device, a launching of a cloud computing management configuration is initiated. The seed device includes a repository of software. From the seed device, software is installed on one of the plurality of computing nodes to run a cloud computing management system. The software is loaded from one of the plurality of computing nodes onto each of the plurality of nodes. A computing node is selected from the plurality of computing nodes, to designate as a master node. Operations of the cloud computing management system is controlled from the master node.",9021009
9032069,2015-05-12,117,B2,Virtualization layer in a virtual computing infrastructure,"A cloud computing environment having a plurality of computing nodes is described. The plurality of computing nodes may be organized into a plurality of clusters, each of the plurality of clusters including a cluster controller. A virtual computing environment is created on each of the plurality of computing nodes. Communication with the virtual computing environment is enabled. An authorization to service a launch plan is received from a user. The launch plan includes at least one instance to launch. Bandwidth information is requested from each of the cluster controllers of the plurality of clusters. A score is computed for each of the plurality of clusters that responded to the requested bandwidth information. The launch plan is assigned to a cluster from the plurality of clusters based on the computed scores.",9032069
9069979,2015-06-30,115,B2,LDAP-based multi-tenant in-cloud identity management system,"A multi-tenant identity management (IDM) system enables IDM functions to be performed relative to various different customers' domains within a shared cloud computing environment and without replicating a separate IDM system for each separate domain. The IDM system can provide IDM functionality to service instances located within various different customers' domains while enforcing isolation between those domains. A cloud-wide identity store implemented as a single LDAP directory can contain identity information for multiple customers' domains. This single LDAP directory can store identities for entities for all tenants, in separate partitions or subtrees of the LDAP directory, each such partition or subtree being dedicated to a separate identity domain for a tenant. Components of the cloud computing environment ensure that LDAP entries within a particular subtree are accessible only to service instances that have been deployed to the identity domain that corresponds to that particular subtree.",9069979
9076168,2015-07-07,128,B2,Defining an authorizer in a virtual computing infrastructure,An authorizing entity is allowed to grant permission to a subject to perform an action on an object in a cloud computing environment. An authorizer is defined as the entity having granting authority to delegate a predetermined permission. A subject is defined as a group to whom the permission is being delegated. An object is defined upon which an action is authorized within the cloud computing environment. The action being authorized in the cloud computing environment is defined. Members of the subject group are authorized to perform the permitted action on the object.,9076168
9081951,2015-07-14,48,B2,"Mobile application, identity interface","Techniques for managing identities are provided. In some examples, identity management, authentication, authorization, and token exchange frameworks may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more identity management operations associated with an account of a service provider. Based at least in part on the requested operation and/or the particular service provider, an application programming interface (API) may be utilized to generate and/or perform one or more instructions and/or method calls for managing identity information of the service provider.",9081951
9087352,2015-07-21,128,B2,Objects in a virtual computing infrastructure,An action is performed on an object in a cloud computing environment having a plurality of computing nodes. A policy path is determined from at least one permission within a policy of a customer. A first delegation path is determined from within the determined policy path. The first delegation path is directed to at least one object permission for the object upon which the action is to be performed. An authorized user is assigned from a second delegation path from within the determined policy path. The second delegation path is directed to at least one user permission for the action to be performed.,9087352
9160749,2015-10-13,14,B2,System and method for providing whitelist functionality for use with a cloud computing environment,"A system and method for providing whitelist functionality for use with a cloud computing environment. In accordance with an embodiment, software applications being deployed to the cloud are restricted from using certain classes or application program interfaces (APIs). During provisioning by, e.g., a Java cloud services (JCS) infrastructure, or another component of the cloud environment, an application's resources, such as its classes or API calls, can be matched against a whitelist of acceptable resources. If the application fails to be validated against the whitelist, it will not be deployed to the cloud, and the customer/user notified accordingly. In accordance with an embodiment, a whitelist functionality can be packaged within a software development kit (SDK), which customers/users can use during development of their applications, to verify that the applications will comply with, or successfully validate against the whitelist, prior to attempting to deploy the applications to the cloud.",9160749
9171323,2015-10-27,141,B2,Organizing data in a virtual computing infrastructure,"Organizing data in a cloud computing environment having a plurality of computing nodes is described. An authorization to service a request is received. The request may be from a user for launching an instance. In response to receiving the authorization and based on the request, an image list is determined. The image list includes information corresponding to a plurality of machine images. At least one machine image is identified from the image list associated with a functional requirement of the request. The instance is launched at the at least one computing node. The at least one machine image is updated after the instance has been launched.",9171323
9189224,2015-11-17,13,B2,Forming an upgrade recommendation in a cloud computing environment,"A method, system, and computer program product for forming cloud upgrade recommendations. The method commences by initiating an environment monitoring agent to run on a plurality of nodes within a cloud environment. The monitoring agent checks periodically for changes in the environment. When changes are detected, a process forms an upgrade recommendation, and sends the upgrade recommendation to recipients. An instance image includes a runnable copy of an environment monitoring agent, and nodes run respective instances of the environment monitoring agent. An upgrade recommendation comprises an upgrade path, which in turn includes recommendation of a processor model, or a device, and/or an operating system version, a software component, a middleware component, or a driver. The upgrade recommendation is formed based on a detected presence of at least one of, a directory on a file system, or a file on a file system or on the basis of detected port usage.",9189224
9201639,2015-12-01,2,B2,System and method for service definition packages for use with a cloud computing environment,"A system and method for providing service definition packages for use with a cloud computing environment. In accordance with an embodiment, a cloud platform enables provisioning of enterprise software applications (e.g., Fusion Middleware applications) within a cloud environment. In an embodiment, enterprise applications can be packaged as service definition packages (SDP). Each SDP can include an application binary component, a metadata defining the application's service characteristics and requirements, and a plugin that enables the SDP to be installed into the cloud platform. The SDP can also include a virtual assembly that defines a topology and configuration for a set of virtual appliances. The application, as defined by its SDP, can be instantiated as one or more services that are then accessible by other (e.g., customer) applications within the cloud environment.",9201639
9202239,2015-12-01,139,B2,Billing usage in a virtual computing infrastructure,Billing usage of a cloud computing environment is described. Usage is metered of one or more resources within the cloud computing environment by one or more users. The one or more users may be associated with at least one entity. The metered usage of one or more cloud resources is converted to a revenue-generating value. The revenue-generating value is billed to the at least one entity associated with the one or more users. Revenue is collected from the at least one entity for the metered usage of one or more cloud resources. The collected revenue is shared with a plurality of parties.,9202239
9203866,2015-12-01,194,B2,Overage framework for cloud services,"Provisioning, managing and tracking of services provided by a cloud infrastructure system are described. A subscription request from a customer for one or more services provided by the cloud infrastructure system is received. Resources for the requested services are then provisioned. Resource usage information for the resources is collected and an overuse of the resources provisioned to the services in the subscription request, by a customer is determined. The overage information is provided to the customer.",9203866
9218616,2015-12-22,141,B2,Granting access to a cloud computing environment using names in a virtual computing infrastructure,Access to resources in a cloud computing environment having a plurality of computing nodes is described. A group of users is defined within the cloud computing environment. A first name is assigned to the group. At least one subgroup of users is defined from within the group. A second name is assigned to the at least one subgroup. The second name follows a hierarchical naming structure of the form/group/subgroup.,9218616
9219749,2015-12-22,158,B2,Role-driven notification system including support for collapsing combinations,"Embodiments of the invention relate to a method of implementing role-driven notification. The method includes storing, by a cloud infrastructure system including computing devices, notification templates. Each of the notification templates are associated with a role. The method further includes determining that a user is associated with a first role and a second role, determining that the first role is associated with a first notification template and the second role is associated with a second notification template. Further, the method includes combining the first template and the second template to generate a third template, based on the third template, generating a notification. The method then, sends the notification to the user.",9219749
9231946,2016-01-05,36,B2,Mobile cloud service architecture,"Techniques are described for implementing a cloud computer system to facilitate communication between a computing device (e.g., a mobile computing device) and enterprise computer systems. In certain embodiments, the cloud computer system may receive, from a computing device, a request for a service provided by an enterprise computer system. The cloud computer system may determine security authentication of a user for the requested service. A security protocol may be determined for a requested enterprise computer system and a security token may be generated for the request according to the determined security protocol. The request may be sent to the requested enterprise computer system. In some embodiments, security authentication for a request to an enterprise computer system may be determined based on previous authentication. The cloud computer system may be configured to communicate with several different enterprise computer systems according to their supported protocols (e.g., communication protocol and/or security protocol).",9231946
9232339,2016-01-05,10,B2,Mobile push notification,Systems and methods are described herein that provide a mobile push notification system that sends notifications to various types of mobile devices using a single cloud based interface. One example embodiment includes a registration logic configured to receive device data from a mobile device. A record of the device data is stored in a database. A token generator creates a registration token that identifies the mobile device. The registration logic is facilitates communication between the mobile device and a vendor service when the registration token is received from the mobile device.,9232339
9239814,2016-01-19,49,B2,System and method for creating or reconfiguring a virtual server image for cloud deployment,"A system and method to convert a software application, such as a Java application into a virtual server image that is suitable for cloud deployment. In accordance with an embodiment, the system and method allows for building a hypervisor appliance containing a virtual machine running an application. In particular, the hypervisor appliance can be compatible with any hypervisor for server virtualization and the application virtual machine can be a Java Virtual Machine (JVM).",9239814
9250884,2016-02-02,18,B2,Automatic deployment of software applications to meet regulatory compliance requirements,"A method, system, and computer program product for cloud-based deployments of software applications that are monitored for compliance with regulatory requirements. One exemplary method commences upon receiving an indication of a compliance corpus such as HIPPA or SOX, then mapping the compliance corpus to one or more predetermined configurations of a virtual compliance platform. Any of the particular predetermined configurations include steps, operations, and/or rules for provisioning infrastructure (e.g., using cloud-resident resources). After provisioning the virtual compliance platform based on the predetermined configuration, the provisioning operations further deploys a compliance monitor. The compliance monitor encapsulates the software application within the compliance monitor so as to monitor and/or log the operation and performance of the software application with respect to the compliance regulations. In some cases, a virtual compliance platform includes a virtual machine.",9250884
9253113,2016-02-02,216,B2,Customizable model for throttling and prioritizing orders in a cloud environment,"A method for controlling the provisioning of a service associated with a customer order is disclosed. The method may comprise receiving, by a cloud infrastructure system, an order for a service from a plurality of service provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices. Additionally, the method may comprise determining, by a computing device from the one or more computing devices, based upon a set of rules and system-related information, whether the order is to be forwarded for provisioning one or more resources for enabling the order. Then, based upon the determining, the method may forward the order for provisioning of the one or more resources or not forwarding the order for provisioning.",9253113
9268798,2016-02-23,15,B2,Support for cloud-based multi-tenant environments using connection labeling,"A system and method for connection labeling for use with connection pools, including support for cloud-based multi-tenant environments using connection labeling. In accordance with an embodiment, the system comprises a connection pool, including a plurality of connection objects which provide connections that software applications can use to make requests to access the database, wherein each of the connections can be labeled according to the configuration of particular applications; and a connection pool logic that identifies connections labeled as high-cost connections, and controls the creation or repurposing of high-cost connections to serve requests from the multiple tenants or tenant applications.",9268798
9270624,2016-02-23,2,B2,Cloud messaging services optimization through adaptive message compression,"Intelligent adjustment of compression levels of messages being brokered or otherwise handled by message service providers in a cloud-computing environment to strike a balance between the reduction in network usage and storage requirement resources owing to message compression on one hand and the increase in CPU resource usage owing to message compression on the other hand for reducing usage-based charges from the cloud customer's point of view and reducing the equipment and operational cost from the cloud provider's point of view (resulting in the ability of the provider to take on and/or retain customers). Determination of an “optimal” compression level that strikes an appropriate balance among resource usage may include consideration of a current messaging load (e.g., bytes of data per unit time), a current compression level, and current usage levels of one or more of the various resources.",9270624
9276942,2016-03-01,147,B2,Multi-tenancy identity management system,"A multi-tenant identity management (IDM) system enables IDM functions to be performed relative to various different customers' domains within a shared cloud computing environment and without replicating a separate IDM system for each separate domain. The IDM system can provide IDM functionality to service instances located within various different customers' domains while enforcing isolation between those domains. A cloud-wide identity store can contain identity information for multiple customers' domains, and a cloud-wide policy store can contain security policy information for multiple customers' domains. The multi-tenant IDM system can provide a delegation model in which a domain administrator can be appointed for each domain, and in which each domain administrator can delegate certain roles to other user identities belong to his domain. Service instance-specific administrators can be appointed by a domain administrator to administer to specific service instances within a domain.",9276942
9294482,2016-03-22,28,B2,External platform extensions in a multi-tenant environment,"Methods and systems are described for allowing third party developers to add extensions to a cloud service provider's software as a service (SaaS) services by editing an ‘empty’ config file according to a schema provided by the cloud service provider to form a delta file and then merging the delta file with an internal, full version of the config file. The full config file is then used to initialize and instantiate objects upon a restart of the cloud provider's services.",9294482
9319269,2016-04-19,229,B2,Security infrastructure for cloud services,"A framework for handling a secure interaction between components in a cloud infrastructure system that wish to transfer information between each other during processing of a customer's subscription order is described. The framework orders the security zones of components based on security levels and protects the transfer of information between components in security zones with different security levels. The assignment of a component to a security zone is based upon the sensitivity of the data handled by the components, the sensitivity of functions performed by the component, and the like.",9319269
9323517,2016-04-26,3,B2,System and method for dynamic modification of service definition packages with a cloud computing environment,"A system and method for dynamic modification of service definition packages for use with a cloud computing environment. In accordance with an embodiment, a cloud platform enables provisioning of enterprise software applications (e.g., Fusion Middleware applications) within a cloud environment. In an embodiment, enterprise applications can be packaged as service definition packages (SDP). To support maintenance of services (e.g., bug fixes, security updates, and configuration changes), a service's characteristics and requirements can be modified dynamically, by reconfiguring the cloud platform itself and/or by mounting a disk volume that corresponds to the service's SDP, and modifying its contents directly.",9323517
9357034,2016-05-31,9,B2,System and method for orchestration of services for use with a cloud computing environment,"A system and method for orchestration of services for use with a cloud computing environment. In accordance with an embodiment, a cloud platform enables provisioning of enterprise software applications within a cloud environment, including packaging enterprise applications as service definition packages (SDP), and instantiating the services using service management engines (SME). In an embodiment, an orchestration engine communicates with a plurality of SMEs to control the flow of service creation, provider dependency resolution, association of services and providers, and the life-cycle management of services within the cloud platform.",9357034
9391972,2016-07-12,18,B2,Multi-tenant application using hierarchical bean factory container,Various embodiments provide on premise and cloud deployment support for components that may not be multi-tenant enabled. A single application in a highly non-intrusive way without effecting application functional logic. On premise deployments can run with fixed default tenant and no tenant information needs to be captured anywhere anytime. The application code accesses the hierarchical bean factory to get any tenant specific or shared resources seamlessly without knowledge of multi-tenancy in functional code anywhere.,9391972
9397884,2016-07-19,228,B2,Workflows for processing cloud services,"Provisioning, managing and tracking of services provided by a cloud infrastructure system are described. A subscription order request from a customer for services provided by the cloud infrastructure system is received. A workflow is defined that includes steps to process the subscription order. The workflow enables a customer to gain access to services requested in a subscription order upon placing the subscription order without the customer having to wait until all the steps involved in processing the subscription order are complete.",9397884
9424024,2016-08-23,12,B2,System and method for elasticity management of services with a cloud computing environment,"A system and method for elasticity management of services for use with a cloud computing environment. In accordance with an embodiment, a cloud platform enables provisioning of enterprise software applications within a cloud environment, including packaging enterprise applications as service definition packages (SDP), and instantiating the services using service management engines (SME). In an embodiment, an elasticity manager can be used to determine the health of the services, and to take appropriate actions, including detecting events, issuing alerts and/or notifying the orchestration engine to manage the service lifecycle, e.g., to respond to an increased demand for particular services.",9424024
9448852,2016-09-20,14,B2,Managing virtual machines,"Tools and techniques for managing virtual machines, including without limitation virtual machines running in a cloud computing environment. Certain tools provide a user interface that allows a user to browse machine images to find an image that meets the user's needs. In some aspects, these tools and techniques can provide the ability for users to customize machine images to meet their own needs and/or to share their customized machine images with other users. In other aspects, these tools and techniques can provide users with the ability to export virtual machines for use on an actual computer system.",9448852
9467355,2016-10-11,225,B2,Service association model,"Enabling associations between cloud services in a computer network cloud infrastructure system is described. Cloud services can include infrastructure as a service (IAAS) storage and processing services, platform as a service (PAAS) database and Java services, and software as a service (SAAS) customer resource management services. Associations between the services can include automatically sharing security certificate-based keys and tokens or otherwise sharing data. Upon subscribing to a cloud system through an automated system, a user is prompted to select allowable associations between the selected services. The services are then provisioned and the user-selected associations are enabled.",9467355
9495143,2016-11-15,33,B2,External platform extensions in a multi-tenant environment,"Enforcing access control to individual extensions of services in a multi-tenant cloud environment by initializing objects for the extension based on public and private configuration files with service access rules that are merged is described. This allows third party vendors to specify payment rules for their own extensions while securely keeping the core extension configuration files. Tenants of the multi-tenant cloud environment can pick and choose which services to purchase, and the cloud environment automates the process of accessing the service using the third-party developer's tenant access list rules.",9495143
9495533,2016-11-15,55,B2,"Mobile application, identity relationship management","Techniques for managing identities are provided. In some examples, identity management, authentication, authorization, and token exchange frameworks may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more identity management operations associated with an account of a service provider. Based at least in part on the requested operation and/or the particular service provider, an application programming interface (API) may be utilized to generate and/or perform one or more instructions and/or method calls for managing identity information of the service provider.",9495533
9497145,2016-11-15,38,B2,System and method for supporting fault tolerant job management in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for supporting fault tolerant job management for use with a cloud computing environment. In accordance with an embodiment, the system comprises a job manager that manages the execution of jobs within the cloud environment including their job states, and a job manager service that provides an application program interface which receives administrative commands to be processed within the cloud environment as jobs. The job manager supports fault tolerant job processing including associating the jobs with checkpoints, recognizing a failover command for the jobs, and associating the jobs with work units of the administrative commands, and storing a state for each job upon processing each work unit of the command.",9497145
9501541,2016-11-22,212,B2,Separation of pod provisioning and service provisioning,"A method for POD provisioning and service provisioning is disclosed. The method may comprise storing, by a cloud infrastructure system, subscription order information from a customer identifying a service from a set of cloud services provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices, wherein the subscription order information includes customer-specific configuration. Additionally, the method may comprise determining, by a computing device from the one or more computing devices, a service associated with the subscription order information. Moreover, the method may comprise mapping a pre-provisioned anonymous deployment to the subscription order information, wherein the pre-provisioned anonymous deployment is specifically pre-provisioned for the determined service. Furthermore, the method may comprise creating, by a computing device from the one or more computing devices, a service instance specifically for the customer by configuring the pre-provisioned anonymous deployment with the customer-specific configuration.",9501541
9529657,2016-12-27,60,B2,Techniques for generating diagnostic identifiers to trace events and identifying related diagnostic information,"Techniques are described for determining diagnostic information (e.g., a diagnostic identifier) for one or more events related to operations performed in a cloud computer system. A diagnostic identifier may be generated based on diagnostic data corresponding to one or more attributes about an event. A computing operation may be performed to generate a code (e.g., a hash code) for each attribute in the diagnostic data. The generated code(s) may be combined to form a diagnostic identifier to identify the diagnostic data. A comparison may be performed by comparing each code in one diagnostic identifier to a code in another diagnostic identifier corresponding to an attribute for which the codes were generated. A measure of a match between the two identifiers may be determined using a result of the comparison. The measure of the match may enable tracing and analysis of one or more events occurring in the cloud computer system.",9529657
9529658,2016-12-27,60,B2,Techniques for generating diagnostic identifiers to trace request messages and identifying related diagnostic information,"Techniques are described for determining diagnostic information (e.g., a diagnostic identifier) for one or more requests in a cloud computer system. A diagnostic identifier may be generated based on parameter data corresponding to one or more parameters in a request. A computing operation may be performed to generate a code (e.g., a hash code) for each parameter in the parameter data. The generated code(s) may be combined to form a diagnostic identifier to identify the parameter data. A comparison may be performed by comparing each code in one diagnostic identifier to a code in another diagnostic identifier corresponding to a parameter for which the codes were generated. A measure of a match between the two identifiers may be determined using a result of the comparison. The measure of the match may enable tracing and analysis of one or more requests in the cloud computer system.",9529658
9529702,2016-12-27,5,B2,System to enable multi-tenancy testing of business data and validation logic on the cloud,"An adapter can execute a test script in parallel relative to separate tenant installations in a multi-tenant environment. Such tenant installations can be established within a cloud computing environment. Multiple tenant installations may share some installation components, such as an application server and/or a database, so that these shared installation components are not duplicated. While executing the test script in parallel, the adapter can translate selected values for each test script execution so that those values are distinguished from corresponding values within other test script executions. The values can be translated to reflect the identity of the tenant whose installation the test script execution targets. Furthermore, while executing the test scripts in parallel, the adapter can cause the test script executions to synchronize at specified points within the test script, so that all of the test script executions are guaranteed to have executed to a common point before proceeding.",9529702
9542400,2017-01-10,213,B2,Service archive support,"Embodiments of the present invention are directed to systems and methods for providing archival support for one or more services provided by a cloud infrastructure system. One such method comprises receiving a message corresponding to an archive trigger event, and determining based on the message one or more services subscribed to by a customer of a cloud infrastructure system which are to be archived. The method further comprises sending an instruction to the one or more services to archive customer information, and storing each archive in an archive directory accessible to the customer.",9542400
9544188,2017-01-10,6,B2,System and method for webtier providers in a cloud platform environment,"Described herein is a system and method for supporting a webtier provider in a cloud computing environment. In accordance with an embodiment, the service types made available in a cloud platform (e.g., CloudLogic) domain can include information which describes dependency on a webtier provider, which in turn provides load-balancing capability to a service whose deployment may span multiple virtual machines. A webtier provider can associate one or more provisioned services with a webtier runtime, to satisfy the webtier dependency of a service. After a service is provisioned, a webtier provider service management engine (SME) can associate the service with a webtier runtime by creating a configuration therein. The webtier runtime can subsequently provide a single point of access to the service, including load-balancing requests to service nodes, or providing support for additional capabilities such as failure detection and failover.",9544188
9547838,2017-01-17,14,B2,Automated generation of a three-dimensional space representation and planogram verification,"The present disclosure provides an automated scheme for generating and verifying a three-dimensional (3D) representation of a target space. In one embodiment, the automatic generation of a 3D representation of a target space includes receiving target space data from one or more mobile data capture devices and generating a local point cloud from the target space data. In one embodiment, the local point cloud is incorporated into a master point cloud. In one embodiment, a polygon mesh is generated using the master point cloud and the polygon mesh is rendered, using a plurality of visual images captured from the target space, which generates the 3D representation. In one embodiment, the automatic verification includes comparing a portion of the 3D representation with a portion of an approved layout, and identifying one or more discrepancies between the portion of the 3D representation and the portion of the approved layout.",9547838
9569193,2017-02-14,8,B2,System and method for patching java cloud services for use with a cloud computing environment,"A system and method for patching cloud services for use with a cloud computing environment. In accordance with an embodiment, a cloud environment includes a cloud services infrastructure, which allows a suite of software applications, middleware, and database offerings to be delivered to customers in a self-service, elastically scalable manner. Over time, it may become necessary to update one or more of the deployed services. In accordance with an embodiment, services can be patched using a two phase approach. During an offline phase, patches are used to update shared components, such as middleware volumes, without disrupting any currently running services. Subsequently, during an online phase, patched components are enabled on all service hosts, and any necessary domain update/upgrade operations are invoked.",9569193
9588820,2017-03-07,15,B2,Cloud architecture recommender system using automated workload instrumentation,"A method, system, and computer program product for of configuring cloud computing platforms. One such method serves for recommending alternative computing architectures for a selected application using automated instrumentation of the application under an abstracted workload. The method commences by measuring workload characteristics of the selected application using pre-determined performance parameters. Additional performance parameters to be measured are selected based on previous measurements, and further analysis includes instrumenting the application to provide measurement instruments corresponding to the respective selected additional performance parameters. Such hardware- or software-based instruments are used for determining a baseline set of performance metrics by measuring the performance of the selected application on a first (e.g., currently-in-use) computing architecture, then, measuring the performance of the application on other proposed computing architectures. Charts and reports are used for comparing the performance of the selected application on the currently-in-use architecture to any of the other proposed computing architectures.",9588820
9600652,2017-03-21,76,B2,"Mobile application, identity interface","Techniques for managing identities are provided. In some examples, identity management, authentication, authorization, and token exchange frameworks may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more identity management operations associated with an account of a service provider. Based at least in part on the requested operation and/or the particular service provider, an application programming interface (API) may be utilized to generate and/or perform one or more instructions and/or method calls for managing identity information of the service provider.",9600652
9612817,2017-04-04,5,B2,System and method for providing a physical plugin for use in a cloud platform environment,"In accordance with an embodiment, described herein are systems and methods for simulating a cloud environment on a physical platform. In an embodiment, a physical assembly is provided within a cloud environment and a physical plug-in configured to provide a virtual assembly builder-like environment on a physical platform. The physical assembly is an installable software suite including software configured to support provisioning of applications for providing services. The physical plug-in is configured to enable installation of the physical assembly on the physical platform. The physical plug-in is also configured to enable support for administering the services of the cloud platform component via the software installed from the physical assembly.",9612817
9619540,2017-04-11,267,B2,Subscription order generation for cloud services,A framework for managing service components associated with a service subscribed to by a customer in a cloud infrastructure system is disclosed. The framework generates a subscription order for the customer based upon receiving a selection of service components from the customer. The framework identifies resource metrics associated with the service components selected by the customer and generates a subscription order for the customer based upon the service components and the resource metrics.,9619540
9621435,2017-04-11,265,B2,Declarative and extensible model for provisioning of cloud based services,"A method for offering a set of services is disclosed. The method may comprise storing, by a cloud infrastructure system, subscription order information identifying a service from a set of services provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices. A computing device from the one or more computing devices may determine a service declaration for the service, the service declaration comprising information indicative of procedures for provisioning resources for enabling the service. A computing device from the one or more computing devices may cause the service to be provisioned based on the service declaration.",9621435
9633399,2017-04-25,73,B2,Method and system for implementing a cloud-based social media marketing method and system,"Disclosed is an approach for implementing a system, method, and computer program product for performing social marketing using a cloud-based system. The approach is capable of accessing data across multiple types of internet-based sources of social data and commentary and to perform analysis upon that data. A social marketing campaign can then be generated and implemented in an integrated manner using the system. This permits realtime reaction to trends, with rapid ability to react to opportunities in the marketplace.",9633399
9634965,2017-04-25,38,B2,System and method for providing a job manager for use with a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing a job manager for use with a cloud computing environment. In accordance with an embodiment, the system include a job manager that manages the execution of jobs within the cloud environment including their job states. A job manager service provides an application program interface which receives administrative commands to be processed within the cloud environment as jobs. The job manager updates a job registry, including registering instances of the administrative commands together with unique job identifiers, and returning the job identifiers so that a user can retrieve command process status, and the result of the job can be stored in the job registry. For example, the job manager can perform housekeeping tasks, such as purging jobs according to a retention policy, performing any necessary cleanup, and performing security checks to ensure tasks are authorized.",9634965
9646069,2017-05-09,115,B2,Role-driven notification system including support for collapsing combinations,"Embodiments of the invention relate to a method of implementing role-driven notification. The method includes storing, by a cloud infrastructure system including computing devices, notification templates. Each of the notification templates are associated with a role. The method further includes determining that a user is associated with a first role and a second role, determining that the first role is associated with a first notification template and the second role is associated with a second notification template. Further, the method includes combining the first template and the second template to generate a third template, based on the third template, generating a notification. The method then, sends the notification to the user.",9646069
9667470,2017-05-30,266,B2,Failure handling in the execution flow of provisioning operations in a cloud environment,"A method for handling failures in the execution flow of provisioning operations is disclosed. The method may comprise receiving, by a cloud infrastructure system, an error from the execution flow of provisioning a service from a plurality of service provided by the cloud infrastructure system, the cloud infrastructure system comprising one or more computing devices. Additionally, the method may further comprise determining, by a computing device from the one or more computing devices, a specific service associated with the error and determining an error classification type associated with the error based on the specific service. Subsequently, the method may further comprise performing, by the computing device, a corrective action based on the specific service and the error type.",9667470
9667746,2017-05-30,15,B2,Executing a debugging operation during deployment of a blueprint within a cloud system,"Tools are provided to assist users of cloud computing systems to create, monitor, and debug the resource instances they need. Specifically, resource instances are created in a cloud computing system based on a blueprint that is provided to a blueprint processor. The blueprint declaratively defines the resources that the user needs to have created in the cloud. Based on the information contained in blueprint, the blueprint processor causes the cloud to orchestrate the creation of resource instances, doing so in parallel when possible, and to configure those resource instances as specified in blueprint. Techniques are described for generating a timeline to convey status during the deployment process, and for performing debugging operations.",9667746
9690566,2017-06-27,13,B2,System and method for virtual assembly patching in a cloud environment,"Described herein is a system and method for virtual assembly patching in a cloud environment. In accordance with an embodiment, a virtual assembly builder can be used to virtualize installed components in a reference environment, and then deploy those components into another destination environment. A user can capture the configuration and binaries of software components into software appliance artifacts, which can be grouped and their relationships defined as software assembly artifacts. In accordance with an embodiment, assemblies stored as disk images in a repository can be patched by creating replacement images, importing the replacement images into the virtualization environment, and then performing a replacement or swap of an instance's existing virtual disks, with patched versions of those disks.",9690566
9690607,2017-06-27,8,B2,System and method for generic product wiring in a virtual assembly builder environment,"Described herein is a system and method for generic product wiring in a cloud environment. In accordance with an embodiment, a virtual assembly builder can be used to virtualize installed components in a reference environment, and then deploy those components into another destination environment. A user can capture the configuration and binaries of software components into software appliance artifacts, which can be grouped and their relationships defined as software assembly artifacts. In accordance with an embodiment, a generic product introspector plugin allows users to specify at introspection, during creation of a virtual assembly, one or more metadata properties to be exposed for editing and configuration by scripts, during a subsequent rehydration of the virtual assembly. The properties exposed for editing and configuration by scripts can be used during instantiation of an instance of the assembly to define one or more inputs and outputs for the instance.",9690607
9692717,2017-06-27,39,B2,System and method for supporting detachable administration commands in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for supporting detachable administration commands for use with a cloud computing environment. In accordance with an embodiment, a job manager service provides an application program interface which receives administrative commands to be processed within the cloud environment as jobs, wherein each instance of the administrative commands is associated with a unique job identifier. A command line interface allows a user to issue a command to be processed within the cloud environment as a job, detach the command line interface from the job being processed, and subsequently reattach the command line interface to the job being processed by indicating the job's unique job identifier. For example, several independent parallel commands can be executed together from one console or one script, and users can check on, or wait for a result of some task.",9692717
9692789,2017-06-27,26,B2,Techniques for cloud security monitoring and threat intelligence,"Systems and methods for cloud security monitoring and threat intelligence in accordance with embodiments of the invention are disclosed. In one embodiment, a process for monitoring and remediation of security threats includes generating a threat model using a first portion of activity data, identifying, based upon the threat model, a threat using a second portion of activity data, selecting a security policy to implement in response to the identified threat, identifying cloud security controls in a remotely hosted cloud application server system to modify in accordance with the selected security policy, establishing a secure connection to the remotely hosted cloud application server system using login credentials associated with a tenant account with the cloud application, and sending instructions to the remotely hosted cloud application server system to set the identified cloud security controls with respect to the tenant account in accordance with the selected security policy.",9692789
9704165,2017-07-11,91,B2,Systems and methods for determining value of social media pages,"Systems and methods for evaluating the effectiveness of social media pages. Users of social media systems review and publish various kinds of content on social media pages, including various messages, audio clips, video clips, polls, web links, etc. A social media page evaluation system hosted on a physical server or a cloud receives a social media page that is to be evaluated, and provides results of an evaluation process. The evaluation process involves processing of various criteria and parameters that characterize engagements and interactions between users of social media pages. Results of an evaluation process include qualitative and quantitative attributes in connection with evaluating the effectiveness of published content on social media pages. Such results are useful for purposes of enriching content in social media pages, resulting in greater network traffic due to increased engagements and interaction among users of social media pages.",9704165
9734224,2017-08-15,279,B2,Data synchronization in a cloud infrastructure,A synchronization infrastructure that synchronizes data stored between components in a cloud infrastructure system is described. A first component in the cloud infrastructure system may store subscription information related to a subscription order which may in turn be utilized by a second component in the cloud infrastructure system to orchestrate the provisioning of services and resources for the order placed by the customer. The synchronization architecture utilizes transactionally consistent checkpoints that describe the state of the data stored in the components to synchronize the data between these components.,9734224
9742688,2017-08-22,4,B2,System and method for supporting service resources and feature sets in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing service resources for consumption by an application deployed to a service in a cloud environment. A service definition package (SDP) for the service can specify a dependency on a provider, and include association rules that define actions to be taken with regard to a runtime of the provider. When the service is provisioned, a service resource type which is derived from a provider SDP can be associated with the service. As a result of the association, a service resource can be automatically created from the service resource type in accordance with the association rules, to provide resources for consumption by the application. In accordance with an embodiment, the provider SDP can include a plurality of feature sets associated with different sets of configurable properties, which allows different provider types or service resource types to be created.",9742688
9760358,2017-09-12,10,B2,System and method for test to production support in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for replicating a source service domain to a target service domain in a cloud computing platform environment. In accordance with an embodiment, the system comprises a cloud platform component provided as an installable software suite within the cloud environment, that supports provisioning of enterprise applications; a test to production (T2P) framework module that includes a plurality of T2P plugins and a PaaS plugin; and a user interface where an administrator or a user can invoke the plugins to replicate a source service domain to a target service domain. The system allows a user to manually customize move plans for service domain configurations based on the requirements of the target service domain, and recreate the configurations in the target service domain in accordance with the customized move plans.",9760358
9767312,2017-09-19,16,B2,System and method for integrating a cloud platform environment with an application server or other environment,"In accordance with an embodiment, described herein is a system and method for integrating a cloud platform with an application server or other environment, for example, a WebLogic environment. A cloud platform runtime including a cloud server can be embedded within an application server container, so that the cloud server domain can execute within the application server domain. An integration bridge and integration components support integration between the cloud server and the application server. Cloud server components can be used as part of the application server domain, including for example, administration, logging and diagnostics, security, and configuration management.",9767312
9767494,2017-09-19,196,B2,Organizing data in a virtual computing infrastructure,"Organizing data in a cloud computing environment having a plurality of computing nodes is described. An authorization to service a request is received. The request may be from a user for launching an instance. In response to receiving the authorization and based on the request, an image list is determined. The image list includes information corresponding to a plurality of machine images. At least one machine image is identified from the image list associated with a functional requirement of the request. The instance is launched at the at least one computing node. The at least one machine image is updated after the instance has been launched.",9767494
9769139,2017-09-19,8,B2,On-premises agent for mobile cloud service,"Systems, devices, and methods are disclosed for an agent device within a company's network firewall to initiate an HTTP connection with a cloud-based gateway and then upgrade the connection to a WebSockets protocol in order to have an interactive session. Over this interactive session, a mobile device, which connects to the cloud-based intermediary, can request data from servers inside the company's firewalls. Because the firewall is traversed using HTTP protocols (with WebSockets), it can be as safe as letting employees browse the web from inside the company's network.",9769139
9781122,2017-10-03,44,B1,Multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request from a client for an identity management service, authenticates the request, and accesses a microservice based on the request. The system determines, based on the request, a tenancy of the client, a tenancy of a user, and a tenancy of a resource. The system retrieves data from the determined tenancies as required to process the request, where the data is retrieved by the microservice using a connection pool that provides connections to the database. The system then performs the identity management service by the appropriate microservice responsible for processing the received request.",9781122
9792338,2017-10-17,250,B2,Role assignments in a cloud infrastructure,"Provisioning, managing and tracking of services provided by a cloud infrastructure system are described. A subscription order request from a customer for services provided by the cloud infrastructure system is received. A separation of roles performed by different customer entities in a customer's organization when the customer subscribes to services in the cloud infrastructure system is determined. The roles relate to providing information about different portions of the subscription order by the customer entities. Upon completion of the assigned roles by the relevant customer entities, the subscription order is provisioned to the customer.",9792338
9807041,2017-10-31,40,B2,System and method for providing a user messaging service for use with a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing a user messaging service for use with a cloud computing environment. In accordance with an embodiment, the system includes a notifier component, which receives information describing notifiable events that occur within the cloud environment during the provisioning of the enterprise applications, and communicates the information to a user messaging service at a user messaging server. The user messaging service is configured, according to one or more user communication preferences, to communicate to users, notifications describing the notifiable events, via one or more channels according to the preferences associated with the users. For example, a cloud account user can indicate a preference that status notifications for that user, such as completion of an operation or operational alerts, be communicated via one or more preferred channels, for example email, instant messaging, or social media.",9807041
9817994,2017-11-14,16,B2,System and method for integrating a database with a service deployed on a cloud platform,"Described herein are systems and methods for integrating a database into a cloud computing environment. In accordance with an embodiment, a system includes a service management engine (SME) configured to execute in the cloud environment and to access a provider type including coordinates to a database and authentication information for the database. When a service deployed to the cloud environment requests use of a database, the provider type can trigger creation of the database and a schema for use by the associated provider. In accordance with an embodiment, the provider type can include coordinates to a container database (CDB) and authentication information for the CDB. When a service deployed in the cloud environment requests a database, the provider type can trigger creation, via the CDB, of a pluggable database (PDB), with a schema for use by the service.",9817994
9825964,2017-11-21,48,B2,External platform extensions in a multi-tenant environment,"Enforcing access control to individual extensions of services in a multi-tenant cloud environment by initializing objects for the extension based on public and private configuration files with service access rules that are merged is described. This allows third party vendors to specify payment rules for their own extensions while securely keeping the core extension configuration files. Tenants of the multi-tenant cloud environment can pick and choose which services to purchase, and the cloud environment automates the process of accessing the service using the third-party developer's tenant access list rules.",9825964
9838370,2017-12-05,271,B2,Business attribute driven sizing algorithms,"A cloud infrastructure system includes one or more computing devices and is configured to receive subscription order information related to one or more services subscribed to by a customer of the cloud infrastructure system, the service selected from one or more services provided by the cloud infrastructure system. The cloud infrastructure system receives a set of one or more mapping rules configured to map business attributes to resource provisioning information for one or more of the one or more services provided by the cloud infrastructure system. The cloud infrastructure system determines whether one or more business attributes in the subscription order information satisfy one or more mapping rules in the set of mapping rules and generates resource provisioning information for one or more resources associated with the one or more services based on resource provisioning information in the one or more mapping rules satisfied by the one or more business attributes in the subscription order information.",9838370
9838376,2017-12-05,54,B1,Microservices based multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request for performing an identity management service, where the request includes a call to an application programming interface (“API”) that identifies the identity management service and a microservice configured to perform the identity management service. The system authenticates the request, accesses the microservice, and performs the identity management service by the microservice.",9838376
9838377,2017-12-05,54,B1,Task segregation in a multi-tenant identity and data security management cloud service,"A system provides cloud-based identity and access management. The system receives a request to perform an identity management service, and accesses a microservice based on the identity management service. The system determines one or more real-time tasks and one or more near-real-time tasks that are required to be executed to complete the identity management task. The system synchronously executes the one or more real-time tasks by the microservice, and sends the one or more near-real-time tasks to a queue to be asynchronously executed.",9838377
9843487,2017-12-12,13,B2,System and method for provisioning cloud services using a hybrid service management engine plugin,"Described herein is a system and method for provisioning or controlling services using a hybrid service management engine (SME) plugin. In accordance with an embodiment, SMEs provide a means by which service types can be plugged into a cloud environment. For example, an SME can control a service-specific lifecycle, including provisioning, management, and monitoring of a service type. In accordance with an embodiment, an SME plugin associated with a service type can extend a hybrid SME plugin, to delegate one or more lifecycle operations to be controlled with shell or other scripts. Since a service provider can be associated with an SME that is used for the lifecycle and configuration of its services, the use of a hybrid SME plugin allows shell scripts to be leveraged to assist in the provisioning and control of those services.",9843487
9847905,2017-12-19,7,B2,System and method for identity management providers in a cloud platform environment,"Described herein is a system and method for supporting an identity management provider in a cloud computing environment. In accordance with an embodiment, an identity management (IDM) provider can provide an identity store (e.g., LDAP directory) configuration for use by a cloud platform (e.g., CloudLogic) service. In accordance with an embodiment, the IDM provider can centrally manage one or more identity store configurations, and supply a particular configuration to the orchestration engine when a service is being provisioned, so that the service can then be launched with an appropriate identity store. This allows a platform administrator to specify identity store configurations once and in one place, instead of having to create an identity store configuration for each service.",9847905
9851953,2017-12-26,37,B2,Cloud based editor for generation of interpreted artifacts for mobile runtime,One embodiment is a system that accesses an application development user interface (“UI”) through a browser. The application development UI is hosted by a web-based application development server in a cloud system that provides an application development framework (“ADF”). The system develops the application through the application development UI. The application is developed with the ADF and is configured to be downloaded from a download location in the cloud system. The application is configured to be downloaded on a device as a native application.,9851953
9858174,2018-01-02,86,B2,Updatable native mobile application for testing new features,"For cloud development tools building native mobile applications, it is often useful to test out parts of an application on a physical device. Systems and methods are provide for providing an native application that allows portions of itself to uptake newly developed features allowing rapid testing of these features.",9858174
9871800,2018-01-16,12,B2,System and method for providing application security in a cloud computing environment,"In accordance with an embodiment, described herein is a system and method for providing application security in a cloud computing or other environment. A plurality of hot-spot configurations define API usages which, for security reasons, are of interest to be monitored at runtime, such as invocations of particular methods that are likely to be used to attempt unauthorized access. Upon a user application being received for deployment to the cloud environment, an application compiler determines, for API usages expressed as method invocations within the source code of the application, one or more hot-spot configurations and associated policies or actions. The application compiler can then inject the user application to provide a security manager that, during runtime, monitors the methods and values invoked, and communicates with one or more security extensions to grant or deny access.",9871800
9886254,2018-02-06,6,B2,Incremental provisioning of cloud-based modules,"A method of provisioning cloud-based software may include receiving provisioning information for provisioning a cloud-based software package, and determining modules that are part of the software package. The method may also include identifying a subset of the plurality of modules requiring parameters for provisioning that are included in the provisioning information, and provisioning the first set of modules using at least some of the parameters. The method may additionally include identifying a subset of modules requiring parameters that are not included in the provisioning information, and providing a self-service application configured to receive, at a later time, the parameters that are not included in the provisioning information and provision the second set of modules.",9886254
9894021,2018-02-13,5,B2,Cloud messaging services optimization through adaptive message compression,"Intelligent adjustment of compression levels of messages being brokered or otherwise handled by message service providers in a cloud-computing environment to strike a balance between the reduction in network usage and storage requirement resources owing to message compression on one hand and the increase in CPU resource usage owing to message compression on the other hand for reducing usage-based charges from the cloud customer's point of view and reducing the equipment and operational cost from the cloud provider's point of view (resulting in the ability of the provider to take on and/or retain customers). Determination of an “optimal” compression level that strikes an appropriate balance among resource usage may include consideration of a current messaging load (e.g., bytes of data per unit time), a current compression level, and current usage levels of one or more of the various resources.",9894021
9898344,2018-02-20,4,B2,"System and method for providing configuration modularity in an application server, cloud platform, or other environment","In accordance with an embodiment, described herein is a system and method for providing configuration modularity in an application server, cloud platform, or other environment. For example, in a cloud computing environment, application server modules, e.g., WebLogic Server or GlassFish modules, can be embedded within the environment to provide various cloud platform functionalities. In accordance with an embodiment, the system comprises a configuration modularity logic for use in determining, for a particular application or service deployment, a configuration of application, module or service components, including determining if a configuration is provided by a global or domain configuration, determining if annotations are provided by the particular application or service deployment for use in configuring the application, module or service components, and/or determining if a default configuration is provided for use with the particular application or service deployment.",9898344
9904534,2018-02-27,13,B2,Inter-tenant and intra-tenant flock management,"Techniques are described for inter-tenant and intra-tenant software management services in a cloud environment. In an embodiment, a network service determines a target end state for a software product that is deployed by a set of one or more tenants. The network service generates, for the set of one or more tenants, a cacheable object for updating the software product to the target end state. The network service generates, for a particular tenant in the set of one or more tenants, tenant-specific configuration data for applying configurations associated with the respective tenant and target-specific configuration data for applying configurations associated with a respective deployment of the software product. The network service sends the cacheable object to each tenant of the set of one or more tenants and the configuration data to the particular tenant.",9904534
9917810,2018-03-13,38,B2,Common aggregator framework for SMS aggregators,"A method, system, and computer program product for short messaging service (SMS) aggregation system setup. A computing platform (e.g., a server, a multi-processor server, a cloud array, a processor, etc.) is configured to receive messages over a network (e.g., an aggregator carrier network) and to deliver the messages to a processing entity executing on the computing platform. The processing entity receives messages comprising a set of SMS configuration parameters such as SMS configuration parameters to identify an SMS aggregator identifier and SMS configuration parameters comprising an aggregator network type and/or an aggregator carrier name. The SMS configuration parameters are stored for later retrieval and used when formatting and sending SMS messages.",9917810
9935959,2018-04-03,93,B2,Cloud service custom execution environment,"Techniques are described for implementing a cloud computer system to provide access to a custom execution environment for execution of custom executable instructions. Users may be able to configure one or more different types of template execution environments, e.g., a virtual machine environment, each of which can be used to establish a type of custom execution environment. Users may configure the template execution environment with regard to settings, states, resources, permissions, or other criterion related to an execution environment. Upon request, a custom execution environment (e.g., a child execution environment) may be established for running one instance of a custom executable instruction. The custom execution environment may be based on the template execution environment. The custom execution environment may provide a secure, isolated environment for execution of a custom executable instruction. Access permissions for the custom execution environment may be configurable depending on a type of execution environment desired.",9935959
9948571,2018-04-17,21,B2,System and method for cloud connection pool,"Today's cloud software, especially cloud management software, faces a complex, distributed, cross platform environment with extremely diversified software components. Cloud Connection Pool (CCP) is a technique to obtain a connection in such an environment and is more complex than a traditional connection pool. CCP allows requesting components to establish connections to target components. CCP uses cloud mapping data that associates cloud components with each other and stores pool data that identifies connection pools for components (or “managing components”) that manage target components. In response to a request for a connection from a requesting component, the CCP determines a managing component that is associated with the requested target component and identifies (or creates) a connection pool that is associated with the managing component. The CCP then retrieves a connection from the connection pool and returns the connection to the requesting component.",9948571
9961011,2018-05-01,305,B2,"System and method for supporting multi-tenancy in an application server, cloud, or other environment","In accordance with an embodiment, described herein is a system and method for supporting multi-tenancy in an application server, cloud, on-premise, or other environment, which enables categories of components and configurations to be associated with particular application instances or partitions. Resource group templates define, at a domain level, collections of deployable resources that can be referenced from resource groups. Each resource group is a named, fully-qualified collection of deployable resources that can reference a resource group template. A partition provides an administrative and runtime subdivision of the domain, and contains one or more resource groups. Each resource group can reference a resource group template, to bind deployable resources to partition-specific values, for use by the referencing partition. A tenant of the application server or cloud environment can be associated with a partition, or applications deployed therein, for use by that tenant.",9961011
9965614,2018-05-08,108,B2,"Mobile application, resource management advice","Techniques for a resource management advice service are provided. In some examples, resource management advice and/or instructions may be provided for use with mobile devices, mobile applications, cloud applications, and/or other web-based applications. For example a mobile client may request to perform one or more resource management operations associated with a service provider. Based at least in part on the requested operation and/or the particular service provider, advice and/or instructions for managing the resource may be provided.",9965614
9967154,2018-05-08,161,B2,Advanced customer support services—advanced support cloud portal,"Administrative tasks and services associated with computer systems are simplified and streamlined with a platform architecture that supports remote administration, development, and deployment of services. A system is configured with a support cloud platform to allow automation of tasks and services and the reuse of components. The platform generates, stores, deploys, executes, and monitors services through their complete life cycle. Services may be designed, made available for deployment, deployed to a customer, executed and monitored using the platform.",9967154
9971618,2018-05-15,38,B2,System and method to reconfigure a virtual machine image suitable for cloud deployment,"A system and method for reconfiguring a virtual server image suitable for cloud deployment. In accordance with an embodiment, the system comprises providing a virtual server image, which can be executed on one or a plurality of hypervisors, and which contains a bootable part of a virtual machine, a non-bootable part of the virtual machine, a software application code for a software application, and a software application data for the software application. Information in a virtual server image patch can be used to reconfigure the contents of the virtual server image from its original content to a reconfigured content, to create a reconfigured virtual server image. In a particular embodiment, the virtual machine can be a Java Virtual Machine.",9971618
9973451,2018-05-15,45,B2,System and method for providing administration command progress status in a cloud platform environment,"In accordance with an embodiment, described herein is a system and method for providing administrative command progress status for use with a cloud computing environment. In accordance with an embodiment, a job manager service provides an application program interface which receives administrative commands to be processed within the cloud environment as jobs, wherein each instance of the administrative commands is associated with a unique job identifier. A command line interface allows a user to issue a command to be processed within the cloud environment as a job. During progress of a job associated with an annotated command, a status associated with the progress of the job is determined and provided to the command line interface. For example, the system can provide job progress status during these operations, to reassure the user that the operation is proceeding normally.",9973451
9977700,2018-05-22,21,B2,System and method for providing an application programming interface for deploying a service bus artifact from a local development environment to a cloud environment,"In accordance with an embodiment, described herein is a system and method for deploying a service bus artifact from a local development environment to a service bus instance in a cloud environment. A deployment API can be plugged into the local development environment to perform a plurality of steps required for deploying the service bus artifact, including enabling communication from the local development environment to pass through a corporate firewall. The plurality of steps can be wrapped in a single service call to the service bus instance; and can include creating a session, uploading the service bus artifact, importing the uploaded service bus artifact, executing customization, and activating the session. In the event of a failure of any step, the service call can abort. The deployment API is generic and can be plugged into a plurality of development products.",9977700
